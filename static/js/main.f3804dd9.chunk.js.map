{"version":3,"sources":["services/auth.header.ts","navigation/navDash/NavDash.tsx","services/tab.service.ts","services/auth.service.ts","pages/login/Login.tsx","enums/WidgetsEnum.ts","pages/store/Store.tsx","reducers/actionTypes.ts","reducers/actions.ts","services/widget.service.ts","tab_facebook/TabNavigation.tsx","utils/LogUtils.ts","widgets/facebook/FacebookWidget.tsx","enums/ModeEnum.ts","widgets/facebook/groups/GroupsTab.tsx","widgets/facebook/FacebookAPI.ts","widgets/facebook/events/EventsTab.tsx","components/detailComponent/ComponentWithDetail.tsx","widgets/utils/DeleteWidget.tsx","widgets/Widget.tsx","widgets/utils/circular-progress/CircularProgressBar.tsx","widgets/steam/details/GameDetails.tsx","widgets/steam/SteamWidget.tsx","widgets/calendar/emptyWidget/EmptyCalendarWidget.tsx","widgets/calendar/CalendarWidget.tsx","utils/DateUtils.ts","widgets/rss/article/RSSArticle.tsx","widgets/rss/emptyWidget/EmptyRSSWidget.tsx","widgets/rss/RSSWidget.tsx","hooks/localStorageHook.ts","widgets/strava/activity/StravaActivity.tsx","widgets/strava/StravaWidget.tsx","widgets/weather/emptyWidget/EmptyWeatherWidget.tsx","widgets/weather/WeatherWidget.tsx","widgets/weather/forecast/Forecast.tsx","tab/TabDash.tsx","Dash.tsx","reducers/tabReducer.ts","reducers/store.ts","registerServiceWorker.ts","index.tsx"],"names":["authHeader","localStorage","getItem","user","JSON","parse","accessToken","headers","Authorization","NavDash","props","useState","tab","label","setLabel","isToggled","toggle","NavItem","className","NavLink","onClick","onTabClicked","onDoubleClick","id","tabOrder","axios","post","process","updateTab","then","onChange","event","target","value","Button","delete","onTabDeleted","login","username","password","response","data","setItem","stringify","logout","removeItem","window","location","reload","getCurrentUser","Login","setUsername","setPassword","loading","setLoading","message","setMessage","htmlFor","type","name","e","disabled","AuthService","error","resMessage","toString","role","WidgetTypes","Store","Object","keys","map","key","isNaN","parseInt","Card","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","onWidgetAdded","TOGGLE_TAB","toggleSelectedTab","payload","updateWidgetData","TabNavigation","tabList","to","path","title","exact","component","logger","winston","format","combine","json","colorize","all","level","transports","Console","ModeEnum","tabs","useEffect","Promise","resolve","reject","debug","FB","api","fields","groupsData","Error","result","catch","FacebookWidget","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","setState","loginStatusResponse","status","scope","facebookLogout","userData","undefined","fbAsyncInit","init","appId","xfbml","version","fbInitEvent","Event","document","dispatchEvent","d","s","js","getElementsByTagName","fjs","getElementById","createElement","parentNode","insertBefore","addEventListener","removeEventListener","this","element","state","first_name","last_name","data-max-rows","data-size","data-button-type","data-use-continue-as","Component","ComponentWithDetail","openCollapse","setOpenCollapse","componentRoot","Collapse","isOpen","componentDetail","DeleteWidget","onCancelButtonClicked","onDeleteButtonClicked","idWidget","Widget","READ","mode","setMode","config","header","editModeComponent","EDIT","aria-hidden","refreshFunction","DELETE","body","percentageToDegrees","percentage","CircularProgressBar","style","transform","Math","round","GameDetails","achievements","setAchievements","completedAchievements","setCompletedAchievements","GET_ACHIVEMENTS_URL","appid","get","params","url","playerstats","filter","achievement","achieved","href","img_logo_url","length","SteamWidget","playerData","setPlayerData","ownedGames","setOwnedGames","STEAM_API_URL","GET_PLAYER_SUMMARIES_URL","GET_OWNED_GAMES_URL","refreshWidget","players","games","sort","gameA","gameB","localeCompare","widgetHeader","profileurl","avatar","personaname","widgetBody","game","img_icon_url","link","tabId","EmptyCalendarWidget","calendarUrls","setCalendarUrls","onCalendarUrlUpdated","index","placeholder","calendarUrl","concat","onConfigSubmitted","CalendarWidget","calendars","schedules","setSchedules","locales","fr","localizer","dateFnsLocalizer","startOfWeek","getDay","ical","eventKey","summary","start","end","allDay","getHours","culture","events","startAccessor","endAccessor","defaultView","popup","height","updatedCalendars","formatDateFromTimestamp","timestamp","offset","Date","adjustTimeWithOffset","localeOffset","getTimezoneOffset","abs","offsetMilliseconds","stripHtmlFromContent","content","div","innerHTML","textContent","innerText","RSSArticle","description","date","pubDate","toLocaleString","author","EmptyRSSWidget","setUrl","onUrlSubmitted","RSSWidget","feed","setFeed","setDecription","image","setImage","setLink","setTitle","rssParser","RSSParser","fetchDataFromRssFeed","apiResult","parseString","items","formatTitleForArticle","articleTitle","toLocaleTimeString","hour","minute","article","guid","rssUrl","useLocalStorage","initialValue","item","storedValue","setStoredValue","valueToStore","Function","StravaActivity","start_date_local","distance","moving_time","total_elevation_gain","achievement_count","average_speed","max_speed","kudos_count","comment_count","StravaWidget","activities","setActivities","athlete","setAthlete","token","setToken","refreshToken","setRefreshToken","tokenExpirationDate","setTokenExpirationDate","search","useLocation","isAfter","reverse","refreshTokenFromApi","client_id","client_secret","refresh_token","grant_type","access_token","expires_at","getActivitiesByMonth","reduce","activitiesByMonth","activity","month","push","getStatsFromActivities","activitiesByMonthList","x","y","total","values","queryString","code","apiCode","getToken","isBefore","profile_medium","firstname","lastname","overflowY","slice","minHeight","maxHeight","flex","labels","datasets","backgroundColor","yAxisID","order","options","scales","position","EmptyWeatherWidget","city","setCity","ForecastMode","Forecast","dt","timezone","weekday","day","weather","icon","color","main","temp_max","temp_min","humidity","WeatherWidget","WEATHER_API","API_OPTIONS","cityToQuery","setCityToQuery","setWeather","forecast","setForecast","TODAY","forecastMode","setForecastMode","fetchDataFromWeatherApi","list","filterForecastByMode","WEEK","forecastDay","TOMORROW","placeItems","temp","sys","sunrise","sunset","alignContent","display","maxWidth","borderColor","feels_like","maintainAspectRatio","updatedCity","TabDash","widgets","setWidgets","activeTab","useSelector","createWidget","widgetConfig","WEATHER","deleteWidgetFromDashboard","RSS","CALENDAR","STRAVA","STEAM","deleteWidget","widget","fetch","newWidget","TabPane","Dash","setTabs","setNewWidget","modal","setModal","dispatch","useDispatch","isMounted","useRef","addNewTab","insertedTab","toggleModal","current","authService","Nav","vertical","navbar","Modal","ModalHeader","ModalBody","addWidget","currentTarget","widgetData","ModalFooter","onDragEnd","destination","updateTabs","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","direction","providedDroppable","droppableProps","ref","innerRef","draggableId","providedDraggable","draggableProps","dragHandleProps","toggleTab","TabContent","initialState","createStore","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","store","URL","origin","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f3804dd9.chunk.js","sourcesContent":["export default function authHeader(): Record<string, unknown> {\n  if (localStorage.getItem('user')) {\n    const user = JSON.parse(localStorage.getItem('user') || '');\n    if (user && user.accessToken) {\n      return {\n        headers: {\n          Authorization: 'Bearer ' + user.accessToken,\n          'Content-type': 'application/json'\n        }\n      };\n    } else {\n      return {};\n    }\n  } else {\n    return {};\n  }\n}\n","import { ReactElement, useState } from 'react';\nimport { Button, NavItem, NavLink } from 'reactstrap';\nimport { ITab } from '../../model/Tab';\nimport { deleteTab, updateTab } from '../../services/tab.service';\ninterface IProps {\n  tab: ITab;\n  onTabClicked: () => void;\n  onTabDeleted: (id: number) => void;\n}\n\nexport default function NavDash(props: IProps): ReactElement {\n  const [label, setLabel] = useState(props.tab.label);\n  const [isToggled, toggle] = useState(false);\n\n  function deleteTabFromDash() {\n    deleteTab(props.tab.id).then(() => props.onTabDeleted(props.tab.id));\n  }\n\n  function saveTabName() {\n    updateTab(props.tab.id, label, props.tab.tabOrder).then(() => {\n      toggle(!isToggled);\n    });\n  }\n\n  function clickToggle() {\n    toggle(!isToggled);\n  }\n\n  return (\n    <NavItem className=\"clickableItem\" key={props.tab.id}>\n      <NavLink onClick={props.onTabClicked}>\n        {isToggled ? (\n          <div className=\"flexRow\">\n            <input\n              onDoubleClick={saveTabName}\n              onChange={(event) => setLabel(event.target.value)}\n              value={label}\n            />\n            <Button className=\"deleteTabButton\" onClick={deleteTabFromDash}>\n              <i className=\"fa fa-trash\" />\n            </Button>\n          </div>\n        ) : (\n          <span onDoubleClick={clickToggle}>{label}</span>\n        )}\n      </NavLink>\n    </NavItem>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { ITab } from '../model/Tab';\nimport authHeader from './auth.header';\n\nexport function getTabs(): Promise<AxiosResponse<unknown>> {\n  return axios.get(`${process.env.REACT_APP_BACKEND_URL}/tab`, authHeader());\n}\n\nexport function addTab(label: string): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/addTab`,\n    { label: label },\n    authHeader()\n  );\n}\n\nexport function updateTab(\n  id: number,\n  label: string,\n  tabOrder: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTab`,\n    { id: id, label: label, tabOrder: tabOrder },\n    authHeader()\n  );\n}\n\nexport function updateTabs(tabs: ITab[]): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTabs`,\n    tabs,\n    authHeader()\n  );\n}\n\nexport function deleteTab(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/deleteTab/?id=${id}`,\n    authHeader()\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\n\nconst headers = {\n  'Content-type': 'application/json'\n};\n\nfunction login(\n  username: string,\n  password: string\n): Promise<AxiosResponse<unknown>> {\n  return axios\n    .post(\n      `${process.env.REACT_APP_BACKEND_URL}/auth/login`,\n      {\n        username,\n        password\n      },\n      {\n        headers\n      }\n    )\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n}\n\nfunction logout(): void {\n  localStorage.removeItem('user');\n  window.location.reload();\n}\n\nfunction getCurrentUser(): unknown {\n  if (localStorage.getItem('user')) {\n    return JSON.parse(localStorage.getItem('user') || '');\n  }\n}\n\nexport default {\n  login,\n  logout,\n  getCurrentUser\n};\n","import React, { useState } from \"react\";\nimport AuthService from \"../../services/auth.service\";\n\nexport default function Login(): React.ReactElement {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const onChangeUsername = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUsername(e.target.value);\n    };\n\n    const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value);\n    };\n\n    function handleLogin() {\n\n        setMessage(\"\");\n        setLoading(true);\n\n        if (username && password) {\n            AuthService.login(username, password).then(\n                () => {\n                    window.location.reload();\n                    setLoading(false);\n                },\n                (error) => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    setLoading(false);\n                    setMessage(resMessage);\n                }\n            )\n        } else {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                        id=\"inputUsername\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        value={username}\n                        onChange={onChangeUsername}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"inputPassword\"\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        value={password}\n                        onChange={onChangePassword}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <button id=\"loginButton\" disabled={!username || !password || loading} onClick={handleLogin} className=\"btn btn-success btn-block\">\n                        {loading && (\n                            <span className=\"spinner-border spinner-border-sm\"></span>\n                        )}\n                        <span>Se connecter</span>\n                    </button>\n                </div>\n\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {message}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}","export enum WidgetTypes {\n  WEATHER = 1,\n  RSS = 2,\n  CALENDAR = 3,\n  STRAVA = 4,\n  STEAM = 5\n}\n","import { FunctionComponent, MouseEvent } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle\n} from 'reactstrap';\nimport { WidgetTypes } from '../../enums/WidgetsEnum';\n\ninterface IProps {\n  onWidgetAdded: (type: MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Store: FunctionComponent<IProps> = (props) => {\n  return (\n    <div className=\"flexRow\">\n      {Object.keys(WidgetTypes).map((key) => {\n        return (\n          isNaN(parseInt(key, 0)) && (\n            <Card key={key}>\n              <CardImg\n                top={true}\n                width=\"100%\"\n                src=\"/assets/318x180.svg\"\n                alt=\"Card image cap\"\n              />\n              <CardBody>\n                <CardTitle>{key}</CardTitle>\n                <CardSubtitle>Widget {key}</CardSubtitle>\n                <CardText>\n                  Cliquez ci-dessous pour ajouter un widget {key} au dashboard.\n                </CardText>\n                <Button\n                  id={key}\n                  onClick={props.onWidgetAdded}\n                  className=\"btn btn-success\"\n                  value={WidgetTypes[key]}\n                >\n                  Ajouter\n                </Button>\n              </CardBody>\n            </Card>\n          )\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Store;\n","export const TOGGLE_TAB = 'TOGGLE_TAB';\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport const toggleSelectedTab = (\n  id: number\n): { type: string; payload: { id: number } } => ({\n  type: TOGGLE_TAB,\n  payload: {\n    id\n  }\n});\n","import axios, { AxiosResponse } from 'axios';\nimport authHeader from './auth.header';\n\nexport function addWidget(\n  type: string,\n  tabId: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/addWidget`,\n    { type: type, tab: { id: tabId } },\n    authHeader()\n  );\n}\n\nexport function updateWidgetData(\n  id: number,\n  data: unknown\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetData`,\n    { id: id, data: data },\n    authHeader()\n  );\n}\n\nexport function deleteWidget(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/deleteWidget/?id=${id}`,\n    authHeader()\n  );\n}\n","import { FunctionComponent } from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport ITab from './ITab';\nimport './TabNavigation.scss';\n\ninterface IProps {\n  tabList: ITab[];\n}\n\nconst TabNavigation: FunctionComponent<IProps> = (props) => {\n  return (\n    <div>\n      <Router>\n        <div>\n          <div className=\"tabContainer\">\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Link to={tab.path}>{tab.title}</Link>\n                </div>\n              );\n            })}\n          </div>\n          <div>\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Route\n                    path={tab.path}\n                    exact={tab.exact}\n                    component={tab.component}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default TabNavigation;\n","import * as winston from 'winston';\n\nconst logger = winston.createLogger({\n  format: winston.format.combine(\n    winston.format.json(),\n    winston.format.colorize({ all: true })\n  ),\n  level: 'debug',\n  transports: [new winston.transports.Console()]\n});\n\nexport default logger;\n","import { Component } from 'react';\nimport ITab from '../../tab_facebook/ITab';\nimport TabNavigation from '../../tab_facebook/TabNavigation';\nimport logger from '../../utils/LogUtils';\nimport EventsTab from './events/EventsTab';\nimport { getProfileInfo } from './FacebookAPI';\nimport GroupsTab from './groups/GroupsTab';\nimport IFBUser from './IFBUser';\n\ndeclare const window: any;\ndeclare const FB: any;\n\ninterface IProps {\n  appId?: string;\n}\n\ninterface IState {\n  loginStatusResponse: any;\n  userData?: IFBUser;\n}\n\nconst tabs: ITab[] = [\n  {\n    title: 'Groupes',\n    component: GroupsTab,\n    path: '/groups/'\n  },\n  {\n    title: 'Events',\n    component: EventsTab,\n    path: '/events/'\n  }\n];\n\nexport default class FacebookWidget extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    window.fbAsyncInit = () => {\n      FB.init({\n        appId: props.appId,\n        xfbml: true,\n        version: 'v3.2'\n      });\n\n      // Broadcast an event when FB object is ready\n      const fbInitEvent = new Event('FBObjectReady');\n      document.dispatchEvent(fbInitEvent);\n    };\n    ((d, s, id) => {\n      let js: any = d.getElementsByTagName(s)[0];\n      const fjs: Element = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\n      if (fjs && fjs.parentNode) {\n        fjs.parentNode.insertBefore(js, fjs);\n      }\n    })(document, 'script', 'facebook-jssdk');\n    document.addEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public componentWillUnmount(): void {\n    document.removeEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public checkLoginStatus = (): void => {\n    FB.getLoginStatus(this.facebookLoginHandler);\n  };\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  public facebookLogin = (): void => {\n    logger.debug('facebookLogin');\n    FB.getLoginStatus((response: any) => {\n      logger.debug(response);\n      this.setState({ loginStatusResponse: response });\n      if (response.status !== 'connected') {\n        FB.login(this.facebookLoginHandler, {\n          scope:\n            'user_birthday,user_hometown,user_likes,user_photos,user_friends,user_status,user_tagged_places,user_posts,user_gender,user_link,email,public_profile'\n        });\n      }\n    });\n  };\n\n  public facebookLogout = (): void => {\n    FB.logout((response: any) => {\n      logger.debug(response);\n      this.setState({ userData: undefined, loginStatusResponse: response });\n    });\n  };\n\n  public facebookLoginHandler = (response: any): void => {\n    logger.debug('facebookLoginHandler');\n    this.setState({ loginStatusResponse: response });\n    if (response.status === 'connected') {\n      logger.debug('Connected');\n      getProfileInfo()\n        .then((result: IFBUser) => {\n          logger.debug('Result');\n          logger.debug(result);\n          this.setState({ userData: result });\n        })\n        .catch((error: Error) => {\n          logger.debug(error);\n        });\n    }\n  };\n\n  public render(): React.ReactElement {\n    let element = null;\n    if (\n      this.state &&\n      this.state.loginStatusResponse &&\n      this.state.loginStatusResponse.status === 'connected' &&\n      this.state.userData\n    ) {\n      const userData: IFBUser = this.state.userData;\n      element = (\n        <div>\n          <div>\n            {userData.first_name} {userData.last_name}\n          </div>\n          <div onClick={this.facebookLogout}>Se déconnecter</div>\n        </div>\n      );\n    } else {\n      element = (\n        <div\n          onClick={this.facebookLogin}\n          className=\"fb-login-button\"\n          data-max-rows=\"1\"\n          data-size=\"large\"\n          data-button-type=\"continue_with\"\n          data-use-continue-as=\"true\"\n        />\n      );\n    }\n    return (\n      <div>\n        {element}\n        {this.state && this.state.userData && (\n          <div>\n            <TabNavigation tabList={tabs} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","export enum ModeEnum {\n  READ = 1,\n  EDIT = 2,\n  DELETE = 3\n}\n","import { ReactElement, useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\nimport { getGroupsData } from '../FacebookAPI';\nimport IGroup from './IGroup';\n\nexport default function GroupsTab(): ReactElement {\n  useEffect(() => {\n    getGroupsData()\n      .then((result: unknown) => {\n        logger.debug(result as IGroup[]);\n      })\n      .catch((error: Error) => {\n        logger.debug(error);\n      });\n  }, []);\n\n  return <div>Liste des groupes auxquels vous appartenez</div>;\n}\n","import logger from '../../utils/LogUtils';\nimport IFBUser from './IFBUser';\n\ninterface IFB {\n  api: (url: string, data: unknown, response: (data:unknown) => unknown) => Promise<unknown>;\n}\n\ndeclare const FB: IFB;\n\nexport function getProfileInfo(): Promise<IFBUser> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getProfile');\n    FB.api(\n      '/me',\n      {\n        fields: 'id,first_name,last_name,hometown,location,birthday,gender,link'\n      },\n      (userData: unknown) => {\n        if (userData) {\n          resolve(userData as IFBUser);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n\nexport function getGroupsData(): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getGroupsData');\n    FB.api(\n      '/me/groups',\n      {\n        fields:\n          'administrator,bookmark_order,id,unread,cover,created_time,description,icon,email,link,name,purpose,venue,picture'\n      },\n      (groupsData) => {\n        if (groupsData) {\n          resolve(groupsData);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n","import { ReactElement, useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\n\nexport default function EventsTab(): ReactElement {\n  useEffect(() => {\n    logger.debug('onComponentDidMount');\n  });\n\n  return <div>Liste des prochains évènements</div>;\n}\n","import { useState } from 'react';\nimport { Card, CardBody, Collapse } from 'reactstrap';\nimport './ComponentWithDetail.scss';\n\ninterface IProps {\n  componentRoot: React.ReactNode | string;\n  componentDetail: React.ReactNode | string;\n  link?: string;\n}\n\nexport default function ComponentWithDetail(props: IProps): React.ReactElement {\n  const [openCollapse, setOpenCollapse] = useState(false);\n  const toggleCollapse = () => {\n    setOpenCollapse(!openCollapse);\n  };\n\n  return (\n    <div>\n      <div onClick={toggleCollapse} className=\"title\">\n        {props.componentRoot}\n      </div>\n      <div>\n        <Collapse isOpen={openCollapse}>\n          <Card>\n            <CardBody>{openCollapse && props.componentDetail &&\n              props.componentDetail\n            }\n            </CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import { ReactElement } from \"react\";\n\ninterface IProps {\n  idWidget: number;\n  onCancelButtonClicked: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function DeleteWidget(props: IProps): ReactElement {\n  const confirmDeleteWidget = () => {\n    props.onDeleteButtonClicked(props.idWidget);\n  };\n\n  return (\n    <div>\n      <h4>Êtes-vous sûr de vouloir supprimer ce widget ?</h4>\n      <button\n        onClick={props.onCancelButtonClicked}\n        className=\"btn btn-primary cancelButton\"\n      >\n        Annuler\n      </button>\n      <button\n        onClick={confirmDeleteWidget}\n        className=\"btn btn-danger validateDeletionButton\"\n      >\n        Supprimer\n      </button>\n    </div>\n  );\n}\n","import { ReactElement, useEffect, useState } from 'react';\nimport { ModeEnum } from '../enums/ModeEnum';\nimport DeleteWidget from './utils/DeleteWidget';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  config: Record<string, unknown>;\n  header: ReactElement;\n  body: ReactElement;\n  editModeComponent?: ReactElement<IProps>;\n  refreshFunction: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function Widget(props: IProps): ReactElement {\n  const [mode, setMode] = useState(ModeEnum.READ);\n\n  useEffect(() => {\n    setMode(ModeEnum.READ);\n  }, [props.config]);\n\n  function editWidget() {\n    if (props.editModeComponent) {\n      setMode(ModeEnum.EDIT);\n    }\n  }\n\n  function cancelDeletion() {\n    setMode(ModeEnum.READ);\n  }\n\n  function deleteWidget() {\n    setMode(ModeEnum.DELETE);\n  }\n\n  return (\n    <div>\n      { mode === ModeEnum.READ &&\n        <div>\n          <div className=\"header\">\n            <div className=\"leftGroup widgetHeader\">{props.header}</div>\n            <div className=\"rightGroup\">\n              {props.editModeComponent &&\n                <button\n                  onClick={editWidget}\n                  className=\"btn btn-default editButton\"\n                >\n                  <i className=\"fa fa-cog\" aria-hidden=\"true\" />\n                </button>\n              }\n              <button\n                onClick={props.refreshFunction}\n                className=\"btn btn-default refreshButton\"\n              >\n                <i className=\"fa fa-refresh\" aria-hidden=\"true\" />\n              </button>\n              <button\n                onClick={deleteWidget}\n                className=\"btn btn-default deleteButton\"\n              >\n                <i className=\"fa fa-trash\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n          {props.body}\n        </div>\n      }\n      { mode === ModeEnum.DELETE &&\n        <DeleteWidget\n          idWidget={props.id}\n          onDeleteButtonClicked={props.onDeleteButtonClicked}\n          onCancelButtonClicked={cancelDeletion}\n        />\n      }\n      {mode === ModeEnum.EDIT &&\n        (props.editModeComponent) ? props.editModeComponent : () => setMode(ModeEnum.READ)\n      }\n    </div>\n  );\n}\n","import \"./CircularProgressBar.scss\"\n\nfunction percentageToDegrees(percentage: number): string {\n    return (percentage / 100 * 360).toString()\n}\n\ninterface IProps {\n    value: number;\n}\n\nconst CircularProgressBar: React.FunctionComponent<IProps> = (props) => {\n\n    return (\n        <div className=\"progress mx-auto\">\n            <span className=\"progressLeft\">\n                <span style={{ transform: (props.value > 50) ? `rotate(${percentageToDegrees((props.value) - 50)}deg)` : 'unset' }} className=\"progressBar border-primary\"></span>\n            </span>\n            <span className=\"progressRight\">\n                <span style={{ transform: (props.value > 50) ? `rotate(180deg)` : `rotate(${percentageToDegrees(props.value)}deg)` }} className=\"progressBar border-primary\"></span>\n            </span>\n            <div className=\"progressValue w-100 h-100 rounded-circle d-flex align-items-center justify-content-center\">\n                <div className=\"h2 font-weight-bold\">{Math.round(props.value)}%</div>\n            </div>\n        </div>\n    )\n}\n\nexport default CircularProgressBar;","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport authHeader from \"src/services/auth.header\";\nimport CircularProgressBar from \"src/widgets/utils/circular-progress/CircularProgressBar\";\nimport { IGameInfo } from \"../IGameInfo\";\n\ninterface IAchievement {\n    apiname: string;\n    achieved: number;\n    unlocktime: number;\n}\n\nexport default function GameDetails(props: IGameInfo): React.ReactElement {\n    const [achievements, setAchievements] = useState([]);\n    const [completedAchievements, setCompletedAchievements] = useState([]);\n    const STEAM_API_URL = \"https://api.steampowered.com\";\n    const STEAM_IMAGE_URL = \"https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/apps/\";\n    const STEAM_COMMUNITY_URL = \"https://steamcommunity.com/app/\";\n    const GET_ACHIVEMENTS_URL = `${STEAM_API_URL}/ISteamUserStats/GetPlayerAchievements/v0001/?appid=${props.appid}&key=${process.env.REACT_APP_STEAM_API_KEY}&steamid=${process.env.REACT_APP_STEAM_USER_ID}`\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n            ...authHeader(),\n            params: {\n                url: GET_ACHIVEMENTS_URL\n            }\n        })\n            .then(response => {\n                if (response.data.playerstats.achievements) {\n                    setAchievements(response.data.playerstats.achievements);\n                    setCompletedAchievements(response.data.playerstats.achievements.filter((achievement: IAchievement) => achievement.achieved === 1));\n                }\n\n            })\n    }, [props])\n\n    return (\n        <div>\n            <div className=\"flexRow\">\n                <div>{props.name}</div>\n                <a href={`${STEAM_COMMUNITY_URL}${props.appid}`}>\n                    <img src={\n                        `${STEAM_IMAGE_URL}${props.appid}/${props.img_logo_url}.jpg                  `\n                    } />\n                </a>\n            </div>\n            {\n                achievements && completedAchievements && achievements.length > 0 &&\n                <div className=\"flexRow\">\n                    <div className=\"flexColumn\">\n                        <div className=\"totalachievements\">Succès : {achievements.length}</div>\n                        <div className=\"completedAchievements\">Succès complétés : {completedAchievements.length}</div>\n                    </div>\n                    <CircularProgressBar value={completedAchievements.length / achievements.length * 100} />\n                </div>\n            }\n        </div>\n    );\n};","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport ComponentWithDetail from 'src/components/detailComponent/ComponentWithDetail';\nimport authHeader from 'src/services/auth.header';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport GameDetails from './details/GameDetails';\nimport { IGameInfo } from './IGameInfo';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\ninterface IPlayerData {\n  personaname: string;\n  profileurl: string;\n  avatar: string;\n}\n\nexport default function SteamWidget(props: IProps): React.ReactElement {\n  const [playerData, setPlayerData] = useState<IPlayerData>();\n  const [ownedGames, setOwnedGames] = useState<IGameInfo[]>();\n\n  const STEAM_API_URL = \"https://api.steampowered.com\";\n  const GET_PLAYER_SUMMARIES_URL = `/ISteamUser/GetPlayerSummaries/v0002/?key=${process.env.REACT_APP_STEAM_API_KEY}&steamids=${process.env.REACT_APP_STEAM_USER_ID}`\n  const GET_OWNED_GAMES_URL = `/IPlayerService/GetOwnedGames/v0001/?key=${process.env.REACT_APP_STEAM_API_KEY}&steamid=${process.env.REACT_APP_STEAM_USER_ID}&format=json&include_appinfo=true`\n  const STEAM_IMAGE_URL = \"https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/apps/\";\n  const STEAM_COMMUNITY_URL = \"https://steamcommunity.com/app/\";\n\n  useEffect(() => {\n    refreshWidget();\n  }, []);\n\n  function refreshWidget() {\n    getPlayerData();\n    getOwnedGames();\n  }\n\n  function getPlayerData(): void {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n        ...authHeader(),\n        params: {\n          url: `${STEAM_API_URL}${GET_PLAYER_SUMMARIES_URL}`\n        }\n      })\n      .then((response) => {\n        setPlayerData(response.data.response.players[0]);\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function getOwnedGames(): void {\n    axios.get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n      ...authHeader(),\n      params: {\n        url: `${STEAM_API_URL}${GET_OWNED_GAMES_URL}`\n      }\n    })\n      .then((response) => {\n        setOwnedGames((response.data.response.games as IGameInfo[]).sort((gameA, gameB) => gameA.name.localeCompare(gameB.name)));\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  const widgetHeader = (\n    <div>\n      <a href={playerData?.profileurl}>\n        <img src={playerData?.avatar} />\n        {playerData?.personaname}\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div className=\"flexColumn\">\n      {ownedGames && ownedGames.map((game: IGameInfo) => {\n        return (\n          <ComponentWithDetail\n            key={game.appid}\n            componentRoot=\n            {\n              <div className=\"gameInfo flexRow\">\n                <div>\n                  <img src={\n                    `${STEAM_IMAGE_URL}${game.appid}/${game.img_icon_url}.jpg                  `\n                  } />\n                </div>\n                <div>{game.name}</div>\n              </div>\n            }\n            componentDetail={<GameDetails {...game} />}\n            link={`${STEAM_COMMUNITY_URL}${game.appid}`}\n          />\n        );\n      })}\n\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{}}\n        header={widgetHeader}\n        body={widgetBody}\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport './EmptyCalendarWidget.scss';\n\ninterface IProps {\n  calendarUrls?: string[];\n  onConfigSubmitted: (calendarUrls: string[]) => void;\n}\n\nexport default function EmptyCalendarWidget(props: IProps): React.ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState<string[]>(\n    props.calendarUrls || []\n  );\n  const onValidation = () => {\n    props.onConfigSubmitted(calendarUrls);\n  };\n\n  const onCalendarUrlUpdated = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCalendarUrls(\n      calendarUrls.map((url: string, index: number) =>\n        index.toString() === event.target?.id ? event.target.value : url\n      )\n    );\n  };\n\n  const onCalendarUrlAdded = () => {\n    setCalendarUrls(calendarUrls.concat(''));\n  };\n\n  function removeCalendarUrl(calendarUrl: string) {\n    setCalendarUrls(calendarUrls.filter(url => url !== calendarUrl));\n  }\n\n  return (\n    <div>\n      <div>\n        {calendarUrls &&\n          calendarUrls.map((url, index) => {\n            return (\n              <div key={index}>\n                <input\n                  id={index.toString()}\n                  onChange={onCalendarUrlUpdated}\n                  value={url}\n                  placeholder=\"Saisissez une URL\"\n                />\n                <button className=\"removeCalendarUrl btn btn-danger\" onClick={() => removeCalendarUrl(url)}>Supprimer</button>\n              </div>\n            );\n          })}\n        <button id=\"addCalendarUrl\" className=\"btn btn-primary\" onClick={onCalendarUrlAdded}>\n          Ajouter\n        </button>\n      </div>\n      <button\n        id=\"validateCalendarUrls\"\n        onClick={onValidation}\n        disabled={!calendarUrls || calendarUrls?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as ical from 'ical';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { updateWidgetData } from '../../services/widget.service';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport './CalendarWidget.scss';\nimport EmptyCalendarWidget from './emptyWidget/EmptyCalendarWidget';\nimport format from 'date-fns/format'\nimport parse from 'date-fns/parse'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport { fr } from \"date-fns/locale\";\n\nimport { Calendar, dateFnsLocalizer, Event } from 'react-big-calendar';\nimport authHeader from 'src/services/auth.header';\n\nexport interface IProps {\n  id: number;\n  calendars?: string[];\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function CalendarWidget(props: IProps): ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState(props.calendars);\n  const [schedules, setSchedules] = useState<Event[]>([]);\n\n  const locales = {\n    'fr': fr,\n  }\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n  })\n\n  useEffect(() => {\n    refreshWidget();\n  }, [calendarUrls]);\n\n  function onConfigSubmitted(updatedCalendars: string[]) {\n    updateWidgetData(props.id, { calendars: updatedCalendars })\n      .then(() => {\n        if (updatedCalendars === calendarUrls) {\n          refreshWidget();\n        }\n        setCalendarUrls(updatedCalendars);\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshWidget() {\n    setSchedules([]);\n    calendarUrls?.map((calendarUrl: string) => {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${calendarUrl}`, authHeader())\n        .then((response) => {\n          const data = ical.parseICS(response.data);\n          setSchedules(schedules =>\n            schedules.concat(...Object.keys(data).map((eventKey) => {\n              const event = data[eventKey];\n              const newSchedule: Event = {\n                title: event.summary,\n                start: event.start,\n                end: event.end,\n                allDay: event.end?.getHours() === 0 && event.start?.getHours() === 0\n              };\n              return newSchedule;\n            }))\n          );\n        })\n        .catch((error) => {\n          logger.error(error);\n        });\n    });\n  }\n\n  const widgetHeader = <div>Calendar</div>;\n\n  const widgetBody = (\n    <div>\n      <Calendar\n        localizer={localizer}\n        culture={\"fr\"}\n        events={schedules}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        defaultView=\"month\"\n        popup={true}\n        style={{ height: 500 }}\n      />\n\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ calendars: calendarUrls }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyCalendarWidget\n            calendarUrls={calendarUrls}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","export function formatDateFromTimestamp(timestamp: number, offset = 0): Date {\n  return new Date(timestamp * 1000 + offset * 1000);\n}\n\nexport function formatDateFromUTC(date: string): string {\n  const parsedDate = new Date(date);\n  return parsedDate.toLocaleString('fr');\n}\n\nexport function adjustTimeWithOffset(offset: number): number {\n  const localeOffset = -(new Date().getTimezoneOffset() * 60);\n  if (Math.abs(offset) === Math.abs(localeOffset)) {\n    return 0;\n  }\n  const offsetMilliseconds = Math.abs(offset) + Math.abs(localeOffset);\n  return offset < localeOffset ? -offsetMilliseconds : offsetMilliseconds;\n}\n","import { FunctionComponent } from 'react';\nimport { formatDateFromUTC } from '../../../utils/DateUtils';\nimport { IArticle } from './IArticle';\nimport './RSSArticle.scss';\n\nfunction stripHtmlFromContent(content?: string) {\n  const div = document.createElement('div');\n  div.innerHTML = content || '';\n  return div.textContent || div.innerText || '';\n}\n\nconst RSSArticle: FunctionComponent<IArticle> = (props) => {\n  return (\n    <div className=\"article\">\n      <div className=\"articleTitle\">\n        <a href={props.link}>{props.title}</a>\n      </div>\n      <div className=\"articleContent\">\n        {stripHtmlFromContent(props.content) ||\n          stripHtmlFromContent(props.description)}\n      </div>\n      <div className=\"articlePubDate\">\n        Publié le {formatDateFromUTC(props.pubDate || '')}{' '}\n        {props.author && 'par ' + props.author}\n      </div>\n    </div>\n  );\n};\n\nexport default RSSArticle;\n","import { useState } from 'react';\nimport './EmptyRSSWidget.scss';\n\ninterface IProps {\n  url?: string;\n  onUrlSubmitted: (url: string) => void;\n}\n\nexport default function EmptyRSSWidget(props: IProps): React.ReactElement {\n  const [url, setUrl] = useState(props.url);\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setUrl(event.target.value);\n  const onValidation = () => {\n    if (url) {\n      props.onUrlSubmitted(url);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        id=\"rssFeedUrl\"\n        name=\"url\"\n        onChange={onChangeHandler}\n        value={url}\n        placeholder=\"Saisissez l'URL du flux RSS\"\n      />\n      <button\n        onClick={onValidation}\n        disabled={!url || url?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport RSSParser from 'rss-parser';\nimport authHeader from 'src/services/auth.header';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { updateWidgetData } from '../../services/widget.service';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport { IArticle, ImageContent, IRSSHeader } from './article/IArticle';\nimport RSSArticle from './article/RSSArticle';\nimport EmptyRSSWidget from './emptyWidget/EmptyRSSWidget';\nimport './RSSWidget.scss';\n\ninterface IProps {\n  id: number;\n  url?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function RSSWidget(props: IProps): React.ReactElement {\n  const [feed, setFeed] = useState<IArticle[]>([]);\n  const [url, setUrl] = useState(props.url);\n  const [description, setDecription] = useState('');\n  const [image, setImage] = useState<ImageContent>();\n  const [link, setLink] = useState('');\n  const [title, setTitle] = useState('');\n  const rssParser = new RSSParser();\n\n  function fetchDataFromRssFeed() {\n    if (url) {\n      axios.get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${url}`, authHeader())\n        .then((apiResult) => {\n          rssParser.parseString((apiResult.data as string))\n            .then(response => {\n              const result = response as IRSSHeader;\n              setDecription(result.description);\n              setFeed(result.items);\n              setImage(result.image);\n              setLink(result.link);\n              setTitle(result.title);\n            })\n\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromRssFeed();\n  }, [url]);\n\n  function refreshWidget() {\n    setFeed([]);\n    fetchDataFromRssFeed();\n  }\n\n  function onUrlSubmitted(rssUrl: string) {\n    updateWidgetData(props.id, { url: rssUrl })\n      .then(() => {\n        setUrl(rssUrl);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function formatTitleForArticle(pubDate: string, articleTitle?: string) {\n    const date = pubDate\n      ? new Date(pubDate).toLocaleTimeString('fr', {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n      : '';\n    return <div className=\"rssArticle\">{date} {articleTitle}</div>;\n  }\n\n  function getFeedFromRSS(data: IArticle[]) {\n    return data.map((article) => {\n      return (\n        <ComponentWithDetail\n          key={article.guid}\n          componentRoot={formatTitleForArticle(article.pubDate, article.title)}\n          componentDetail={<RSSArticle {...article} />}\n          link={article.link}\n        />\n      );\n    });\n  }\n\n  const widgetHeader = (\n    <div className=\"rssWidgetTitle\">\n      <a href={link} className=\"flexRow\">\n        {image && (\n          <div>\n            <img className=\"imgLogoRSS\" src={image?.url} alt=\"logo\" />\n          </div>\n        )}\n        <div className=\"rssTitle\">{title}</div>\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div>\n      {url && feed && (\n        <div>\n          <div className=\"rssDescription\">{description}</div>\n          <div className=\"feed\">{getFeedFromRSS(feed)}</div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ url: url }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyRSSWidget url={url} onUrlSubmitted={onUrlSubmitted} />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport logger from '../utils/LogUtils';\n\nexport function useLocalStorage(\n  key: string,\n  initialValue: unknown\n): [unknown, (value: unknown) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      logger.error(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: unknown) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      logger.error(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import { format } from 'date-fns';\nimport { ReactElement } from 'react';\nimport { IActivity } from '../IStrava';\n\nexport default function StravaActivity(props: IActivity): ReactElement {\n  return (\n    <div>\n      <div>\n        <a href={`https://www.strava.com/activities/${props.id}`}>\n          {format(new Date(props.start_date_local), 'dd MMM')}{' '}\n          {props.name}\n        </a>\n      </div>\n      <div>Distance : {Math.round(props.distance * 1000) / 10000} kms</div>\n      <div>Durée : {props.moving_time / 60} mins</div>\n      <div>Denivelé : {props.total_elevation_gain}</div>\n      <div>Trophées : {props.achievement_count}</div>\n      <div>Vitesse moyenne : {props.average_speed}</div>\n      <div>Vitesse max : {props.max_speed}</div>\n      <div>Kudos : {props.kudos_count}</div>\n      <div>Commentaires : {props.comment_count}</div>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { useLocalStorage } from '../../hooks/localStorageHook';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport StravaActivity from './activity/StravaActivity';\nimport { IActivity, IAthlete } from './IStrava';\nimport { format, isAfter, isBefore } from 'date-fns';\nimport ChartComponent from 'react-chartjs-2';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function StravaWidget(props: IProps): React.ReactElement {\n  const [activities, setActivities] = useState([]);\n  const [athlete, setAthlete] = useState<IAthlete>();\n  const [token, setToken] = useLocalStorage('strava_token', null);\n  const [refreshToken, setRefreshToken] = useLocalStorage(\n    'strava_refresh_token',\n    null\n  );\n  const [tokenExpirationDate, setTokenExpirationDate] = useLocalStorage(\n    'strava_token_expires_at',\n    null\n  );\n  const { search } = useLocation();\n\n  const paginationActivities = 20;\n\n  useEffect(() => {\n    const values = queryString.parse(search);\n    if (values && values.code) {\n      const apiCode = values.code.toString();\n      getToken(apiCode);\n    }\n    if (\n      !token ||\n      !refreshToken ||\n      isBefore(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      refreshTokenFromApi();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      refreshWidget();\n    }\n  }, [token]);\n\n  function refreshWidget() {\n    setActivities([]);\n    getAthleteData();\n    getActivities();\n  }\n\n  function getToken(apiCode: string) {\n    axios\n      .post('https://www.strava.com/oauth/token', {\n        client_id: process.env.REACT_APP_STRAVA_CLIENT_ID,\n        client_secret: process.env.REACT_APP_STRAVA_CLIENT_SECRET,\n        code: apiCode,\n        grant_type: 'authorization_code'\n      })\n      .then((response) => {\n        setToken(response.data.access_token as string);\n        setRefreshToken(response.data.refresh_token);\n        setTokenExpirationDate(response.data.expires_at);\n        setAthlete(response.data.athlete);\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshTokenFromApi() {\n    if (refreshToken) {\n      axios\n        .post('https://www.strava.com/oauth/token', {\n          client_id: process.env.REACT_APP_STRAVA_CLIENT_ID,\n          client_secret: process.env.REACT_APP_STRAVA_CLIENT_SECRET,\n          refresh_token: refreshToken,\n          grant_type: 'refresh_token'\n        })\n        .then((response) => {\n          setToken(response.data.access_token);\n          setRefreshToken(response.data.refresh_token);\n          setTokenExpirationDate(response.data.expires_at);\n          setAthlete(response.data.athlete);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    } else {\n      logger.error('No refresh token');\n    }\n  }\n\n  function getAthleteData() {\n    if (token) {\n      axios\n        .get('https://www.strava.com/api/v3/athlete', {\n          headers: { Authorization: `Bearer ${token}` }\n        })\n        .then((response) => {\n          setAthlete(response.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function getActivities() {\n    if (\n      token &&\n      tokenExpirationDate &&\n      isAfter(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      axios\n        .get(\n          `https://www.strava.com/api/v3/athlete/activities?page=1&per_page=${paginationActivities}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          setActivities(response.data.reverse());\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    } else {\n      refreshTokenFromApi();\n    }\n  }\n\n  function getActivitiesByMonth() {\n    return activities.reduce((activitiesByMonth: IActivity[], activity: IActivity) => {\n      const month = format(new Date(activity.start_date_local), 'yyyy-MM');\n      if (!activitiesByMonth[month]) {\n        activitiesByMonth[month] = [];\n      }\n      activitiesByMonth[month].push(\n        Math.round(activity.distance * 1000) / 10000\n      );\n      return activitiesByMonth;\n    }, []);\n  }\n\n  function getStatsFromActivities() {\n    const activitiesByMonthList = getActivitiesByMonth();\n    return Object.keys(activitiesByMonthList).map((month) => {\n      return {\n        x: new Date(month),\n        y: Math.round(\n          activitiesByMonthList[month].reduce(\n            (total: number, distance: number) => total + distance\n          )\n        )\n      };\n    });\n  }\n\n  const widgetHeader = (\n    <div>\n      <a href={`https://www.strava.com/athletes/${athlete?.id}`}>\n        <img src={athlete?.profile_medium} />\n        {athlete?.firstname} {athlete?.lastname}\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div className=\"flexColumn\">\n      { (token &&\n        refreshToken &&\n        (tokenExpirationDate &&\n          isAfter(new Date(tokenExpirationDate as number * 1000), new Date()))) && (\n          <div>\n            <div style={{ height: \"20vh\", overflowY: 'scroll' }}>\n              {activities.slice().reverse().map((activity: IActivity) => {\n                return (\n                  <ComponentWithDetail\n                    key={activity.id}\n                    componentRoot={`${format(\n                      new Date(activity.start_date_local),\n                      'dd MMM'\n                    )}  ${activity.name}  ${Math.round(activity.distance * 1000) / 1000000\n                      } kms`}\n                    componentDetail={<StravaActivity {...activity} />}\n                    link={`https://www.strava.com/activities/${activity.id}`}\n                  />\n                );\n              })}\n            </div>\n\n\n            <div style={{ minHeight: '25vh', maxHeight: \"80vh\", flex: '1 0 50%' }}>\n              <ChartComponent\n                type=\"bar\"\n                data={{\n                  labels: getStatsFromActivities().map(data => format(data.x, 'MMM yyyy')),\n                  datasets: [\n                    {\n                      label: 'Distance (kms)',\n                      backgroundColor: 'orange',\n                      data: getStatsFromActivities(),\n                      yAxisID: 'kms',\n                      order: 2\n                    },\n                    {\n                      label: 'Activités',\n                      type: \"line\",\n                      backgroundColor: 'darkgreen',\n                      data: Object.keys(getActivitiesByMonth()).map((month) => {\n                        return {\n                          x: new Date(month),\n                          y: getActivitiesByMonth()[month].length\n                        };\n                      }),\n                      yAxisID: 'activities',\n                      order: 1\n                    }\n                  ]\n                }}\n                options={{\n                  scales: {\n                    y: [{\n                      id: 'kms',\n                      type: 'linear',\n                      position: 'left'\n                    }, {\n                      id: 'activities',\n                      type: 'linear',\n                      position: 'right'\n                    }]\n                  }\n                }}\n              />\n            </div>\n\n          </div>\n        )}\n      {(!token ||\n        !refreshToken ||\n        (tokenExpirationDate &&\n          isBefore(new Date(tokenExpirationDate as number * 1000), new Date()))) && (\n          <a\n            href={`https://www.strava.com/oauth/authorize?client_id=${process.env.REACT_APP_STRAVA_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_FRONTEND_URL}&response_type=code&scope=read,activity:read`}\n          >\n            <Button>Se connecter</Button>\n          </a>\n        )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{}}\n        header={widgetHeader}\n        body={widgetBody}\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport './EmptyWeatherWidget.scss';\n\ninterface IProps {\n  city?: string;\n  onConfigSubmitted: (city: string) => void;\n}\n\nexport default function EmptyWeatherWidget(props: IProps): React.ReactElement {\n  const [city, setCity] = useState(props.city || '');\n  const onCityChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setCity(event.target.value);\n  const onValidation = () => {\n    props.onConfigSubmitted(city);\n  };\n\n  return (\n    <div>\n      <input\n        id=\"cityNameInput\"\n        name=\"city\"\n        onChange={onCityChangeHandler}\n        value={city}\n        placeholder=\"Saisissez de nom de la ville\"\n      />\n      <button\n        id=\"validateButton\"\n        className=\"btn btn-success\"\n        onClick={onValidation}\n        disabled={\n          !city ||\n          city?.length < 1\n        }\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { updateWidgetData } from '../../services/widget.service';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp,\n} from '../../utils/DateUtils';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport EmptyWeatherWidget from './emptyWidget/EmptyWeatherWidget';\nimport Forecast from './forecast/Forecast';\nimport { ICity, IForecast, IWeather, IWeatherAPIResponse } from './IWeather';\nimport './WeatherWidget.scss';\nimport { format } from 'date-fns';\nimport authHeader from 'src/services/auth.header';\n\ninterface IProps {\n  id: number;\n  city?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nenum ForecastMode {\n  TODAY,\n  TOMORROW,\n  WEEK\n}\n\nexport default function WeatherWidget(props: IProps): React.ReactElement {\n  const WEATHER_API = 'https://api.openweathermap.org/data/2.5/';\n  const WEATHER_ENDPOINT = 'weather';\n  const FORECAST_ENDPOINT = 'forecast';\n  const API_OPTIONS = '?units=metric&lang=fr&appid=';\n\n  const [cityToQuery, setCityToQuery] = useState(props.city);\n  const [weather, setWeather] = useState<IWeather>();\n  const [forecast, setForecast] = useState<IForecast[]>();\n  const [city, setCity] = useState<ICity>();\n  const [forecastMode, setForecastMode] = useState<ForecastMode>(ForecastMode.TODAY);\n\n  function fetchDataFromWeatherApi() {\n    if (cityToQuery) {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          ...authHeader(),\n          params: {\n            url: `${WEATHER_API}${WEATHER_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\n          }\n        })\n        .then((result) => {\n          setWeather(result.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error);\n        });\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          ...authHeader(),\n          params: {\n            url: `${WEATHER_API}${FORECAST_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\n          }\n        })\n        .then((result: AxiosResponse) => {\n          setForecast((result.data as IWeatherAPIResponse).list);\n          setCity((result.data as IWeatherAPIResponse).city);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromWeatherApi();\n  }, [cityToQuery]);\n\n  function refreshWidget() {\n    setWeather(undefined);\n    setForecast(undefined);\n    setCity(undefined);\n    fetchDataFromWeatherApi();\n  }\n\n  function onConfigSubmitted(updatedCity: string) {\n    updateWidgetData(props.id, {\n      city: updatedCity\n    })\n      .then(() => {\n        setCityToQuery(updatedCity);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function filterForecastByMode(): IForecast[] {\n    if (city && forecast) {\n      switch (forecastMode) {\n        case ForecastMode.WEEK: {\n          return forecast.filter(\n            (forecastDay) => {\n              const forecastElement = formatDateFromTimestamp(\n                forecastDay.dt,\n                adjustTimeWithOffset(city.timezone)\n              )\n              return forecastElement.getHours() === 17\n            }\n          )\n        }\n        case ForecastMode.TOMORROW: {\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date(+new Date() + 86400000).getDay() && new Date(forecastDay.dt * 1000).getHours() >= 7);\n        }\n        case ForecastMode.TODAY:\n        default: {\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date().getDay() && new Date(forecastDay.dt * 1000).getHours() >= 7);\n        }\n      }\n    } else {\n      return [];\n    }\n  }\n\n  function selectTodayForecast(): void {\n    setForecastMode(ForecastMode.TODAY);\n  }\n\n  function selectTomorrowForecast(): void {\n    setForecastMode(ForecastMode.TOMORROW);\n  }\n\n  function selectWeekForecast(): void {\n    setForecastMode(ForecastMode.WEEK);\n  }\n\n  const widgetHeader = <div>La météo aujourd'hui à {city?.name}</div>;\n\n  const widgetBody = (\n    <div>\n      {city && weather && weather.weather && (\n        <div className=\"flexRow\">\n          <div>\n            <img\n              style={{ width: '80px' }}\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              title={weather.weather[0].description}\n              alt={weather.weather[0].description}\n            />\n          </div>\n          <div className=\"flexRow\" style={{ placeItems: 'center' }}>\n            <div className=\"flexColumn mr5\">\n              <div>{weather.weather[0].description}</div>\n              <div>\n                <i className=\"fa fa-thermometer-three-quarters fa-md\" />{' '}\n                {weather.main.temp}°\n              </div>\n            </div>\n            <div className=\"flexColumn\">\n              <div className=\"spaceBetween\">\n                <div>\n                  <i className=\"fa fa-sun-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunrise,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n                <div>\n                  <i className=\"fa fa-moon-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunset,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n              </div>\n              <div>\n                <i className=\"fa fa-clock-o fa-md\" />{' '}\n                {formatDateFromTimestamp(\n                  weather.dt,\n                  adjustTimeWithOffset(weather.timezone)\n                ).toLocaleString('fr')}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {city && forecast && (\n        <div>\n          <div className=\"flexRow\">\n            <span className=\"bold\">Prévisions</span>\n            <span style={{ alignContent: \"space-between\", display: \"flex\" }}>\n              <button id=\"toggleTodayForecast\" onClick={selectTodayForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TODAY ? 'success' : 'primary'} mr-5`}>Aujourd'hui</button>\n              <button id=\"toggleTomorrowForecast\" onClick={selectTomorrowForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TOMORROW ? 'success' : 'primary'}`}>Demain</button>\n              <button id=\"toggleWeekForecast\" onClick={selectWeekForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.WEEK ? 'success' : 'primary'}`}>Semaine</button>\n            </span>\n          </div>\n          <br />\n          <div style={{ height: '20vh', maxWidth: \"100%\" }}>\n            <Line\n              type=\"line\"\n              data={{\n                labels:\n                  filterForecastByMode().map((forecastDay) => {\n                    if (forecastMode === ForecastMode.TODAY || forecastMode === ForecastMode.TOMORROW) {\n                      return format(new Date(forecastDay.dt * 1000), 'HH');\n                    } else {\n                      return format(new Date(forecastDay.dt * 1000), 'EEE dd MMM');\n                    }\n                  }\n\n                  ),\n                datasets: [\n                  {\n                    label: 'Température',\n                    borderColor: 'orange',\n                    data: filterForecastByMode()\n                      .map((forecastDay) => forecastDay.main.temp_max)\n                  },\n                  {\n                    label: 'Ressenti',\n                    borderColor: 'red',\n                    data: filterForecastByMode()\n                      .map((forecastDay) => forecastDay.main.feels_like)\n                  }\n                ]\n              }}\n              options={{ maintainAspectRatio: false }}\n            />\n          </div>\n          <div className=\"flexRow forecastRow\">\n            {city &&\n              forecast &&\n              filterForecastByMode()\n                .map((forecastDay) => {\n                  return (\n                    <div className=\"forecastContainer\" key={forecastDay.dt}>\n                      <Forecast {...forecastDay} city={city} />\n                    </div>\n                  );\n                })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ city: city }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyWeatherWidget\n            city={cityToQuery}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import { FunctionComponent } from 'react';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp\n} from '../../../utils/DateUtils';\nimport { IForecast } from '../IWeather';\nimport './Forecast.scss';\n\nconst Forecast: FunctionComponent<IForecast> = (props) => {\n  return (\n    <div className=\"forecast\">\n      <div>\n        {formatDateFromTimestamp(\n          props.dt,\n          adjustTimeWithOffset(props.city.timezone)\n        ).toLocaleString('fr', {\n          weekday: 'short',\n          day: 'numeric',\n          hour: '2-digit'\n        })}\n      </div>\n      <div className=\"flexRow\">\n        <div>\n          <img\n            src={`https://openweathermap.org/img/wn/${props.weather[0]?.icon}@2x.png`}\n            className=\"smallImage\"\n            title={props.weather[0]?.description}\n            alt={props.weather[0]?.description}\n          />\n        </div>\n        <div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-three-quarters fa-sm mr10\"\n              style={{ color: 'crimson' }}\n            />\n            {props.main.temp_max}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-quarter fa-sm mr10\"\n              style={{ color: 'blue' }}\n            />\n            {props.main.temp_min}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-tint fa-sm mr10\"\n              style={{ color: 'lightblue' }}\n            />\n            {props.main.humidity}%\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TabPane } from 'reactstrap';\nimport authHeader from 'src/services/auth.header';\nimport FacebookWidget from 'src/widgets/facebook/FacebookWidget';\nimport SteamWidget from 'src/widgets/steam/SteamWidget';\nimport { WidgetTypes } from '../enums/WidgetsEnum';\nimport { ITabState } from '../reducers/tabReducer';\nimport { deleteWidget } from '../services/widget.service';\nimport logger from '../utils/LogUtils';\nimport CalendarWidget from '../widgets/calendar/CalendarWidget';\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\nimport RSSWidget from '../widgets/rss/RSSWidget';\nimport StravaWidget from '../widgets/strava/StravaWidget';\nimport WeatherWidget from '../widgets/weather/WeatherWidget';\n\ninterface IProps {\n  tabId: number;\n  newWidget?: IWidgetConfig;\n}\n\nexport default function TabDash(props: IProps): React.ReactElement {\n  const [widgets, setWidgets] = useState([]);\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n\n  function createWidget(widgetConfig: IWidgetConfig) {\n    switch (widgetConfig.type) {\n      case WidgetTypes.WEATHER: {\n        return (\n          <WeatherWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.RSS: {\n        return (\n          <RSSWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.CALENDAR: {\n        return (\n          <CalendarWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.STRAVA: {\n        return (\n          <StravaWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.STEAM: {\n        return (\n          <SteamWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  function deleteWidgetFromDashboard(id: number) {\n    deleteWidget(id)\n      .then((response) => {\n        if (response) {\n          setWidgets(\n            widgets.filter((widget: IWidgetConfig) => {\n              return widget.id !== id;\n            })\n          );\n        }\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  useEffect(() => {\n    if (!widgets.length && activeTab === props.tabId) {\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/widget/?tabId=${props.tabId}`, authHeader())\n        .then((result) => {\n          return result.json();\n        })\n        .then((result) => {\n          setWidgets(result);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    if (props.newWidget) {\n      setWidgets((widgets as IWidgetConfig[]).concat([props.newWidget]) as []);\n    }\n  }, [props.newWidget != null && props.newWidget.id]);\n\n  return (\n    <TabPane tabId={props.tabId}>\n\n      <div className=\"widgetList\">\n        <FacebookWidget />\n        {widgets &&\n          widgets.length > 0 &&\n          widgets.map((widgetConfig: IWidgetConfig) => {\n            return (\n\n              <div\n                key={widgetConfig.id}\n                className=\"widget\"\n              >\n                {createWidget(widgetConfig)}\n              </div>\n            )\n          }\n\n          )}\n      </div>\n\n    </TabPane>\n  );\n}\n","import 'font-awesome/fonts/fontawesome-webfont.svg';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DroppableProvided,\n  DropResult\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Nav,\n  TabContent\n} from 'reactstrap';\nimport './Dash.scss';\nimport { ITab } from './model/Tab';\nimport NavDash from './navigation/navDash/NavDash';\nimport Login from './pages/login/Login';\nimport Store from './pages/store/Store';\nimport { toggleSelectedTab } from './reducers/actions';\nimport { ITabState } from './reducers/tabReducer';\nimport authHeader from './services/auth.header';\nimport authService from './services/auth.service';\nimport { addTab, updateTabs } from './services/tab.service';\nimport { addWidget } from './services/widget.service';\nimport TabDash from './tab/TabDash';\nimport logger from './utils/LogUtils';\nimport { IWidgetConfig } from './widgets/IWidgetConfig';\n\nexport interface IMenu {\n  link: string;\n  icon: string;\n}\n\nexport default function Dash(): React.ReactElement {\n  const [tabs, setTabs] = useState<ITab[]>([]);\n  const [newWidget, setNewWidget] = useState<IWidgetConfig>();\n  const [modal, setModal] = useState(false);\n\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n  const dispatch = useDispatch();\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (isMounted.current && tabs && tabs.length === 0) {\n      addNewTab();\n    }\n  }, [tabs])\n\n  function initDashboard() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/tab/`, authHeader())\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        setTabs(result);\n        if (result && result.length > 0) {\n          dispatch(toggleSelectedTab(result[0].id));\n        }\n        isMounted.current = true;\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function toggleTab(tab: number) {\n    if (activeTab !== tab) {\n      dispatch(toggleSelectedTab(tab));\n    }\n  }\n\n  function addNewTab() {\n    const newTabLabel = 'Nouvel onglet';\n    addTab(newTabLabel).then((response) => {\n      const insertedTab = response.data as ITab;\n      setTabs(tabs.concat(insertedTab));\n      dispatch(toggleSelectedTab(insertedTab.id));\n    });\n  }\n\n  function getNewWidget(tabId: number) {\n    if (newWidget && tabId === newWidget.tab.id) {\n      return newWidget;\n    } else {\n      return undefined;\n    }\n  }\n\n  function toggleModal() {\n    setModal(!modal);\n  }\n\n  function onWidgetAdded(type: React.MouseEvent<HTMLButtonElement>) {\n    if (activeTab) {\n      addWidget(type.currentTarget.value, activeTab)\n        .then((response) => {\n          if (response) {\n            const widgetData = response.data as IWidgetConfig;\n            setNewWidget(widgetData);\n          }\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function onTabDeleted(id: number) {\n    if (tabs.length > 1) {\n      if (tabs[0].id === id) {\n        dispatch(toggleSelectedTab(tabs[1].id));\n      } else if (activeTab === id) {\n        dispatch(toggleSelectedTab(tabs[0].id));\n      } else {\n        dispatch(toggleSelectedTab(activeTab));\n      }\n    }\n    setTabs(tabs.filter((tab) => tab.id !== id));\n  }\n\n  function reorder(\n    list: unknown[],\n    startIndex: number,\n    endIndex: number\n  ): unknown[] {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  function onDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      tabs,\n      result.source.index,\n      result.destination.index\n    ).map((tab, index) => {\n      (tab as ITab).tabOrder = index;\n      return tab;\n    });\n    updateTabs(items as ITab[]).then((response) => {\n      setTabs(response.data as ITab[]);\n    });\n  }\n\n  useEffect(initDashboard, []);\n\n  return (\n    <div className=\"dash\">\n      {!authService.getCurrentUser() &&\n        <Login />\n      }\n      { authService.getCurrentUser() &&\n        <div className=\"flexRow\">\n          <div className=\"dashNavbar\">\n            {activeTab && tabs.length > 0 &&\n              <Nav vertical={true} navbar={true}>\n                <Button\n                  id=\"openAddWidgetModal\"\n                  className=\"dashNavbarLink\"\n                  onClick={toggleModal}\n                >\n                  <i className=\"fa fa-plus-circle fa-lg\" aria-hidden=\"true\" />\n                </Button>\n                <Modal isOpen={modal} toggle={toggleModal}>\n                  <ModalHeader toggle={toggleModal}>Ajouter un widget</ModalHeader>\n                  <ModalBody>\n                    <Store onWidgetAdded={onWidgetAdded} />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button\n                      id=\"closeAddWidgetModal\"\n                      color=\"primary\"\n                      onClick={toggleModal}\n                    >\n                      Fermer\n              </Button>\n                  </ModalFooter>\n                </Modal>\n              </Nav>\n            }\n          </div>\n\n          <div className=\"flexColumn tabsBar\">\n            <Nav tabs={true}>\n              <div className=\"flexRow\">\n                <DragDropContext onDragEnd={onDragEnd}>\n                  <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                    {(providedDroppable: DroppableProvided) => (\n                      <div\n                        className=\"flexRow\"\n                        {...providedDroppable.droppableProps}\n                        ref={providedDroppable.innerRef}\n                      >\n                        {tabs.length > 0 &&\n                          tabs.map((tab: ITab, index: number) => {\n                            return (\n                              <Draggable\n                                key={tab.id}\n                                draggableId={tab.id.toString()}\n                                index={index}\n                              >\n                                {(providedDraggable) => (\n                                  <div\n                                    key={tab.id}\n                                    ref={providedDraggable.innerRef}\n                                    {...providedDraggable.draggableProps}\n                                    {...providedDraggable.dragHandleProps}\n                                    className={`tab ${tab.id === activeTab ? 'selectedItem' : ''\n                                      }`}\n                                  >\n                                    <NavDash\n                                      tab={tab}\n                                      onTabClicked={() => toggleTab(tab.id)}\n                                      onTabDeleted={onTabDeleted}\n                                    />\n                                  </div>\n                                )}\n                              </Draggable>\n                            );\n                          })}\n                        {providedDroppable.placeholder}\n                      </div>\n                    )}\n                  </Droppable>\n                </DragDropContext>\n                <Button onClick={addNewTab} id=\"addNewTabButton\" className=\"fa fa-plus-circle fa-lg\" />\n                <Button onClick={authService.logout} className=\"btn btn-primary\">Se déconnecter</Button>\n              </div>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n\n              {tabs.length > 0 &&\n                tabs.map((tab: ITab) => {\n                  return (\n                    <TabDash\n                      key={tab.id}\n                      newWidget={getNewWidget(tab.id)}\n                      tabId={tab.id}\n                    />\n                  );\n                })}\n            </TabContent>\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport interface ITabState {\n  activeTab: number;\n}\n\nconst initialState: ITabState = {\n  activeTab: -1\n};\n\nexport default function (\n  state = initialState,\n  action: { type: string; payload: { id: number } }\n): ITabState {\n  switch (action.type) {\n    case TOGGLE_TAB: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        activeTab: id\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport rootReducer from './tabReducer';\n\nexport default createStore(rootReducer);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dash from './Dash';\nimport './index.scss';\nimport store from './reducers/store';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Dash />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}