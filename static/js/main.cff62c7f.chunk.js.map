{"version":3,"sources":["services/TabService.ts","navigation/navDash/NavDash.tsx","enums/WidgetsEnum.ts","pages/store/Store.tsx","reducers/actionTypes.ts","reducers/actions.ts","services/WidgetService.ts","enums/ModeEnum.ts","utils/LogUtils.ts","widgets/utils/DeleteWidget.tsx","widgets/Widget.tsx","widgets/calendar/emptyWidget/EmptyCalendarWidget.tsx","widgets/calendar/CalendarWidget.tsx","components/detailComponent/ComponentWithDetail.tsx","utils/DateUtils.ts","widgets/rss/article/RSSArticle.tsx","widgets/rss/emptyWidget/EmptyRSSWidget.tsx","widgets/rss/RSSWidget.tsx","hooks/localStorageHook.ts","widgets/strava/activity/StravaActivity.tsx","widgets/strava/emptyWidget/EmptyStravaWidget.tsx","widgets/strava/StravaWidget.tsx","widgets/weather/emptyWidget/EmptyWeatherWidget.tsx","widgets/weather/forecast/Forecast.tsx","widgets/weather/WeatherWidget.tsx","tab_facebook/TabNavigation.tsx","widgets/facebook/FacebookWidget.tsx","widgets/facebook/groups/GroupsTab.tsx","widgets/facebook/FacebookAPI.ts","widgets/facebook/events/EventsTab.tsx","tab/TabDash.tsx","Dash.tsx","reducers/tabReducer.ts","reducers/store.ts","registerServiceWorker.ts","index.tsx"],"names":["headers","NavDash","props","useState","tab","label","setLabel","isToggled","toggle","NavItem","className","NavLink","onClick","onTabClicked","onDoubleClick","id","tabOrder","axios","post","process","updateTab","then","onChange","event","target","value","Button","delete","onTabDeleted","WidgetTypes","Store","Object","keys","map","key","isNaN","parseInt","Card","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","onWidgetAdded","TOGGLE_TAB","toggleSelectedTab","type","payload","updateWidgetData","data","ModeEnum","logger","winston","format","combine","json","colorize","all","level","transports","Console","DeleteWidget","onCancelButtonClicked","onDeleteButtonClicked","idWidget","Widget","READ","mode","setMode","refreshIntervalId","setRefreshIntervalId","activeTab","useSelector","state","useEffect","tabId","setInterval","refreshFunction","clearInterval","config","header","EDIT","aria-hidden","DELETE","body","editModeComponent","EmptyCalendarWidget","calendarUrls","setCalendarUrls","onCalendarUrlUpdated","url","index","toString","placeholder","concat","onConfigSubmitted","disabled","length","CalendarWidget","calendars","setCalendars","schedules","setSchedules","selectedView","setSelectedView","calendarRef","React","refreshWidget","calendarUrl","get","response","calendarId","newCalendar","name","substring","color","borderColor","cals","current","getInstance","getViewName","scrollToNow","ical","scheds","eventKey","prototype","hasOwnProperty","call","title","summary","start","toISOString","end","location","category","getHours","catch","error","widgetHeader","widgetBody","today","data-action","prev","next","getDateRangeStart","toDate","toLocaleDateString","getDateRangeEnd","ref","height","disableDblClick","disableClick","isReadOnly","month","startDayOfWeek","daynames","scheduleView","taskView","template","milestone","schedule","bgColor","milestoneTitle","allday","alldayTitle","useDetailPopup","useCreationPopup","view","defaultView","week","hourStart","showTimezoneCollapseButton","timezonesCollapsed","updatedCalendars","message","ComponentWithDetail","openCollapse","setOpenCollapse","componentRoot","Collapse","isOpen","componentDetail","getDayFromNow","numberOfDays","addDays","Date","formatDateFromTimestamp","timestamp","offset","adjustTimeWithOffset","localeOffset","getTimezoneOffset","Math","abs","offsetMilliseconds","stripHtmlFromContent","content","div","document","createElement","innerHTML","textContent","innerText","RSSArticle","href","link","description","date","pubDate","toLocaleString","author","EmptyRSSWidget","setUrl","onUrlSubmitted","RSSWidget","feed","setFeed","setDecription","image","setImage","setLink","setTitle","rssParser","RSSParser","fetchDataFromRssFeed","parseURL","apiResult","result","items","formatTitleForArticle","articleTitle","toLocaleTimeString","hour","minute","article","guid","rssUrl","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","StravaActivity","start_date_local","round","distance","moving_time","total_elevation_gain","achievement_count","average_speed","max_speed","kudos_count","comment_count","EmptyStravaWidget","clientId","setClientId","clientSecret","setClientSecret","StravaWidget","activities","setActivities","athlete","setAthlete","token","setToken","refreshToken","setRefreshToken","tokenExpirationDate","setTokenExpirationDate","search","useLocation","Authorization","isAfter","refreshTokenFromApi","client_id","client_secret","refresh_token","grant_type","access_token","expires_at","values","queryString","code","apiCode","getToken","isBefore","profile_medium","firstname","lastname","style","flex","overflowY","activity","minHeight","datasets","backgroundColor","activitiesByMonthList","reverse","reduce","activitiesByMonth","push","x","y","total","getStatsFromActivities","updatedClientId","updatedClientSecret","EmptyWeatherWidget","city","setCity","weather_api_key","weatherApiKey","setWeatherApiKey","Forecast","dt","timezone","weekday","day","weather","icon","main","temp_max","temp_min","humidity","WeatherWidget","WEATHER_API","API_OPTIONS","cityToQuery","setCityToQuery","apiKey","setApiKey","setWeather","forecast","setForecast","fetchDataFromWeatherApi","params","debug","list","undefined","placeItems","temp","sys","sunrise","sunset","filter","forecastDay","getTime","labels","feels_like","options","maintainAspectRatio","updatedCity","TabNavigation","tabList","to","path","exact","component","tabs","Promise","resolve","reject","FB","api","fields","groupsData","Error","FacebookWidget","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","setState","loginStatusResponse","status","login","scope","facebookLogout","logout","userData","fbAsyncInit","init","appId","xfbml","version","fbInitEvent","Event","dispatchEvent","d","s","js","getElementsByTagName","fjs","getElementById","parentNode","insertBefore","addEventListener","removeEventListener","this","element","first_name","last_name","data-max-rows","data-size","data-button-type","data-use-continue-as","TabDash","widgets","setWidgets","createWidget","widgetConfig","WEATHER","deleteWidgetFromDashboard","RSS","CALENDAR","STRAVA","deleteWidget","widget","fetch","newWidget","TabPane","onDragEnd","destination","widgetsData","widgetOrder","updateWidgetsOrder","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","providedDroppable","droppableProps","innerRef","draggableId","providedDraggable","draggableProps","dragHandleProps","Dash","setTabs","setNewWidget","modal","setModal","dispatch","useDispatch","addNewTab","insertedTab","toggleModal","Nav","vertical","navbar","Modal","ModalHeader","ModalBody","addWidget","currentTarget","widgetData","ModalFooter","updateTabs","direction","toggleTab","TabContent","initialState","createStore","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","store","URL","origin","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cff62c7f.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport { ITab } from '../model/Tab';\r\n\r\nconst headers = {\r\n  'Content-type': 'application/json'\r\n};\r\n\r\nexport function addTab(label: string): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/tab/addTab`,\r\n    { label: label },\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function updateTab(\r\n  id: number,\r\n  label: string,\r\n  tabOrder: number\r\n): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTab`,\r\n    { id: id, label: label, tabOrder: tabOrder },\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function updateTabs(tabs: ITab[]): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTabs`,\r\n    tabs,\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function deleteTab(id: number): Promise<AxiosResponse<unknown>> {\r\n  return axios.delete(\r\n    `${process.env.REACT_APP_BACKEND_URL}/tab/deleteTab/?id=${id}`,\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, NavItem, NavLink } from 'reactstrap';\r\nimport { ITab } from '../../model/Tab';\r\nimport { deleteTab, updateTab } from '../../services/TabService';\r\ninterface IProps {\r\n  tab: ITab;\r\n  onTabClicked: () => void;\r\n  onTabDeleted: (id: number) => void;\r\n}\r\n\r\nexport default function NavDash(props: IProps): React.ReactElement {\r\n  const [label, setLabel] = useState(props.tab.label);\r\n  const [isToggled, toggle] = useState(false);\r\n\r\n  function deleteTabFromDash() {\r\n    deleteTab(props.tab.id).then(() => props.onTabDeleted(props.tab.id));\r\n  }\r\n\r\n  function saveTabName() {\r\n    updateTab(props.tab.id, label, props.tab.tabOrder).then(() => {\r\n      toggle(!isToggled);\r\n    });\r\n  }\r\n\r\n  function clickToggle() {\r\n    toggle(!isToggled);\r\n  }\r\n\r\n  return (\r\n    <NavItem className=\"clickableItem\" key={props.tab.id}>\r\n      <NavLink onClick={props.onTabClicked}>\r\n        {isToggled ? (\r\n          <div className=\"flexRow\">\r\n            <input\r\n              onDoubleClick={saveTabName}\r\n              onChange={(event) => setLabel(event.target.value)}\r\n              value={label}\r\n            />\r\n            <Button className=\"deleteTabButton\" onClick={deleteTabFromDash}>\r\n              <i className=\"fa fa-trash\" />\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <span onDoubleClick={clickToggle}>{label}</span>\r\n        )}\r\n      </NavLink>\r\n    </NavItem>\r\n  );\r\n}\r\n","export enum WidgetTypes {\r\n  WEATHER = 1,\r\n  RSS = 2,\r\n  CALENDAR = 3,\r\n  STRAVA = 4\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle\r\n} from 'reactstrap';\r\nimport { WidgetTypes } from '../../enums/WidgetsEnum';\r\n\r\ninterface IProps {\r\n  onWidgetAdded: (type: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst Store: React.FunctionComponent<IProps> = (props) => {\r\n  return (\r\n    <div className=\"flexRow\">\r\n      {Object.keys(WidgetTypes).map((key) => {\r\n        return (\r\n          isNaN(parseInt(key, 0)) && (\r\n            <Card key={key}>\r\n              <CardImg\r\n                top={true}\r\n                width=\"100%\"\r\n                src=\"/assets/318x180.svg\"\r\n                alt=\"Card image cap\"\r\n              />\r\n              <CardBody>\r\n                <CardTitle>{key}</CardTitle>\r\n                <CardSubtitle>Widget {key}</CardSubtitle>\r\n                <CardText>\r\n                  Cliquez ci-dessous pour ajouter un widget {key} au dashboard.\r\n                </CardText>\r\n                <Button\r\n                  id={key}\r\n                  onClick={props.onWidgetAdded}\r\n                  className=\"btn btn-success\"\r\n                  value={WidgetTypes[key]}\r\n                >\r\n                  Ajouter\r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          )\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n","export const TOGGLE_TAB = 'TOGGLE_TAB';\r\n","import { TOGGLE_TAB } from './actionTypes';\r\n\r\nexport const toggleSelectedTab = (\r\n  id: number\r\n): { type: string; payload: { id: number } } => ({\r\n  type: TOGGLE_TAB,\r\n  payload: {\r\n    id\r\n  }\r\n});\r\n","import axios, { AxiosResponse } from 'axios';\r\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\r\nconst headers = {\r\n  'Content-type': 'application/json'\r\n};\r\n\r\nexport function addWidget(\r\n  type: string,\r\n  tabId: number\r\n): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/widget/addWidget`,\r\n    { type: type, tab: { id: tabId } },\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function updateWidgetData(\r\n  id: number,\r\n  data: unknown\r\n): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetData`,\r\n    { id: id, data: data },\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function updateWidgetsOrder(\r\n  widgets: IWidgetConfig[]\r\n): Promise<AxiosResponse<unknown>> {\r\n  const widgetsData = widgets.map((widget) => {\r\n    return { id: widget.id, widgetOrder: widget.widgetOrder };\r\n  });\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetsOrder`,\r\n    widgetsData,\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function deleteWidget(id: number): Promise<AxiosResponse<unknown>> {\r\n  return axios.delete(\r\n    `${process.env.REACT_APP_BACKEND_URL}/widget/deleteWidget/?id=${id}`,\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n","export enum ModeEnum {\r\n  READ = 1,\r\n  EDIT = 2,\r\n  DELETE = 3\r\n}\r\n","import * as winston from 'winston';\r\n\r\nconst logger = winston.createLogger({\r\n  format: winston.format.combine(\r\n    winston.format.json(),\r\n    winston.format.colorize({ all: true })\r\n  ),\r\n  level: 'debug',\r\n  transports: [new winston.transports.Console()]\r\n});\r\n\r\nexport default logger;\r\n","import * as React from 'react';\r\n\r\ninterface IProps {\r\n  idWidget: number;\r\n  onCancelButtonClicked: () => void;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function DeleteWidget(props: IProps): React.ReactElement {\r\n  const confirmDeleteWidget = () => {\r\n    props.onDeleteButtonClicked(props.idWidget);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Êtes-vous sûr de vouloir supprimer ce widget ?</h4>\r\n      <button\r\n        onClick={props.onCancelButtonClicked}\r\n        className=\"btn btn-primary cancelButton\"\r\n      >\r\n        Annuler\r\n      </button>\r\n      <button\r\n        onClick={confirmDeleteWidget}\r\n        className=\"btn btn-danger validateDeletionButton\"\r\n      >\r\n        Supprimer\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ModeEnum } from '../enums/ModeEnum';\r\nimport { ITabState } from '../reducers/tabReducer';\r\nimport DeleteWidget from './utils/DeleteWidget';\r\n\r\ninterface IProps {\r\n  id: number;\r\n  tabId: number;\r\n  config: Record<string, unknown>;\r\n  header: React.ReactElement;\r\n  body: React.ReactElement;\r\n  editModeComponent: React.ReactElement<IProps>;\r\n  refreshFunction: () => void;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function Widget(props: IProps): React.ReactElement {\r\n  const [mode, setMode] = useState(ModeEnum.READ);\r\n  const [refreshIntervalId, setRefreshIntervalId] = useState<NodeJS.Timeout>();\r\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === props.tabId) {\r\n      setRefreshIntervalId(setInterval(props.refreshFunction, 300000));\r\n    } else if (refreshIntervalId) {\r\n      clearInterval(refreshIntervalId);\r\n    }\r\n  }, [activeTab === props.tabId]);\r\n\r\n  useEffect(() => {\r\n    if (refreshIntervalId) {\r\n      clearInterval(refreshIntervalId);\r\n    }\r\n    setRefreshIntervalId(setInterval(props.refreshFunction, 20000));\r\n  }, [props.refreshFunction]);\r\n\r\n  useEffect(() => {\r\n    setMode(ModeEnum.READ);\r\n  }, [props.config]);\r\n\r\n  function editWidget() {\r\n    setMode(ModeEnum.EDIT);\r\n  }\r\n\r\n  function cancelDeletion() {\r\n    setMode(ModeEnum.READ);\r\n  }\r\n\r\n  function deleteWidget() {\r\n    setMode(ModeEnum.DELETE);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {mode === ModeEnum.READ ? (\r\n        <div>\r\n          <div className=\"header\">\r\n            <div className=\"leftGroup widgetHeader\">{props.header}</div>\r\n            <div className=\"rightGroup\">\r\n              <button\r\n                onClick={editWidget}\r\n                className=\"btn btn-default editButton\"\r\n              >\r\n                <i className=\"fa fa-cog\" aria-hidden=\"true\" />\r\n              </button>\r\n              <button\r\n                onClick={props.refreshFunction}\r\n                className=\"btn btn-default refreshButton\"\r\n              >\r\n                <i className=\"fa fa-refresh\" aria-hidden=\"true\" />\r\n              </button>\r\n              <button\r\n                onClick={deleteWidget}\r\n                className=\"btn btn-default deleteButton\"\r\n              >\r\n                <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {props.body}\r\n        </div>\r\n      ) : mode === ModeEnum.DELETE ? (\r\n        <DeleteWidget\r\n          idWidget={props.id}\r\n          onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n          onCancelButtonClicked={cancelDeletion}\r\n        />\r\n      ) : (\r\n        props.editModeComponent\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport './EmptyCalendarWidget.scss';\r\n\r\ninterface IProps {\r\n  calendarUrls?: string[];\r\n  onConfigSubmitted: (calendarUrls: string[]) => void;\r\n}\r\n\r\nexport default function EmptyCalendarWidget(props: IProps): React.ReactElement {\r\n  const [calendarUrls, setCalendarUrls] = useState<string[]>(\r\n    props.calendarUrls || []\r\n  );\r\n  const onValidation = () => {\r\n    props.onConfigSubmitted(calendarUrls);\r\n  };\r\n\r\n  const onCalendarUrlUpdated = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCalendarUrls(\r\n      calendarUrls.map((url: string, index: number) =>\r\n        index.toString() === event.target?.id ? event.target.value : url\r\n      )\r\n    );\r\n  };\r\n\r\n  const onCalendarUrlAdded = () => {\r\n    setCalendarUrls(calendarUrls.concat(''));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {calendarUrls &&\r\n          calendarUrls.map((url, index) => {\r\n            return (\r\n              <input\r\n                key={index}\r\n                id={index.toString()}\r\n                onChange={onCalendarUrlUpdated}\r\n                value={url}\r\n                placeholder=\"Saisissez une URL\"\r\n              />\r\n            );\r\n          })}\r\n        <button className=\"btn btn-success\" onClick={onCalendarUrlAdded}>\r\n          Ajouter\r\n        </button>\r\n      </div>\r\n      <button\r\n        onClick={onValidation}\r\n        disabled={!calendarUrls || calendarUrls?.length < 1}\r\n        className=\"btn btn-success\"\r\n      >\r\n        Valider\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import Calendar from '@toast-ui/react-calendar';\r\nimport axios from 'axios';\r\nimport * as ical from 'ical';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { ICalendarInfo, ISchedule } from 'tui-calendar';\r\nimport { updateWidgetData } from '../../services/WidgetService';\r\nimport logger from '../../utils/LogUtils';\r\nimport Widget from '../Widget';\r\nimport './CalendarWidget.scss';\r\nimport EmptyCalendarWidget from './emptyWidget/EmptyCalendarWidget';\r\n\r\nexport interface IProps {\r\n  id: number;\r\n  calendars?: string[];\r\n  tabId: number;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function CalendarWidget(props: IProps): React.ReactElement {\r\n  const [calendarUrls, setCalendarUrls] = useState(props.calendars);\r\n  const [calendars, setCalendars] = useState<ICalendarInfo[]>([]);\r\n  const [schedules, setSchedules] = useState<ISchedule[]>([]);\r\n  const [selectedView, setSelectedView] = useState('week');\r\n  const calendarRef = React.useRef<Calendar>(null);\r\n\r\n  useEffect(() => {\r\n    refreshWidget();\r\n  }, [calendarUrls]);\r\n\r\n  useEffect(() => {\r\n    calendarRef.current?.getInstance().scrollToNow();\r\n  }, [calendars]);\r\n\r\n  function refreshWidget() {\r\n    setCalendars([]);\r\n    setSchedules([]);\r\n    calendarUrls?.map((calendarUrl: string, index: number) => {\r\n      axios\r\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${calendarUrl}`)\r\n        .then((response) => {\r\n          const calendarId = index.toString();\r\n          const newCalendar = {\r\n            id: calendarId,\r\n            name: calendarUrl.substring(0, 10),\r\n            color: 'blue',\r\n            borderColor: 'blue'\r\n          };\r\n          const cals = index > 0 ? calendars : [];\r\n          setCalendars([...cals, newCalendar]);\r\n          if (calendarRef.current?.getInstance().getViewName() !== 'month') {\r\n            calendarRef.current?.getInstance().scrollToNow();\r\n          }\r\n          const data = ical.parseICS(response.data);\r\n          const scheds = index > 0 ? schedules : [];\r\n          setSchedules([\r\n            ...scheds,\r\n            ...Object.keys(data).map((eventKey) => {\r\n              if (\r\n                Object.prototype.hasOwnProperty.call(data, 'eventKey') &&\r\n                data[eventKey].type === 'VEVENT'\r\n              ) {\r\n                const event = data[eventKey];\r\n                const newSchedule: ISchedule = {\r\n                  calendarId,\r\n                  title: event.summary,\r\n                  start: event.start?.toISOString(),\r\n                  end: event.end?.toISOString(),\r\n                  location: event.location,\r\n                  category:\r\n                    event.end?.getHours() === 0 && event.start?.getHours() === 0\r\n                      ? 'allday'\r\n                      : 'time'\r\n                };\r\n                return newSchedule;\r\n              } else {\r\n                return {};\r\n              }\r\n            })\r\n          ]);\r\n        })\r\n        .catch((error) => {\r\n          logger.error(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  function onConfigSubmitted(updatedCalendars: string[]) {\r\n    updateWidgetData(props.id, { calendars: updatedCalendars })\r\n      .then(() => {\r\n        setCalendarUrls(updatedCalendars);\r\n      })\r\n      .catch((error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function setCalendarOnToday() {\r\n    if (calendarRef && calendarRef.current) {\r\n      const calendarInstance = calendarRef.current.getInstance();\r\n      calendarInstance.today();\r\n    }\r\n  }\r\n\r\n  function previousRange() {\r\n    if (calendarRef && calendarRef.current) {\r\n      const calendarInstance = calendarRef.current.getInstance();\r\n      calendarInstance.prev();\r\n    }\r\n  }\r\n\r\n  function nextRange() {\r\n    if (calendarRef && calendarRef.current) {\r\n      const calendarInstance = calendarRef.current.getInstance();\r\n      calendarInstance.next();\r\n    }\r\n  }\r\n\r\n  function toggleViewDay() {\r\n    setSelectedView('day');\r\n  }\r\n\r\n  function toggleViewWeek() {\r\n    setSelectedView('week');\r\n  }\r\n\r\n  function toggleViewMonth() {\r\n    setSelectedView('month');\r\n  }\r\n\r\n  const widgetHeader = <div>Calendar</div>;\r\n\r\n  const widgetBody = (\r\n    <div>\r\n      <div id=\"calendarMenu\">\r\n        <span id=\"menu-navi\">\r\n          <button\r\n            onClick={setCalendarOnToday}\r\n            className=\"btn btn-default btn-sm move-today\"\r\n            data-action=\"move-today\"\r\n          >\r\n            Today\r\n          </button>\r\n          <button\r\n            onClick={previousRange}\r\n            className=\"btn btn-default btn-sm move-day\"\r\n            data-action=\"move-prev\"\r\n          >\r\n            <i\r\n              className=\"tui-full-calendar-icon tui-full-calendar-ic-arrow-left\"\r\n              data-action=\"move-prev\"\r\n            />\r\n          </button>\r\n          <button\r\n            onClick={nextRange}\r\n            className=\"btn btn-default btn-sm move-day\"\r\n            data-action=\"move-next\"\r\n          >\r\n            <i\r\n              className=\"tui-full-calendar-icon tui-full-calendar-ic-arrow-right\"\r\n              data-action=\"move-next\"\r\n            />\r\n          </button>\r\n        </span>\r\n        <span id=\"renderRange\" className=\"render-range\">\r\n          {calendarRef.current\r\n            ?.getInstance()\r\n            .getDateRangeStart()\r\n            .toDate()\r\n            .toLocaleDateString('fr')}\r\n          -{' '}\r\n          {calendarRef.current\r\n            ?.getInstance()\r\n            .getDateRangeEnd()\r\n            .toDate()\r\n            .toLocaleDateString('fr')}\r\n        </span>\r\n        <button\r\n          onClick={toggleViewDay}\r\n          className={`btn btn-${\r\n            selectedView === 'day' ? 'primary' : 'default'\r\n          }`}\r\n        >\r\n          Jour\r\n        </button>\r\n        <button\r\n          onClick={toggleViewWeek}\r\n          className={`btn btn-${\r\n            selectedView === 'week' ? 'primary' : 'default'\r\n          }`}\r\n        >\r\n          Semaine\r\n        </button>\r\n        <button\r\n          onClick={toggleViewMonth}\r\n          className={`btn btn-${\r\n            selectedView === 'month' ? 'primary' : 'default'\r\n          }`}\r\n        >\r\n          Mois\r\n        </button>\r\n      </div>\r\n\r\n      <Calendar\r\n        ref={calendarRef}\r\n        height=\"inherit\"\r\n        calendars={calendars}\r\n        disableDblClick={true}\r\n        disableClick={false}\r\n        isReadOnly={false}\r\n        month={{\r\n          startDayOfWeek: 1,\r\n          daynames: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam']\r\n        }}\r\n        schedules={schedules}\r\n        scheduleView={true}\r\n        taskView={true}\r\n        template={{\r\n          milestone(schedule) {\r\n            return `<span style=\"color:#fff;background-color: ${schedule.bgColor};\">${schedule.title}</span>`;\r\n          },\r\n          milestoneTitle() {\r\n            return 'Milestone';\r\n          },\r\n          allday(schedule) {\r\n            return `${schedule.title}<i class=\"fa fa-refresh\"></i>`;\r\n          },\r\n          alldayTitle() {\r\n            return 'All Day';\r\n          }\r\n        }}\r\n        useDetailPopup={true}\r\n        useCreationPopup={true}\r\n        view={selectedView}\r\n        defaultView=\"week\"\r\n        week={{\r\n          startDayOfWeek: 1,\r\n          hourStart: 8,\r\n          daynames: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\r\n          showTimezoneCollapseButton: true,\r\n          timezonesCollapsed: true\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        id={props.id}\r\n        tabId={props.tabId}\r\n        config={{ calendarUrls: calendarUrls }}\r\n        header={widgetHeader}\r\n        body={widgetBody}\r\n        editModeComponent={\r\n          <EmptyCalendarWidget\r\n            calendarUrls={calendarUrls}\r\n            onConfigSubmitted={onConfigSubmitted}\r\n          />\r\n        }\r\n        refreshFunction={refreshWidget}\r\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Card, CardBody, Collapse } from 'reactstrap';\r\nimport './ComponentWithDetail.scss';\r\n\r\ninterface IProps {\r\n  componentRoot: React.ReactNode | string;\r\n  componentDetail: React.ReactNode | string;\r\n  link?: string;\r\n}\r\n\r\nexport default function ComponentWithDetail(props: IProps): React.ReactElement {\r\n  const [openCollapse, setOpenCollapse] = useState(false);\r\n  const toggleCollapse = () => {\r\n    setOpenCollapse(!openCollapse);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div onClick={toggleCollapse} className=\"title\">\r\n        {props.componentRoot}\r\n      </div>\r\n      <div>\r\n        <Collapse isOpen={openCollapse}>\r\n          <Card>\r\n            <CardBody>{props.componentDetail}</CardBody>\r\n          </Card>\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import addDays from 'date-fns/addDays'\r\n\r\nexport function getDayFromNow(numberOfDays: number): Date {\r\n  return addDays(new Date(), numberOfDays);\r\n}\r\n\r\nexport function formatDateFromTimestamp(timestamp: number, offset = 0): Date {\r\n  return new Date(timestamp * 1000 + offset * 1000);\r\n}\r\n\r\nexport function formatDateFromUTC(date: string): string {\r\n  const parsedDate = new Date(date);\r\n  return parsedDate.toLocaleString('fr');\r\n}\r\n\r\nexport function formatDayFromUTC(date: string): string {\r\n  const parsedDate = new Date(date);\r\n  return (\r\n    parsedDate.getDate() +\r\n    '/' +\r\n    parsedDate.getMonth() +\r\n    '/' +\r\n    parsedDate.getFullYear()\r\n  );\r\n}\r\n\r\nexport function formatTimeFromDate(date: string): string {\r\n  const parsedDate = new Date(date);\r\n  return parsedDate.getHours() + ':' + parsedDate.getMinutes();\r\n}\r\n\r\nexport function adjustTimeWithOffset(offset: number): number {\r\n  const localeOffset = -(new Date().getTimezoneOffset() * 60);\r\n  if (Math.abs(offset) === Math.abs(localeOffset)) {\r\n    return 0;\r\n  }\r\n  const offsetMilliseconds = Math.abs(offset) + Math.abs(localeOffset);\r\n  return offset < localeOffset ? -offsetMilliseconds : offsetMilliseconds;\r\n}\r\n","import * as React from 'react';\r\nimport { formatDateFromUTC } from '../../../utils/DateUtils';\r\nimport { IArticle } from './IArticle';\r\nimport './RSSArticle.scss';\r\n\r\nfunction stripHtmlFromContent(content?: string) {\r\n  const div = document.createElement('div');\r\n  div.innerHTML = content || '';\r\n  return div.textContent || div.innerText || '';\r\n}\r\n\r\nconst RSSArticle: React.FunctionComponent<IArticle> = (props) => {\r\n  return (\r\n    <div className=\"article\">\r\n      <div>\r\n        <a href={props.link}>{props.title}</a>\r\n      </div>\r\n      <div>\r\n        {stripHtmlFromContent(props.content) ||\r\n          stripHtmlFromContent(props.description)}\r\n      </div>\r\n      <div>\r\n        Publié le {formatDateFromUTC(props.pubDate || '')}{' '}\r\n        {props.author && 'par ' + props.author}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RSSArticle;\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport './EmptyRSSWidget.scss';\r\n\r\ninterface IProps {\r\n  url?: string;\r\n  onUrlSubmitted: (url: string) => void;\r\n}\r\n\r\nexport default function EmptyRSSWidget(props: IProps): React.ReactElement {\r\n  const [url, setUrl] = useState(props.url);\r\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    setUrl(event.target.value);\r\n  const onValidation = () => {\r\n    if (url) {\r\n      props.onUrlSubmitted(url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        name=\"url\"\r\n        onChange={onChangeHandler}\r\n        value={url}\r\n        placeholder=\"Saisissez l'URL du flux RSS\"\r\n      />\r\n      <button\r\n        onClick={onValidation}\r\n        disabled={!url || url?.length < 1}\r\n        className=\"btn btn-success\"\r\n      >\r\n        Valider\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport RSSParser from 'rss-parser';\r\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\r\nimport { updateWidgetData } from '../../services/WidgetService';\r\nimport logger from '../../utils/LogUtils';\r\nimport Widget from '../Widget';\r\nimport { IArticle, ImageContent, IRSSHeader } from './article/IArticle';\r\nimport RSSArticle from './article/RSSArticle';\r\nimport EmptyRSSWidget from './emptyWidget/EmptyRSSWidget';\r\nimport './RSSWidget.scss';\r\n\r\ninterface IProps {\r\n  id: number;\r\n  url?: string;\r\n  tabId: number;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function RSSWidget(props: IProps): React.ReactElement {\r\n  const [feed, setFeed] = useState<IArticle[]>([]);\r\n  const [url, setUrl] = useState(props.url);\r\n  const [description, setDecription] = useState('');\r\n  const [image, setImage] = useState<ImageContent>();\r\n  const [link, setLink] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const rssParser = new RSSParser();\r\n\r\n  function fetchDataFromRssFeed() {\r\n    if (url) {\r\n      rssParser\r\n        .parseURL(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${url}`)\r\n        .then((apiResult: unknown) => {\r\n          const result = apiResult as IRSSHeader;\r\n          setDecription(result.description);\r\n          setFeed(result.items);\r\n          setImage(result.image);\r\n          setLink(result.link);\r\n          setTitle(result.title);\r\n        })\r\n        .catch((error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDataFromRssFeed();\r\n  }, [url]);\r\n\r\n  function refreshWidget() {\r\n    setFeed([]);\r\n    fetchDataFromRssFeed();\r\n  }\r\n\r\n  function onUrlSubmitted(rssUrl: string) {\r\n    updateWidgetData(props.id, { url: rssUrl })\r\n      .then(() => {\r\n        setUrl(rssUrl);\r\n        refreshWidget();\r\n      })\r\n      .catch((error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function formatTitleForArticle(pubDate: string, articleTitle?: string) {\r\n    const date = pubDate\r\n      ? new Date(pubDate).toLocaleTimeString('fr', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      : '';\r\n    return `${date} ${articleTitle}`;\r\n  }\r\n\r\n  function getFeedFromRSS(data: IArticle[]) {\r\n    return data.map((article) => {\r\n      return (\r\n        <ComponentWithDetail\r\n          key={article.guid}\r\n          componentRoot={formatTitleForArticle(article.pubDate, article.title)}\r\n          componentDetail={<RSSArticle {...article} />}\r\n          link={article.link}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  const widgetHeader = (\r\n    <div className=\"rssWidgetTitle\">\r\n      <a href={link} className=\"flexRow\">\r\n        {image && (\r\n          <div>\r\n            <img className=\"imgLogoRSS\" src={image?.url} alt=\"logo\" />\r\n          </div>\r\n        )}\r\n        <div className=\"rssTitle\">{title}</div>\r\n      </a>\r\n    </div>\r\n  );\r\n\r\n  const widgetBody = (\r\n    <div>\r\n      {url && feed && (\r\n        <div>\r\n          <div className=\"rssDescription\">{description}</div>\r\n          <div className=\"feed\">{getFeedFromRSS(feed)}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        id={props.id}\r\n        tabId={props.tabId}\r\n        config={{ url: url }}\r\n        header={widgetHeader}\r\n        body={widgetBody}\r\n        editModeComponent={\r\n          <EmptyRSSWidget url={url} onUrlSubmitted={onUrlSubmitted} />\r\n        }\r\n        refreshFunction={refreshWidget}\r\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport logger from '../utils/LogUtils';\r\n\r\nexport function useLocalStorage(\r\n  key: string,\r\n  initialValue: unknown\r\n): [unknown, (value: unknown) => void] {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      logger.error(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value: unknown) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      logger.error(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n","import { format } from 'date-fns';\r\nimport * as React from 'react';\r\nimport { IActivity } from '../IStrava';\r\n\r\nexport default function StravaActivity(props: IActivity): React.ReactElement {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <a href={`https://www.strava.com/activities/${props.id}`}>\r\n          {format(new Date(props.start_date_local), 'ddd DD MMM')}{' '}\r\n          {props.name}\r\n        </a>\r\n      </div>\r\n      <div>Distance : {Math.round(props.distance * 1000) / 1000000} kms</div>\r\n      <div>Durée : {props.moving_time / 60} mins</div>\r\n      <div>Denivelé : {props.total_elevation_gain}</div>\r\n      <div>Trophées : {props.achievement_count}</div>\r\n      <div>Vitesse moyenne : {props.average_speed}</div>\r\n      <div>Vitesse max : {props.max_speed}</div>\r\n      <div>Kudos : {props.kudos_count}</div>\r\n      <div>Commentaires : {props.comment_count}</div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\n\r\ninterface IProps {\r\n  clientId?: string;\r\n  clientSecret?: string;\r\n  onConfigSubmitted: (clientId: string, clientSecret: string) => void;\r\n}\r\n\r\nexport default function EmptyStravaWidget(props: IProps): React.ReactElement {\r\n  const [clientId, setClientId] = useState(props.clientId || '');\r\n  const [clientSecret, setClientSecret] = useState(props.clientSecret || '');\r\n  const onClientIdChangeHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => setClientId(event.target.value);\r\n  const onClientSecretChangeHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => setClientSecret(event.target.value);\r\n\r\n  const onValidation = () => {\r\n    props.onConfigSubmitted(clientId, clientSecret);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        name=\"clientId\"\r\n        onChange={onClientIdChangeHandler}\r\n        value={clientId}\r\n        placeholder=\"Saisissez le clientId\"\r\n      />\r\n      <input\r\n        name=\"clientSecret\"\r\n        onChange={onClientSecretChangeHandler}\r\n        value={clientSecret}\r\n        placeholder=\"Saisissez le clientSecret\"\r\n      />\r\n\r\n      <button\r\n        onClick={onValidation}\r\n        disabled={\r\n          !clientId ||\r\n          clientId?.length < 1 ||\r\n          !clientSecret ||\r\n          clientSecret?.length < 1\r\n        }\r\n        className=\"btn btn-success\"\r\n      >\r\n        Valider\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport * as queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\r\nimport { useLocalStorage } from '../../hooks/localStorageHook';\r\nimport { updateWidgetData } from '../../services/WidgetService';\r\nimport logger from '../../utils/LogUtils';\r\nimport Widget from '../Widget';\r\nimport StravaActivity from './activity/StravaActivity';\r\nimport EmptyStravaWidget from './emptyWidget/EmptyStravaWidget';\r\nimport { IActivity, IAthlete } from './IStrava';\r\nimport { format, isAfter, isBefore } from 'date-fns';\r\nimport { Bar } from 'react-chartjs-2';\r\ninterface IProps {\r\n  id: number;\r\n  clientId?: string;\r\n  clientSecret?: string;\r\n  tabId: number;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function StravaWidget(props: IProps): React.ReactElement {\r\n  const [clientId, setClientId] = useState(props.clientId);\r\n  const [clientSecret, setClientSecret] = useState(props.clientSecret);\r\n  const [activities, setActivities] = useState([]);\r\n  const [athlete, setAthlete] = useState<IAthlete>();\r\n  const [token, setToken] = useLocalStorage('strava_token', null);\r\n  const [refreshToken, setRefreshToken] = useLocalStorage(\r\n    'strava_refresh_token',\r\n    null\r\n  );\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useLocalStorage(\r\n    'strava_token_expires_at',\r\n    null\r\n  );\r\n  const { search } = useLocation();\r\n\r\n  const paginationActivities = 20;\r\n\r\n  useEffect(() => {\r\n    const values = queryString.parse(search);\r\n    if (values && values.code) {\r\n      const apiCode = values.code.toString();\r\n      getToken(apiCode);\r\n    }\r\n    if (\r\n      !token ||\r\n      !refreshToken ||\r\n      isBefore(new Date(tokenExpirationDate as number), new Date())\r\n    ) {\r\n      refreshTokenFromApi();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      refreshWidget();\r\n    }\r\n  }, [token]);\r\n\r\n  function onConfigSubmitted(\r\n    updatedClientId: string,\r\n    updatedClientSecret: string\r\n  ) {\r\n    updateWidgetData(props.id, {\r\n      clientId: updatedClientId,\r\n      clientSecret: updatedClientSecret\r\n    })\r\n      .then(() => {\r\n        setClientId(clientId);\r\n        setClientSecret(clientSecret);\r\n        refreshWidget();\r\n      })\r\n      .catch((error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function refreshWidget() {\r\n    setActivities([]);\r\n    getAthleteData();\r\n    getActivities();\r\n  }\r\n\r\n  function getToken(apiCode: string) {\r\n    axios\r\n      .post('https://www.strava.com/oauth/token', {\r\n        client_id: clientId,\r\n        client_secret: clientSecret,\r\n        code: apiCode,\r\n        grant_type: 'authorization_code'\r\n      })\r\n      .then((response) => {\r\n        setToken(response.data.access_token as string);\r\n        setRefreshToken(response.data.refresh_token);\r\n        setTokenExpirationDate(response.data.expires_at);\r\n        setAthlete(response.data.athlete);\r\n      })\r\n      .catch((error: Error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function refreshTokenFromApi() {\r\n    if (refreshToken) {\r\n      axios\r\n        .post('https://www.strava.com/oauth/token', {\r\n          client_id: clientId,\r\n          client_secret: clientSecret,\r\n          refresh_token: refreshToken,\r\n          grant_type: 'refresh_token'\r\n        })\r\n        .then((response) => {\r\n          setToken(response.data.access_token);\r\n          setRefreshToken(response.data.refresh_token);\r\n          setTokenExpirationDate(response.data.expires_at);\r\n          setAthlete(response.data.athlete);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.error(error.message);\r\n        });\r\n    } else {\r\n      logger.error('No refresh token');\r\n    }\r\n  }\r\n\r\n  function getAthleteData() {\r\n    if (token) {\r\n      axios\r\n        .get('https://www.strava.com/api/v3/athlete', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then((response) => {\r\n          setAthlete(response.data);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  function getActivities() {\r\n    if (\r\n      token &&\r\n      tokenExpirationDate &&\r\n      isAfter(new Date(tokenExpirationDate as number), new Date())\r\n    ) {\r\n      axios\r\n        .get(\r\n          `https://www.strava.com/api/v3/athlete/activities?page=1&per_page=${paginationActivities}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setActivities(response.data);\r\n        })\r\n        .catch((error) => {\r\n          logger.error(error.message);\r\n        });\r\n    } else {\r\n      refreshTokenFromApi();\r\n    }\r\n  }\r\n\r\n  function getStatsFromActivities() {\r\n    const activitiesByMonthList = activities\r\n      .reverse()\r\n      .reduce((activitiesByMonth: IActivity[], activity: IActivity) => {\r\n        const month = format(new Date(activity.start_date_local), 'YYYY-MM');\r\n        if (!activitiesByMonth[month]) {\r\n          activitiesByMonth[month] = [];\r\n        }\r\n        activitiesByMonth[month].push(\r\n          Math.round(activity.distance * 1000) / 1000000\r\n        );\r\n        return activitiesByMonth;\r\n      }, []);\r\n    return Object.keys(activitiesByMonthList).map((month) => {\r\n      return {\r\n        x: new Date(month),\r\n        y: Math.round(\r\n          activitiesByMonthList[month].reduce(\r\n            (total: number, distance: number) => total + distance\r\n          )\r\n        )\r\n      };\r\n    });\r\n  }\r\n\r\n  const widgetHeader = (\r\n    <div>\r\n      <a href={`https://www.strava.com/athletes/${athlete?.id}`}>\r\n        <img src={athlete?.profile_medium} />\r\n        {athlete?.firstname} {athlete?.lastname}\r\n      </a>\r\n    </div>\r\n  );\r\n\r\n  const widgetBody = (\r\n    <div className=\"flexColumn\">\r\n      <div style={{ flex: '1 0 50%', overflowY: 'scroll' }}>\r\n        {activities.map((activity: IActivity) => {\r\n          return (\r\n            <ComponentWithDetail\r\n              key={activity.id}\r\n              componentRoot={`${format(\r\n                new Date(activity.start_date_local),\r\n                'ddd DD MMM'\r\n              )}  ${activity.name}  ${\r\n                Math.round(activity.distance * 1000) / 1000000\r\n              } kms`}\r\n              componentDetail={<StravaActivity {...activity} />}\r\n              link={`https://www.strava.com/activities/${activity.id}`}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div style={{ minHeight: '25vh', flex: '1 0 50%' }}>\r\n        <Bar\r\n          data={{\r\n            datasets: [\r\n              {\r\n                label: 'Course',\r\n                backgroundColor: 'orange',\r\n                data: getStatsFromActivities()\r\n              }\r\n            ]\r\n          }}\r\n          \r\n        />\r\n      </div>\r\n\r\n      {(!token ||\r\n        !refreshToken ||\r\n        (tokenExpirationDate &&\r\n          isBefore(new Date(tokenExpirationDate as number), new Date()))) && (\r\n        <a\r\n          href={`https://www.strava.com/oauth/authorize?client_id=${clientId}&redirect_uri=${process.env.REACT_APP_FRONTEND_URL}&response_type=code&scope=read,activity:read`}\r\n        >\r\n          <Button>Se connecter</Button>\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        id={props.id}\r\n        tabId={props.tabId}\r\n        config={{ clientId: clientId }}\r\n        header={widgetHeader}\r\n        body={widgetBody}\r\n        editModeComponent={\r\n          <EmptyStravaWidget\r\n            clientId={clientId}\r\n            clientSecret={clientSecret}\r\n            onConfigSubmitted={onConfigSubmitted}\r\n          />\r\n        }\r\n        refreshFunction={refreshWidget}\r\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport './EmptyWeatherWidget.scss';\r\n\r\ninterface IProps {\r\n  weather_api_key?: string;\r\n  city?: string;\r\n  onConfigSubmitted: (weatherApiKey: string, city: string) => void;\r\n}\r\n\r\nexport default function EmptyWeatherWidget(props: IProps): React.ReactElement {\r\n  const [city, setCity] = useState(props.city || '');\r\n  const [weatherApiKey, setWeatherApiKey] = useState(\r\n    props.weather_api_key || ''\r\n  );\r\n  const onWeatherApiKeyChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.value) {\r\n      setWeatherApiKey(event.target.value);\r\n    }\r\n  };\r\n  const onCityChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    setCity(event.target.value);\r\n  const onValidation = () => {\r\n    props.onConfigSubmitted(weatherApiKey, city);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        name=\"weatherApiKey\"\r\n        onChange={onWeatherApiKeyChangeHandler}\r\n        value={weatherApiKey}\r\n        placeholder=\"Saisissez la clé d'API\"\r\n      />\r\n      <input\r\n        name=\"city\"\r\n        onChange={onCityChangeHandler}\r\n        value={city}\r\n        placeholder=\"Saisissez de nom de la ville\"\r\n      />\r\n      <button\r\n        className=\"validateButton btn btn-success\"\r\n        onClick={onValidation}\r\n        disabled={\r\n          !city ||\r\n          !weatherApiKey ||\r\n          city?.length < 1 ||\r\n          weatherApiKey?.length < 1\r\n        }\r\n      >\r\n        Valider\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  adjustTimeWithOffset,\r\n  formatDateFromTimestamp\r\n} from '../../../utils/DateUtils';\r\nimport { IForecast } from '../IWeather';\r\nimport './Forecast.scss';\r\n\r\nconst Forecast: React.FunctionComponent<IForecast> = (props) => {\r\n  return (\r\n    <div className=\"forecast\">\r\n      <div>\r\n        {formatDateFromTimestamp(\r\n          props.dt,\r\n          adjustTimeWithOffset(props.city.timezone)\r\n        ).toLocaleString('fr', {\r\n          weekday: 'short',\r\n          day: 'numeric',\r\n          hour: '2-digit'\r\n        })}\r\n      </div>\r\n      <div className=\"flexRow\">\r\n        <div>\r\n          <img\r\n            src={`https://openweathermap.org/img/wn/${props.weather[0]?.icon}@2x.png`}\r\n            className=\"smallImage\"\r\n            title={props.weather[0]?.description}\r\n            alt={props.weather[0]?.description}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <i\r\n              className=\"fa fa-thermometer-three-quarters fa-sm mr10\"\r\n              style={{ color: 'crimson' }}\r\n            />\r\n            {props.main.temp_max}°\r\n          </div>\r\n          <div>\r\n            <i\r\n              className=\"fa fa-thermometer-quarter fa-sm mr10\"\r\n              style={{ color: 'blue' }}\r\n            />\r\n            {props.main.temp_min}°\r\n          </div>\r\n          <div>\r\n            <i\r\n              className=\"fa fa-tint fa-sm mr10\"\r\n              style={{ color: 'lightblue' }}\r\n            />\r\n            {props.main.humidity}%\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import axios, { AxiosResponse } from 'axios';\r\n\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { updateWidgetData } from '../../services/WidgetService';\r\nimport {\r\n  adjustTimeWithOffset,\r\n  formatDateFromTimestamp,\r\n  getDayFromNow\r\n} from '../../utils/DateUtils';\r\nimport logger from '../../utils/LogUtils';\r\nimport Widget from '../Widget';\r\nimport EmptyWeatherWidget from './emptyWidget/EmptyWeatherWidget';\r\nimport Forecast from './forecast/Forecast';\r\nimport { ICity, IForecast, IWeather, IWeatherAPIResponse } from './IWeather';\r\nimport './WeatherWidget.scss';\r\nimport { format } from 'date-fns';\r\n\r\n\r\nexport interface IProps {\r\n  id: number;\r\n  weather_api_key?: string;\r\n  city?: string;\r\n  tabId: number;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function WeatherWidget(props: IProps): React.ReactElement {\r\n  const WEATHER_API = 'http://api.openweathermap.org/data/2.5/';\r\n  const WEATHER_ENDPOINT = 'weather';\r\n  const FORECAST_ENDPOINT = 'forecast';\r\n  const API_OPTIONS = '?units=metric&lang=fr&appid=';\r\n\r\n  const [cityToQuery, setCityToQuery] = useState(props.city);\r\n  const [apiKey, setApiKey] = useState(props.weather_api_key);\r\n  const [weather, setWeather] = useState<IWeather>();\r\n  const [forecast, setForecast] = useState<IForecast[]>();\r\n  const [city, setCity] = useState<ICity>();\r\n\r\n  function fetchDataFromWeatherApi() {\r\n    if (apiKey && cityToQuery) {\r\n      axios\r\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\r\n          params: {\r\n            url: `${WEATHER_API}${WEATHER_ENDPOINT}${API_OPTIONS}${apiKey}&q=${cityToQuery}`\r\n          }\r\n        })\r\n        .then((result) => {\r\n          setWeather(result.data);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.debug(error);\r\n        });\r\n      axios\r\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\r\n          params: {\r\n            url: `${WEATHER_API}${FORECAST_ENDPOINT}${API_OPTIONS}${apiKey}&q=${cityToQuery}`\r\n          }\r\n        })\r\n        .then((result: AxiosResponse) => {\r\n          setForecast((result.data as IWeatherAPIResponse).list);\r\n          setCity((result.data as IWeatherAPIResponse).city);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.debug(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDataFromWeatherApi();\r\n  }, [cityToQuery, apiKey]);\r\n\r\n  function refreshWidget() {\r\n    setWeather(undefined);\r\n    setForecast(undefined);\r\n    setCity(undefined);\r\n    fetchDataFromWeatherApi();\r\n  }\r\n\r\n  function onConfigSubmitted(weatherApiKey: string, updatedCity: string) {\r\n    updateWidgetData(props.id, {\r\n      city: updatedCity,\r\n      weather_api_key: weatherApiKey\r\n    })\r\n      .then(() => {\r\n        setCityToQuery(updatedCity);\r\n        setApiKey(weatherApiKey);\r\n        refreshWidget();\r\n      })\r\n      .catch((error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  const widgetHeader = <div>La météo aujourd'hui à {city?.name}</div>;\r\n\r\n  const widgetBody = (\r\n    <div>\r\n      {city && weather && weather.weather && (\r\n        <div className=\"flexRow\">\r\n          <div>\r\n            <img\r\n              style={{ width: '80px' }}\r\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n              title={weather.weather[0].description}\r\n              alt={weather.weather[0].description}\r\n            />\r\n          </div>\r\n          <div className=\"flexRow\" style={{ placeItems: 'center' }}>\r\n            <div className=\"flexColumn mr-5\">\r\n              <div>{weather.weather[0].description}</div>\r\n              <div>\r\n                <i className=\"fa fa-thermometer-three-quarters fa-md\" />{' '}\r\n                {weather.main.temp}°\r\n              </div>\r\n            </div>\r\n            <div className=\"flexColumn\">\r\n              <div className=\"spaceBetween\">\r\n                <div>\r\n                  <i className=\"fa fa-sun-o fa-md\" />{' '}\r\n                  {formatDateFromTimestamp(\r\n                    weather.sys.sunrise,\r\n                    adjustTimeWithOffset(weather.timezone)\r\n                  ).toLocaleTimeString('fr')}\r\n                </div>\r\n                <div>\r\n                  <i className=\"fa fa-moon-o fa-md\" />{' '}\r\n                  {formatDateFromTimestamp(\r\n                    weather.sys.sunset,\r\n                    adjustTimeWithOffset(weather.timezone)\r\n                  ).toLocaleTimeString('fr')}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <i className=\"fa fa-clock-o fa-md\" />{' '}\r\n                {formatDateFromTimestamp(\r\n                  weather.dt,\r\n                  adjustTimeWithOffset(weather.timezone)\r\n                ).toLocaleString('fr')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {city && forecast && (\r\n        <div>\r\n          <span className=\"bold\">Prévisions</span>\r\n          <br />\r\n          <div className=\"flexRow forecastRow\">\r\n            {city &&\r\n              forecast &&\r\n              forecast\r\n                .filter(\r\n                  (forecastDay) =>\r\n                    forecastDay.dt * 1000 < getDayFromNow(2).getTime()\r\n                )\r\n                .map((forecastDay) => {\r\n                  return (\r\n                    <div className=\"forecastContainer\" key={forecastDay.dt}>\r\n                      <Forecast {...forecastDay} city={city} />\r\n                    </div>\r\n                  );\r\n                })}\r\n          </div>\r\n          <div style={{ height: '25vh' }}>\r\n            <Line\r\n              data={{\r\n                labels: forecast\r\n                  .filter(\r\n                    (forecastDay) =>\r\n                      formatDateFromTimestamp(\r\n                        forecastDay.dt,\r\n                        adjustTimeWithOffset(city.timezone)\r\n                      ).getHours() === 16\r\n                  )\r\n                  .map((forecastDay) =>\r\n                    format(new Date(forecastDay.dt * 1000), 'ddd DD')\r\n                  ),\r\n                datasets: [\r\n                  {\r\n                    label: 'Température',\r\n                    borderColor: 'orange',\r\n                    data: forecast\r\n                      .filter(\r\n                        (forecastDay) =>\r\n                          formatDateFromTimestamp(\r\n                            forecastDay.dt,\r\n                            adjustTimeWithOffset(city.timezone)\r\n                          ).getHours() === 16\r\n                      )\r\n                      .map((forecastDay) => forecastDay.main.temp_max)\r\n                  },\r\n                  {\r\n                    label: 'Ressenti',\r\n                    borderColor: 'red',\r\n                    data: forecast\r\n                      .filter(\r\n                        (forecastDay) =>\r\n                          formatDateFromTimestamp(\r\n                            forecastDay.dt,\r\n                            adjustTimeWithOffset(city.timezone)\r\n                          ).getHours() === 16\r\n                      )\r\n                      .map((forecastDay) => forecastDay.main.feels_like)\r\n                  }\r\n                ]\r\n              }}\r\n              options={{ maintainAspectRatio: false }}\r\n            />\r\n          </div>\r\n          <div className=\"flexRow forecastRow\">\r\n            {city &&\r\n              forecast &&\r\n              forecast\r\n                .filter(\r\n                  (forecastDay) =>\r\n                    forecastDay.dt * 1000 > getDayFromNow(2).getTime()\r\n                )\r\n                .map((forecastDay) => {\r\n                  return (\r\n                    <div className=\"forecastContainer\" key={forecastDay.dt}>\r\n                      <Forecast {...forecastDay} city={city} />\r\n                    </div>\r\n                  );\r\n                })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        id={props.id}\r\n        tabId={props.tabId}\r\n        config={{ city: city, apiKey: apiKey }}\r\n        header={widgetHeader}\r\n        body={widgetBody}\r\n        editModeComponent={\r\n          <EmptyWeatherWidget\r\n            city={cityToQuery}\r\n            weather_api_key={apiKey}\r\n            onConfigSubmitted={onConfigSubmitted}\r\n          />\r\n        }\r\n        refreshFunction={refreshWidget}\r\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\r\nimport ITab from './ITab';\r\nimport './TabNavigation.scss';\r\n\r\ninterface IProps {\r\n  tabList: ITab[];\r\n}\r\n\r\nconst TabNavigation: React.FunctionComponent<IProps> = (props) => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <div className=\"tabContainer\">\r\n            {props.tabList.map((tab: ITab) => {\r\n              return (\r\n                <div key={tab.title}>\r\n                  <Link to={tab.path}>{tab.title}</Link>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div>\r\n            {props.tabList.map((tab: ITab) => {\r\n              return (\r\n                <div key={tab.title}>\r\n                  <Route\r\n                    path={tab.path}\r\n                    exact={tab.exact}\r\n                    component={tab.component}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabNavigation;\r\n","import * as React from 'react';\r\nimport ITab from '../../tab_facebook/ITab';\r\nimport TabNavigation from '../../tab_facebook/TabNavigation';\r\nimport logger from '../../utils/LogUtils';\r\nimport EventsTab from './events/EventsTab';\r\nimport { getProfileInfo } from './FacebookAPI';\r\nimport GroupsTab from './groups/GroupsTab';\r\nimport IFBUser from './IFBUser';\r\n\r\ndeclare const window: any;\r\ndeclare const FB: any;\r\n\r\ninterface IProps {\r\n  appId?: string;\r\n}\r\n\r\ninterface IState {\r\n  loginStatusResponse: any;\r\n  userData?: IFBUser;\r\n}\r\n\r\nconst tabs: ITab[] = [\r\n  {\r\n    title: 'Groupes',\r\n    component: GroupsTab,\r\n    path: '/groups/'\r\n  },\r\n  {\r\n    title: 'Events',\r\n    component: EventsTab,\r\n    path: '/events/'\r\n  }\r\n];\r\n\r\nexport default class FacebookWidget extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    window.fbAsyncInit = () => {\r\n      FB.init({\r\n        appId: props.appId,\r\n        xfbml: true,\r\n        version: 'v3.2'\r\n      });\r\n\r\n      // Broadcast an event when FB object is ready\r\n      const fbInitEvent = new Event('FBObjectReady');\r\n      document.dispatchEvent(fbInitEvent);\r\n    };\r\n    ((d, s, id) => {\r\n      let js: any = d.getElementsByTagName(s)[0];\r\n      const fjs: Element = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) {\r\n        return;\r\n      }\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\r\n      if (fjs && fjs.parentNode) {\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n      }\r\n    })(document, 'script', 'facebook-jssdk');\r\n    document.addEventListener('FBObjectReady', this.checkLoginStatus);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    document.removeEventListener('FBObjectReady', this.checkLoginStatus);\r\n  }\r\n\r\n  public checkLoginStatus = (): void => {\r\n    FB.getLoginStatus(this.facebookLoginHandler);\r\n  };\r\n\r\n  /**\r\n   * Check login status and call login api is user is not logged in\r\n   */\r\n  public facebookLogin = (): void => {\r\n    logger.debug('facebookLogin');\r\n    FB.getLoginStatus((response: any) => {\r\n      logger.debug(response);\r\n      this.setState({ loginStatusResponse: response });\r\n      if (response.status !== 'connected') {\r\n        FB.login(this.facebookLoginHandler, {\r\n          scope:\r\n            'user_birthday,user_hometown,user_likes,user_photos,user_friends,user_status,user_tagged_places,user_posts,user_gender,user_link,email,public_profile'\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  public facebookLogout = (): void => {\r\n    FB.logout((response: any) => {\r\n      logger.debug(response);\r\n      this.setState({ userData: undefined, loginStatusResponse: response });\r\n    });\r\n  };\r\n\r\n  public facebookLoginHandler = (response: any): void => {\r\n    logger.debug('facebookLoginHandler');\r\n    this.setState({ loginStatusResponse: response });\r\n    if (response.status === 'connected') {\r\n      logger.debug('Connected');\r\n      getProfileInfo()\r\n        .then((result: IFBUser) => {\r\n          logger.debug('Result');\r\n          logger.debug(result);\r\n          this.setState({ userData: result });\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.debug(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  public render(): React.ReactElement {\r\n    let element = null;\r\n    if (\r\n      this.state &&\r\n      this.state.loginStatusResponse &&\r\n      this.state.loginStatusResponse.status === 'connected' &&\r\n      this.state.userData\r\n    ) {\r\n      const userData: IFBUser = this.state.userData;\r\n      element = (\r\n        <div>\r\n          <div>\r\n            {userData.first_name} {userData.last_name}\r\n          </div>\r\n          <div onClick={this.facebookLogout}>Se déconnecter</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      element = (\r\n        <div\r\n          onClick={this.facebookLogin}\r\n          className=\"fb-login-button\"\r\n          data-max-rows=\"1\"\r\n          data-size=\"large\"\r\n          data-button-type=\"continue_with\"\r\n          data-use-continue-as=\"true\"\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {element}\r\n        {this.state && this.state.userData && (\r\n          <div>\r\n            <TabNavigation tabList={tabs} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport logger from '../../../utils/LogUtils';\r\nimport { getGroupsData } from '../FacebookAPI';\r\nimport IGroup from './IGroup';\r\n\r\nexport default function GroupsTab(): React.ReactElement {\r\n  useEffect(() => {\r\n    getGroupsData()\r\n      .then((result: unknown) => {\r\n        logger.debug(result as IGroup[]);\r\n      })\r\n      .catch((error: Error) => {\r\n        logger.debug(error);\r\n      });\r\n  }, []);\r\n\r\n  return <div>Liste des groupes auxquels vous appartenez</div>;\r\n}\r\n","import logger from '../../utils/LogUtils';\r\nimport IFBUser from './IFBUser';\r\n\r\ninterface IFB {\r\n  api: (url: string, data: unknown, response: (data:unknown) => unknown) => Promise<unknown>;\r\n}\r\n\r\ndeclare const FB: IFB;\r\n\r\nexport function getProfileInfo(): Promise<IFBUser> {\r\n  return new Promise((resolve, reject) => {\r\n    logger.debug('getProfile');\r\n    FB.api(\r\n      '/me',\r\n      {\r\n        fields: 'id,first_name,last_name,hometown,location,birthday,gender,link'\r\n      },\r\n      (userData: unknown) => {\r\n        if (userData) {\r\n          resolve(userData as IFBUser);\r\n        } else {\r\n          reject(Error('Promise rejected'));\r\n        }\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nexport function getGroupsData(): Promise<unknown> {\r\n  return new Promise((resolve, reject) => {\r\n    logger.debug('getGroupsData');\r\n    FB.api(\r\n      '/me/groups',\r\n      {\r\n        fields:\r\n          'administrator,bookmark_order,id,unread,cover,created_time,description,icon,email,link,name,purpose,venue,picture'\r\n      },\r\n      (groupsData) => {\r\n        if (groupsData) {\r\n          resolve(groupsData);\r\n        } else {\r\n          reject(Error('Promise rejected'));\r\n        }\r\n      }\r\n    );\r\n  });\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport logger from '../../../utils/LogUtils';\r\n\r\nexport default function EventsTab(): React.ReactElement {\r\n  useEffect(() => {\r\n    logger.debug('onComponentDidMount');\r\n  });\r\n\r\n  return <div>Liste des prochains évènements</div>;\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  DragDropContext,\r\n  Draggable,\r\n  Droppable,\r\n  DroppableProvided,\r\n  DropResult\r\n} from 'react-beautiful-dnd';\r\nimport { useSelector } from 'react-redux';\r\nimport { TabPane } from 'reactstrap';\r\nimport { ITabState } from '../reducers/tabReducer';\r\nimport { WidgetTypes } from '../enums/WidgetsEnum';\r\nimport { deleteWidget, updateWidgetsOrder } from '../services/WidgetService';\r\nimport logger from '../utils/LogUtils';\r\nimport CalendarWidget from '../widgets/calendar/CalendarWidget';\r\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\r\nimport RSSWidget from '../widgets/rss/RSSWidget';\r\nimport StravaWidget from '../widgets/strava/StravaWidget';\r\nimport WeatherWidget from '../widgets/weather/WeatherWidget';\r\nimport FacebookWidget from 'src/widgets/facebook/FacebookWidget';\r\n\r\ninterface IProps {\r\n  tabId: number;\r\n  newWidget?: IWidgetConfig;\r\n}\r\n\r\nexport default function TabDash(props: IProps): React.ReactElement {\r\n  const [widgets, setWidgets] = useState([]);\r\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\r\n\r\n  function createWidget(widgetConfig: IWidgetConfig) {\r\n    switch (widgetConfig.type) {\r\n      case WidgetTypes.WEATHER: {\r\n        return (\r\n          <WeatherWidget\r\n            id={widgetConfig.id}\r\n            tabId={widgetConfig.tab.id}\r\n            {...widgetConfig.data}\r\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\r\n          />\r\n        );\r\n      }\r\n      case WidgetTypes.RSS: {\r\n        return (\r\n          <RSSWidget\r\n            id={widgetConfig.id}\r\n            tabId={widgetConfig.tab.id}\r\n            {...widgetConfig.data}\r\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\r\n          />\r\n        );\r\n      }\r\n      case WidgetTypes.CALENDAR: {\r\n        return (\r\n          <CalendarWidget\r\n            id={widgetConfig.id}\r\n            tabId={widgetConfig.tab.id}\r\n            {...widgetConfig.data}\r\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\r\n          />\r\n        );\r\n      }\r\n      case WidgetTypes.STRAVA: {\r\n        return (\r\n          <StravaWidget\r\n            id={widgetConfig.id}\r\n            tabId={widgetConfig.tab.id}\r\n            {...widgetConfig.data}\r\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\r\n          />\r\n        );\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteWidgetFromDashboard(id: number) {\r\n    deleteWidget(id)\r\n      .then((response) => {\r\n        if (response) {\r\n          setWidgets(\r\n            widgets.filter((widget: IWidgetConfig) => {\r\n              return widget.id !== id;\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((error: Error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!widgets.length && activeTab === props.tabId) {\r\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/widget/?tabId=${props.tabId}`)\r\n        .then((result) => {\r\n          return result.json();\r\n        })\r\n        .then((result) => {\r\n          setWidgets(result);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }, [activeTab]);\r\n\r\n  useEffect(() => {\r\n    if (props.newWidget) {\r\n      setWidgets((widgets as IWidgetConfig[]).concat([props.newWidget]) as []);\r\n    }\r\n  }, [props.newWidget != null && props.newWidget.id]);\r\n\r\n  function reorder(\r\n    list: never[],\r\n    startIndex: number,\r\n    endIndex: number\r\n  ): unknown[] {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n  }\r\n\r\n  function onDragEnd(result: DropResult) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      widgets,\r\n      result.source.index,\r\n      result.destination.index\r\n    ).map((widget: unknown, index: number) => {\r\n      (widget as IWidgetConfig).widgetOrder = index;\r\n      return widget;\r\n    });\r\n    updateWidgetsOrder(items as never[]).then((response) =>\r\n      setWidgets(response.data as [])\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TabPane tabId={props.tabId}>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(providedDroppable: DroppableProvided) => (\r\n            <div\r\n              {...providedDroppable.droppableProps}\r\n              ref={providedDroppable.innerRef}\r\n            >\r\n              <div className=\"widgetList\">\r\n              <FacebookWidget />\r\n                {widgets &&\r\n                  widgets.length > 0 &&\r\n                  widgets.map((widgetConfig: IWidgetConfig, index) => {\r\n                    return (\r\n                      <Draggable\r\n                        key={widgetConfig.id}\r\n                        draggableId={widgetConfig.id.toString()}\r\n                        index={index}\r\n                      >\r\n                        {(providedDraggable) => (\r\n                          <div\r\n                            key={widgetConfig.id}\r\n                            className=\"widget\"\r\n                            ref={providedDraggable.innerRef}\r\n                            {...providedDraggable.draggableProps}\r\n                            {...providedDraggable.dragHandleProps}\r\n                          >\r\n                            {createWidget(widgetConfig)}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    );\r\n                  })}\r\n                {providedDroppable.placeholder}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </TabPane>\r\n  );\r\n}\r\n","import 'font-awesome/fonts/fontawesome-webfont.svg';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  DragDropContext,\r\n  Draggable,\r\n  Droppable,\r\n  DroppableProvided,\r\n  DropResult\r\n} from 'react-beautiful-dnd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Nav,\r\n  TabContent\r\n} from 'reactstrap';\r\nimport './Dash.scss';\r\nimport { ITab } from './model/Tab';\r\nimport NavDash from './navigation/navDash/NavDash';\r\nimport Store from './pages/store/Store';\r\nimport { toggleSelectedTab } from './reducers/actions';\r\nimport { ITabState } from './reducers/tabReducer';\r\nimport { addTab, updateTabs } from './services/TabService';\r\nimport { addWidget } from './services/WidgetService';\r\nimport TabDash from './tab/TabDash';\r\nimport logger from './utils/LogUtils';\r\nimport { IWidgetConfig } from './widgets/IWidgetConfig';\r\n\r\nexport interface IMenu {\r\n  link: string;\r\n  icon: string;\r\n}\r\n\r\nexport default function Dash(): React.ReactElement {\r\n  const [tabs, setTabs] = useState<ITab[]>([]);\r\n  const [newWidget, setNewWidget] = useState<IWidgetConfig>();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\r\n  const dispatch = useDispatch();\r\n\r\n  function initDashboard() {\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/tab/`)\r\n      .then((result) => {\r\n        return result.json();\r\n      })\r\n      .then((result) => {\r\n        if (!result || result.length === 0) {\r\n          addNewTab();\r\n        }\r\n        setTabs(result);\r\n        dispatch(toggleSelectedTab(result[0].id));\r\n      })\r\n      .catch((error: Error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function toggleTab(tab: number) {\r\n    if (activeTab !== tab) {\r\n      dispatch(toggleSelectedTab(tab));\r\n    }\r\n  }\r\n\r\n  function addNewTab() {\r\n    const newTabLabel = 'Nouvel onglet';\r\n    addTab(newTabLabel).then((response) => {\r\n      const insertedTab = response.data as ITab;\r\n      setTabs(tabs.concat(insertedTab));\r\n      dispatch(toggleSelectedTab(insertedTab.id));\r\n    });\r\n  }\r\n\r\n  function getNewWidget(tabId: number) {\r\n    if (newWidget && tabId === newWidget.tab.id) {\r\n      return newWidget;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  function toggleModal() {\r\n    setModal(!modal);\r\n  }\r\n\r\n  function onWidgetAdded(type: React.MouseEvent<HTMLButtonElement>) {\r\n    if (activeTab) {\r\n      addWidget(type.currentTarget.value, activeTab)\r\n        .then((response) => {\r\n          if (response) {\r\n            const widgetData = response.data as IWidgetConfig;\r\n            setNewWidget(widgetData);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  function onTabDeleted(id: number) {\r\n    setTabs(tabs.filter((tab) => tab.id !== id));\r\n    if (activeTab === id) {\r\n      dispatch(toggleSelectedTab(tabs[0].id));\r\n    }\r\n  }\r\n\r\n  function reorder(\r\n    list: unknown[],\r\n    startIndex: number,\r\n    endIndex: number\r\n  ): unknown[] {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n  }\r\n\r\n  function onDragEnd(result: DropResult) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      tabs,\r\n      result.source.index,\r\n      result.destination.index\r\n    ).map((tab, index) => {\r\n      (tab as ITab).tabOrder = index;\r\n      return tab;\r\n    });\r\n    updateTabs(items as ITab[]).then((response) => {\r\n      setTabs(response.data as ITab[]);\r\n    });\r\n  }\r\n\r\n  useEffect(initDashboard, []);\r\n\r\n  return (\r\n    <div className=\"dash\">\r\n      <div className=\"flexRow\">\r\n        <div className=\"dashNavbar\">\r\n          <Nav vertical={true} navbar={true}>\r\n            <Button\r\n              id=\"openAddWidgetModal\"\r\n              className=\"dashNavbarLink\"\r\n              onClick={toggleModal}\r\n            >\r\n              <i className=\"fa fa-plus-circle fa-lg\" aria-hidden=\"true\" />\r\n            </Button>\r\n            <Modal isOpen={modal} toggle={toggleModal}>\r\n              <ModalHeader toggle={toggleModal}>Ajouter un widget</ModalHeader>\r\n              <ModalBody>\r\n                <Store onWidgetAdded={onWidgetAdded} />\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  id=\"closeAddWidgetModal\"\r\n                  color=\"primary\"\r\n                  onClick={toggleModal}\r\n                >\r\n                  Fermer\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Nav>\r\n        </div>\r\n\r\n        <div className=\"flexColumn tabsBar\">\r\n          <Nav tabs={true}>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n                {(providedDroppable: DroppableProvided) => (\r\n                  <div\r\n                    className=\"flexRow\"\r\n                    {...providedDroppable.droppableProps}\r\n                    ref={providedDroppable.innerRef}\r\n                  >\r\n                    {tabs.length > 0 &&\r\n                      tabs.map((tab: ITab, index: number) => {\r\n                        return (\r\n                          <Draggable\r\n                            key={tab.id}\r\n                            draggableId={tab.id.toString()}\r\n                            index={index}\r\n                          >\r\n                            {(providedDraggable) => (\r\n                              <div\r\n                                key={tab.id}\r\n                                ref={providedDraggable.innerRef}\r\n                                {...providedDraggable.draggableProps}\r\n                                {...providedDraggable.dragHandleProps}\r\n                                className={`tab ${\r\n                                  tab.id === activeTab ? 'selectedItem' : ''\r\n                                }`}\r\n                              >\r\n                                <NavDash\r\n                                  tab={tab}\r\n                                  onTabClicked={() => toggleTab(tab.id)}\r\n                                  onTabDeleted={onTabDeleted}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                    {providedDroppable.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            <Button onClick={addNewTab} id=\"addNewTabButton\" className=\"fa fa-plus-circle fa-lg\" />\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            {tabs.length > 0 &&\r\n              tabs.map((tab: ITab) => {\r\n                return (\r\n                  <TabDash\r\n                    key={tab.id}\r\n                    newWidget={getNewWidget(tab.id)}\r\n                    tabId={tab.id}\r\n                  />\r\n                );\r\n              })}\r\n          </TabContent>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { TOGGLE_TAB } from './actionTypes';\r\n\r\nexport interface ITabState {\r\n  activeTab: number;\r\n}\r\n\r\nconst initialState: ITabState = {\r\n  activeTab: -1\r\n};\r\n\r\nexport default function (\r\n  state = initialState,\r\n  action: { type: string; payload: { id: number } }\r\n): ITabState {\r\n  switch (action.type) {\r\n    case TOGGLE_TAB: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state,\r\n        activeTab: id\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './tabReducer';\r\n\r\nexport default createStore(rootReducer);\r\n","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Dash from './Dash';\r\nimport './index.scss';\r\nimport store from './reducers/store';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Dash />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}