{"version":3,"sources":["services/TabService.ts","navigation/navDash/NavDash.tsx","enums/WidgetsEnum.ts","pages/store/Store.tsx","reducers/actionTypes.ts","reducers/actions.ts","services/WidgetService.ts","tab_facebook/TabNavigation.tsx","utils/LogUtils.ts","widgets/facebook/FacebookWidget.tsx","enums/ModeEnum.ts","widgets/facebook/groups/GroupsTab.tsx","widgets/facebook/FacebookAPI.ts","widgets/facebook/events/EventsTab.tsx","components/detailComponent/ComponentWithDetail.tsx","widgets/utils/DeleteWidget.tsx","widgets/Widget.tsx","widgets/utils/circular-progress/CircularProgressBar.tsx","widgets/steam/details/GameDetails.tsx","widgets/steam/SteamWidget.tsx","widgets/calendar/emptyWidget/EmptyCalendarWidget.tsx","widgets/calendar/CalendarWidget.tsx","utils/DateUtils.ts","widgets/rss/article/RSSArticle.tsx","widgets/rss/emptyWidget/EmptyRSSWidget.tsx","widgets/rss/RSSWidget.tsx","hooks/localStorageHook.ts","widgets/strava/activity/StravaActivity.tsx","widgets/strava/StravaWidget.tsx","widgets/weather/emptyWidget/EmptyWeatherWidget.tsx","widgets/weather/WeatherWidget.tsx","widgets/weather/forecast/Forecast.tsx","tab/TabDash.tsx","Dash.tsx","reducers/tabReducer.ts","reducers/store.ts","registerServiceWorker.ts","index.tsx"],"names":["headers","NavDash","props","useState","tab","label","setLabel","isToggled","toggle","NavItem","className","NavLink","onClick","onTabClicked","onDoubleClick","id","tabOrder","axios","post","process","updateTab","then","onChange","event","target","value","Button","delete","onTabDeleted","WidgetTypes","Store","Object","keys","map","key","isNaN","parseInt","Card","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","onWidgetAdded","TOGGLE_TAB","toggleSelectedTab","type","payload","updateWidgetData","data","TabNavigation","tabList","to","path","title","exact","component","logger","winston","format","combine","json","colorize","all","level","transports","Console","ModeEnum","tabs","useEffect","Promise","resolve","reject","debug","FB","api","fields","groupsData","Error","result","catch","error","FacebookWidget","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","response","setState","loginStatusResponse","status","login","scope","facebookLogout","logout","userData","undefined","window","fbAsyncInit","init","appId","xfbml","version","fbInitEvent","Event","document","dispatchEvent","d","s","js","getElementsByTagName","fjs","getElementById","createElement","parentNode","insertBefore","addEventListener","removeEventListener","this","element","state","first_name","last_name","data-max-rows","data-size","data-button-type","data-use-continue-as","React","ComponentWithDetail","openCollapse","setOpenCollapse","componentRoot","Collapse","isOpen","componentDetail","DeleteWidget","onCancelButtonClicked","onDeleteButtonClicked","idWidget","Widget","READ","mode","setMode","config","header","editModeComponent","EDIT","aria-hidden","refreshFunction","DELETE","body","percentageToDegrees","percentage","toString","CircularProgressBar","style","transform","Math","round","GameDetails","achievements","setAchievements","completedAchievements","setCompletedAchievements","GET_ACHIVEMENTS_URL","appid","get","params","url","playerstats","filter","achievement","achieved","name","href","img_logo_url","length","SteamWidget","playerData","setPlayerData","ownedGames","setOwnedGames","STEAM_API_URL","GET_PLAYER_SUMMARIES_URL","GET_OWNED_GAMES_URL","refreshWidget","players","message","games","sort","gameA","gameB","localeCompare","widgetHeader","profileurl","avatar","personaname","widgetBody","game","img_icon_url","link","tabId","EmptyCalendarWidget","calendarUrls","setCalendarUrls","onCalendarUrlUpdated","index","placeholder","calendarUrl","concat","onConfigSubmitted","disabled","CalendarWidget","calendars","schedules","setSchedules","locales","fr","localizer","dateFnsLocalizer","parse","startOfWeek","getDay","ical","eventKey","summary","start","end","allDay","getHours","culture","events","startAccessor","endAccessor","defaultView","popup","height","updatedCalendars","formatDateFromTimestamp","timestamp","offset","Date","adjustTimeWithOffset","localeOffset","getTimezoneOffset","abs","offsetMilliseconds","stripHtmlFromContent","content","div","innerHTML","textContent","innerText","RSSArticle","description","date","pubDate","toLocaleString","author","EmptyRSSWidget","setUrl","onUrlSubmitted","RSSWidget","feed","setFeed","setDecription","image","setImage","setLink","setTitle","rssParser","RSSParser","fetchDataFromRssFeed","parseURL","apiResult","items","formatTitleForArticle","articleTitle","toLocaleTimeString","hour","minute","article","guid","rssUrl","useLocalStorage","initialValue","item","localStorage","getItem","JSON","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","StravaActivity","start_date_local","distance","moving_time","total_elevation_gain","achievement_count","average_speed","max_speed","kudos_count","comment_count","StravaWidget","activities","setActivities","athlete","setAthlete","token","setToken","refreshToken","setRefreshToken","tokenExpirationDate","setTokenExpirationDate","search","useLocation","Authorization","isAfter","reverse","refreshTokenFromApi","client_id","client_secret","refresh_token","grant_type","access_token","expires_at","getActivitiesByMonth","reduce","activitiesByMonth","activity","month","push","getStatsFromActivities","activitiesByMonthList","x","y","total","values","queryString","code","apiCode","getToken","isBefore","profile_medium","firstname","lastname","overflowY","slice","minHeight","maxHeight","flex","labels","datasets","backgroundColor","yAxisID","order","options","scales","position","EmptyWeatherWidget","city","setCity","ForecastMode","Forecast","dt","timezone","weekday","day","weather","icon","color","main","temp_max","temp_min","humidity","WeatherWidget","WEATHER_API","API_OPTIONS","cityToQuery","setCityToQuery","setWeather","forecast","setForecast","TODAY","forecastMode","setForecastMode","fetchDataFromWeatherApi","list","filterForecastByMode","WEEK","forecastDay","TOMORROW","placeItems","temp","sys","sunrise","sunset","alignContent","display","maxWidth","borderColor","feels_like","maintainAspectRatio","updatedCity","TabDash","widgets","setWidgets","activeTab","useSelector","createWidget","widgetConfig","WEATHER","deleteWidgetFromDashboard","RSS","CALENDAR","STRAVA","STEAM","deleteWidget","widget","fetch","newWidget","TabPane","Dash","setTabs","setNewWidget","modal","setModal","dispatch","useDispatch","addNewTab","insertedTab","toggleModal","Nav","vertical","navbar","Modal","ModalHeader","ModalBody","addWidget","currentTarget","widgetData","ModalFooter","onDragEnd","destination","updateTabs","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","direction","providedDroppable","droppableProps","ref","innerRef","draggableId","providedDraggable","draggableProps","dragHandleProps","toggleTab","TabContent","initialState","createStore","action","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","store","URL","origin","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3cc09b76.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { ITab } from '../model/Tab';\n\nconst headers = {\n  'Content-type': 'application/json'\n};\n\nexport function addTab(label: string): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/addTab`,\n    { label: label },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateTab(\n  id: number,\n  label: string,\n  tabOrder: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTab`,\n    { id: id, label: label, tabOrder: tabOrder },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateTabs(tabs: ITab[]): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTabs`,\n    tabs,\n    {\n      headers\n    }\n  );\n}\n\nexport function deleteTab(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/deleteTab/?id=${id}`,\n    {\n      headers\n    }\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Button, NavItem, NavLink } from 'reactstrap';\nimport { ITab } from '../../model/Tab';\nimport { deleteTab, updateTab } from '../../services/TabService';\ninterface IProps {\n  tab: ITab;\n  onTabClicked: () => void;\n  onTabDeleted: (id: number) => void;\n}\n\nexport default function NavDash(props: IProps): React.ReactElement {\n  const [label, setLabel] = useState(props.tab.label);\n  const [isToggled, toggle] = useState(false);\n\n  function deleteTabFromDash() {\n    deleteTab(props.tab.id).then(() => props.onTabDeleted(props.tab.id));\n  }\n\n  function saveTabName() {\n    updateTab(props.tab.id, label, props.tab.tabOrder).then(() => {\n      toggle(!isToggled);\n    });\n  }\n\n  function clickToggle() {\n    toggle(!isToggled);\n  }\n\n  return (\n    <NavItem className=\"clickableItem\" key={props.tab.id}>\n      <NavLink onClick={props.onTabClicked}>\n        {isToggled ? (\n          <div className=\"flexRow\">\n            <input\n              onDoubleClick={saveTabName}\n              onChange={(event) => setLabel(event.target.value)}\n              value={label}\n            />\n            <Button className=\"deleteTabButton\" onClick={deleteTabFromDash}>\n              <i className=\"fa fa-trash\" />\n            </Button>\n          </div>\n        ) : (\n          <span onDoubleClick={clickToggle}>{label}</span>\n        )}\n      </NavLink>\n    </NavItem>\n  );\n}\n","export enum WidgetTypes {\n  WEATHER = 1,\n  RSS = 2,\n  CALENDAR = 3,\n  STRAVA = 4,\n  STEAM = 5\n}\n","import * as React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle\n} from 'reactstrap';\nimport { WidgetTypes } from '../../enums/WidgetsEnum';\n\ninterface IProps {\n  onWidgetAdded: (type: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Store: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <div className=\"flexRow\">\n      {Object.keys(WidgetTypes).map((key) => {\n        return (\n          isNaN(parseInt(key, 0)) && (\n            <Card key={key}>\n              <CardImg\n                top={true}\n                width=\"100%\"\n                src=\"/assets/318x180.svg\"\n                alt=\"Card image cap\"\n              />\n              <CardBody>\n                <CardTitle>{key}</CardTitle>\n                <CardSubtitle>Widget {key}</CardSubtitle>\n                <CardText>\n                  Cliquez ci-dessous pour ajouter un widget {key} au dashboard.\n                </CardText>\n                <Button\n                  id={key}\n                  onClick={props.onWidgetAdded}\n                  className=\"btn btn-success\"\n                  value={WidgetTypes[key]}\n                >\n                  Ajouter\n                </Button>\n              </CardBody>\n            </Card>\n          )\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Store;\n","export const TOGGLE_TAB = 'TOGGLE_TAB';\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport const toggleSelectedTab = (\n  id: number\n): { type: string; payload: { id: number } } => ({\n  type: TOGGLE_TAB,\n  payload: {\n    id\n  }\n});\n","import axios, { AxiosResponse } from 'axios';\nconst headers = {\n  'Content-type': 'application/json'\n};\n\nexport function addWidget(\n  type: string,\n  tabId: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/addWidget`,\n    { type: type, tab: { id: tabId } },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateWidgetData(\n  id: number,\n  data: unknown\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetData`,\n    { id: id, data: data },\n    {\n      headers\n    }\n  );\n}\n\nexport function deleteWidget(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/deleteWidget/?id=${id}`,\n    {\n      headers\n    }\n  );\n}\n","import * as React from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport ITab from './ITab';\nimport './TabNavigation.scss';\n\ninterface IProps {\n  tabList: ITab[];\n}\n\nconst TabNavigation: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <div>\n      <Router>\n        <div>\n          <div className=\"tabContainer\">\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Link to={tab.path}>{tab.title}</Link>\n                </div>\n              );\n            })}\n          </div>\n          <div>\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Route\n                    path={tab.path}\n                    exact={tab.exact}\n                    component={tab.component}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default TabNavigation;\n","import * as winston from 'winston';\n\nconst logger = winston.createLogger({\n  format: winston.format.combine(\n    winston.format.json(),\n    winston.format.colorize({ all: true })\n  ),\n  level: 'debug',\n  transports: [new winston.transports.Console()]\n});\n\nexport default logger;\n","import * as React from 'react';\nimport ITab from '../../tab_facebook/ITab';\nimport TabNavigation from '../../tab_facebook/TabNavigation';\nimport logger from '../../utils/LogUtils';\nimport EventsTab from './events/EventsTab';\nimport { getProfileInfo } from './FacebookAPI';\nimport GroupsTab from './groups/GroupsTab';\nimport IFBUser from './IFBUser';\n\ndeclare const window: any;\ndeclare const FB: any;\n\ninterface IProps {\n  appId?: string;\n}\n\ninterface IState {\n  loginStatusResponse: any;\n  userData?: IFBUser;\n}\n\nconst tabs: ITab[] = [\n  {\n    title: 'Groupes',\n    component: GroupsTab,\n    path: '/groups/'\n  },\n  {\n    title: 'Events',\n    component: EventsTab,\n    path: '/events/'\n  }\n];\n\nexport default class FacebookWidget extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    window.fbAsyncInit = () => {\n      FB.init({\n        appId: props.appId,\n        xfbml: true,\n        version: 'v3.2'\n      });\n\n      // Broadcast an event when FB object is ready\n      const fbInitEvent = new Event('FBObjectReady');\n      document.dispatchEvent(fbInitEvent);\n    };\n    ((d, s, id) => {\n      let js: any = d.getElementsByTagName(s)[0];\n      const fjs: Element = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\n      if (fjs && fjs.parentNode) {\n        fjs.parentNode.insertBefore(js, fjs);\n      }\n    })(document, 'script', 'facebook-jssdk');\n    document.addEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public componentWillUnmount(): void {\n    document.removeEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public checkLoginStatus = (): void => {\n    FB.getLoginStatus(this.facebookLoginHandler);\n  };\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  public facebookLogin = (): void => {\n    logger.debug('facebookLogin');\n    FB.getLoginStatus((response: any) => {\n      logger.debug(response);\n      this.setState({ loginStatusResponse: response });\n      if (response.status !== 'connected') {\n        FB.login(this.facebookLoginHandler, {\n          scope:\n            'user_birthday,user_hometown,user_likes,user_photos,user_friends,user_status,user_tagged_places,user_posts,user_gender,user_link,email,public_profile'\n        });\n      }\n    });\n  };\n\n  public facebookLogout = (): void => {\n    FB.logout((response: any) => {\n      logger.debug(response);\n      this.setState({ userData: undefined, loginStatusResponse: response });\n    });\n  };\n\n  public facebookLoginHandler = (response: any): void => {\n    logger.debug('facebookLoginHandler');\n    this.setState({ loginStatusResponse: response });\n    if (response.status === 'connected') {\n      logger.debug('Connected');\n      getProfileInfo()\n        .then((result: IFBUser) => {\n          logger.debug('Result');\n          logger.debug(result);\n          this.setState({ userData: result });\n        })\n        .catch((error: Error) => {\n          logger.debug(error);\n        });\n    }\n  };\n\n  public render(): React.ReactElement {\n    let element = null;\n    if (\n      this.state &&\n      this.state.loginStatusResponse &&\n      this.state.loginStatusResponse.status === 'connected' &&\n      this.state.userData\n    ) {\n      const userData: IFBUser = this.state.userData;\n      element = (\n        <div>\n          <div>\n            {userData.first_name} {userData.last_name}\n          </div>\n          <div onClick={this.facebookLogout}>Se déconnecter</div>\n        </div>\n      );\n    } else {\n      element = (\n        <div\n          onClick={this.facebookLogin}\n          className=\"fb-login-button\"\n          data-max-rows=\"1\"\n          data-size=\"large\"\n          data-button-type=\"continue_with\"\n          data-use-continue-as=\"true\"\n        />\n      );\n    }\n    return (\n      <div>\n        {element}\n        {this.state && this.state.userData && (\n          <div>\n            <TabNavigation tabList={tabs} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","export enum ModeEnum {\n  READ = 1,\n  EDIT = 2,\n  DELETE = 3\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\nimport { getGroupsData } from '../FacebookAPI';\nimport IGroup from './IGroup';\n\nexport default function GroupsTab(): React.ReactElement {\n  useEffect(() => {\n    getGroupsData()\n      .then((result: unknown) => {\n        logger.debug(result as IGroup[]);\n      })\n      .catch((error: Error) => {\n        logger.debug(error);\n      });\n  }, []);\n\n  return <div>Liste des groupes auxquels vous appartenez</div>;\n}\n","import logger from '../../utils/LogUtils';\nimport IFBUser from './IFBUser';\n\ninterface IFB {\n  api: (url: string, data: unknown, response: (data:unknown) => unknown) => Promise<unknown>;\n}\n\ndeclare const FB: IFB;\n\nexport function getProfileInfo(): Promise<IFBUser> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getProfile');\n    FB.api(\n      '/me',\n      {\n        fields: 'id,first_name,last_name,hometown,location,birthday,gender,link'\n      },\n      (userData: unknown) => {\n        if (userData) {\n          resolve(userData as IFBUser);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n\nexport function getGroupsData(): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getGroupsData');\n    FB.api(\n      '/me/groups',\n      {\n        fields:\n          'administrator,bookmark_order,id,unread,cover,created_time,description,icon,email,link,name,purpose,venue,picture'\n      },\n      (groupsData) => {\n        if (groupsData) {\n          resolve(groupsData);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\n\nexport default function EventsTab(): React.ReactElement {\n  useEffect(() => {\n    logger.debug('onComponentDidMount');\n  });\n\n  return <div>Liste des prochains évènements</div>;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Card, CardBody, Collapse } from 'reactstrap';\nimport './ComponentWithDetail.scss';\n\ninterface IProps {\n  componentRoot: React.ReactNode | string;\n  componentDetail: React.ReactNode | string;\n  link?: string;\n}\n\nexport default function ComponentWithDetail(props: IProps): React.ReactElement {\n  const [openCollapse, setOpenCollapse] = useState(false);\n  const toggleCollapse = () => {\n    setOpenCollapse(!openCollapse);\n  };\n\n  return (\n    <div>\n      <div onClick={toggleCollapse} className=\"title\">\n        {props.componentRoot}\n      </div>\n      <div>\n        <Collapse isOpen={openCollapse}>\n          <Card>\n            <CardBody>{openCollapse && props.componentDetail &&\n              props.componentDetail\n            }\n            </CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\n\ninterface IProps {\n  idWidget: number;\n  onCancelButtonClicked: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function DeleteWidget(props: IProps): React.ReactElement {\n  const confirmDeleteWidget = () => {\n    props.onDeleteButtonClicked(props.idWidget);\n  };\n\n  return (\n    <div>\n      <h4>Êtes-vous sûr de vouloir supprimer ce widget ?</h4>\n      <button\n        onClick={props.onCancelButtonClicked}\n        className=\"btn btn-primary cancelButton\"\n      >\n        Annuler\n      </button>\n      <button\n        onClick={confirmDeleteWidget}\n        className=\"btn btn-danger validateDeletionButton\"\n      >\n        Supprimer\n      </button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ModeEnum } from '../enums/ModeEnum';\nimport DeleteWidget from './utils/DeleteWidget';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  config: Record<string, unknown>;\n  header: React.ReactElement;\n  body: React.ReactElement;\n  editModeComponent?: React.ReactElement<IProps>;\n  refreshFunction: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function Widget(props: IProps): React.ReactElement {\n  const [mode, setMode] = useState(ModeEnum.READ);\n\n  useEffect(() => {\n    setMode(ModeEnum.READ);\n  }, [props.config]);\n\n  function editWidget() {\n    if (props.editModeComponent) {\n      setMode(ModeEnum.EDIT);\n    }\n  }\n\n  function cancelDeletion() {\n    setMode(ModeEnum.READ);\n  }\n\n  function deleteWidget() {\n    setMode(ModeEnum.DELETE);\n  }\n\n  return (\n    <div>\n      {mode === ModeEnum.READ ? (\n        <div>\n          <div className=\"header\">\n            <div className=\"leftGroup widgetHeader\">{props.header}</div>\n            <div className=\"rightGroup\">\n              {props.editModeComponent &&\n                <button\n                  onClick={editWidget}\n                  className=\"btn btn-default editButton\"\n                >\n                  <i className=\"fa fa-cog\" aria-hidden=\"true\" />\n                </button>\n              }\n              <button\n                onClick={props.refreshFunction}\n                className=\"btn btn-default refreshButton\"\n              >\n                <i className=\"fa fa-refresh\" aria-hidden=\"true\" />\n              </button>\n              <button\n                onClick={deleteWidget}\n                className=\"btn btn-default deleteButton\"\n              >\n                <i className=\"fa fa-trash\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n          {props.body}\n        </div>\n      ) : mode === ModeEnum.DELETE ? (\n        <DeleteWidget\n          idWidget={props.id}\n          onDeleteButtonClicked={props.onDeleteButtonClicked}\n          onCancelButtonClicked={cancelDeletion}\n        />\n      ) : (props.editModeComponent) ? props.editModeComponent : () => setMode(ModeEnum.READ)}\n    </div>\n  );\n}\n","import \"./CircularProgressBar.scss\"\n\nfunction percentageToDegrees(percentage: number): string {\n    return (percentage / 100 * 360).toString()\n}\n\ninterface IProps {\n    value: number;\n}\n\nconst CircularProgressBar: React.FunctionComponent<IProps> = (props) => {\n\n    return (\n        <div className=\"progress mx-auto\">\n            <span className=\"progressLeft\">\n                <span style={{ transform: (props.value > 50) ? `rotate(${percentageToDegrees((props.value) - 50)}deg)` : 'unset' }} className=\"progressBar border-primary\"></span>\n            </span>\n            <span className=\"progressRight\">\n                <span style={{ transform: (props.value > 50) ? `rotate(180deg)` : `rotate(${percentageToDegrees(props.value)}deg)` }} className=\"progressBar border-primary\"></span>\n            </span>\n            <div className=\"progressValue w-100 h-100 rounded-circle d-flex align-items-center justify-content-center\">\n                <div className=\"h2 font-weight-bold\">{Math.round(props.value)}%</div>\n            </div>\n        </div>\n    )\n}\n\nexport default CircularProgressBar;","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport CircularProgressBar from \"src/widgets/utils/circular-progress/CircularProgressBar\";\nimport { IGameInfo } from \"../IGameInfo\";\n\ninterface IAchievement {\n    apiname: string;\n    achieved: number;\n    unlocktime: number;\n}\n\nexport default function GameDetails(props: IGameInfo): React.ReactElement {\n    const [achievements, setAchievements] = useState([]);\n    const [completedAchievements, setCompletedAchievements] = useState([]);\n    const STEAM_API_URL = \"https://api.steampowered.com\";\n    const STEAM_IMAGE_URL = \"https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/apps/\";\n    const STEAM_COMMUNITY_URL = \"https://steamcommunity.com/app/\";\n    const GET_ACHIVEMENTS_URL = `${STEAM_API_URL}/ISteamUserStats/GetPlayerAchievements/v0001/?appid=${props.appid}&key=${process.env.REACT_APP_STEAM_API_KEY}&steamid=${process.env.REACT_APP_STEAM_USER_ID}`\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n            params: {\n                url: GET_ACHIVEMENTS_URL\n            }\n        })\n            .then(response => {\n                if (response.data.playerstats.achievements) {\n                    setAchievements(response.data.playerstats.achievements);\n                    setCompletedAchievements(response.data.playerstats.achievements.filter((achievement: IAchievement) => achievement.achieved === 1));\n                }\n\n            })\n    }, [props])\n\n    return (\n        <div>\n            <div className=\"flexRow\">\n                <div>{props.name}</div>\n                <a href={`${STEAM_COMMUNITY_URL}${props.appid}`}>\n                    <img src={\n                        `${STEAM_IMAGE_URL}${props.appid}/${props.img_logo_url}.jpg                  `\n                    } />\n                </a>\n            </div>\n            {\n                achievements && completedAchievements && achievements.length > 0 &&\n                <div className=\"flexRow\">\n                    <div className=\"flexColumn\">\n                        <div className=\"totalachievements\">Succès : {achievements.length}</div>\n                        <div className=\"completedAchievements\">Succès complétés : {completedAchievements.length}</div>\n                    </div>\n                    <CircularProgressBar value={completedAchievements.length / achievements.length * 100} />\n                </div>\n            }\n        </div>\n    );\n};","import axios from 'axios';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport ComponentWithDetail from 'src/components/detailComponent/ComponentWithDetail';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport GameDetails from './details/GameDetails';\nimport { IGameInfo } from './IGameInfo';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\ninterface IPlayerData {\n  personaname: string;\n  profileurl: string;\n  avatar: string;\n}\n\nexport default function SteamWidget(props: IProps): React.ReactElement {\n  const [playerData, setPlayerData] = useState<IPlayerData>();\n  const [ownedGames, setOwnedGames] = useState<IGameInfo[]>();\n\n  const STEAM_API_URL = \"https://api.steampowered.com\";\n  const GET_PLAYER_SUMMARIES_URL = `/ISteamUser/GetPlayerSummaries/v0002/?key=${process.env.REACT_APP_STEAM_API_KEY}&steamids=${process.env.REACT_APP_STEAM_USER_ID}`\n  const GET_OWNED_GAMES_URL = `/IPlayerService/GetOwnedGames/v0001/?key=${process.env.REACT_APP_STEAM_API_KEY}&steamid=${process.env.REACT_APP_STEAM_USER_ID}&format=json&include_appinfo=true`\n  const STEAM_IMAGE_URL = \"https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/apps/\";\n  const STEAM_COMMUNITY_URL = \"https://steamcommunity.com/app/\";\n\n  useEffect(() => {\n    refreshWidget();\n  }, []);\n\n  function refreshWidget() {\n    getPlayerData();\n    getOwnedGames();\n  }\n\n  function getPlayerData(): void {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n        params: {\n          url: `${STEAM_API_URL}${GET_PLAYER_SUMMARIES_URL}`\n        }\n      })\n      .then((response) => {\n        setPlayerData(response.data.response.players[0]);\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function getOwnedGames(): void {\n    axios.get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n      params: {\n        url: `${STEAM_API_URL}${GET_OWNED_GAMES_URL}`\n      }\n    })\n      .then((response) => {\n        setOwnedGames((response.data.response.games as IGameInfo[]).sort((gameA, gameB) => gameA.name.localeCompare(gameB.name)));\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  const widgetHeader = (\n    <div>\n      <a href={playerData?.profileurl}>\n        <img src={playerData?.avatar} />\n        {playerData?.personaname}\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div className=\"flexColumn\">\n      {ownedGames && ownedGames.map((game: IGameInfo) => {\n        return (\n          <ComponentWithDetail\n            key={game.appid}\n            componentRoot=\n            {\n              <div className=\"gameInfo flexRow\">\n                <div>\n                  <img src={\n                    `${STEAM_IMAGE_URL}${game.appid}/${game.img_icon_url}.jpg                  `\n                  } />\n                </div>\n                <div>{game.name}</div>\n              </div>\n            }\n            componentDetail={<GameDetails {...game} />}\n            link={`${STEAM_COMMUNITY_URL}${game.appid}`}\n          />\n        );\n      })}\n\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{}}\n        header={widgetHeader}\n        body={widgetBody}\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyCalendarWidget.scss';\n\ninterface IProps {\n  calendarUrls?: string[];\n  onConfigSubmitted: (calendarUrls: string[]) => void;\n}\n\nexport default function EmptyCalendarWidget(props: IProps): React.ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState<string[]>(\n    props.calendarUrls || []\n  );\n  const onValidation = () => {\n    props.onConfigSubmitted(calendarUrls);\n  };\n\n  const onCalendarUrlUpdated = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCalendarUrls(\n      calendarUrls.map((url: string, index: number) =>\n        index.toString() === event.target?.id ? event.target.value : url\n      )\n    );\n  };\n\n  const onCalendarUrlAdded = () => {\n    setCalendarUrls(calendarUrls.concat(''));\n  };\n\n  function removeCalendarUrl(calendarUrl: string) {\n    setCalendarUrls(calendarUrls.filter(url => url !== calendarUrl));\n  }\n\n  return (\n    <div>\n      <div>\n        {calendarUrls &&\n          calendarUrls.map((url, index) => {\n            return (\n              <div key={index}>\n                <input\n                  id={index.toString()}\n                  onChange={onCalendarUrlUpdated}\n                  value={url}\n                  placeholder=\"Saisissez une URL\"\n                />\n                <button className=\"removeCalendarUrl btn btn-danger\" onClick={() => removeCalendarUrl(url)}>Supprimer</button>\n              </div>\n            );\n          })}\n        <button id=\"addCalendarUrl\" className=\"btn btn-primary\" onClick={onCalendarUrlAdded}>\n          Ajouter\n        </button>\n      </div>\n      <button\n        id=\"validateCalendarUrls\"\n        onClick={onValidation}\n        disabled={!calendarUrls || calendarUrls?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as ical from 'ical';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport './CalendarWidget.scss';\nimport EmptyCalendarWidget from './emptyWidget/EmptyCalendarWidget';\nimport format from 'date-fns/format'\nimport parse from 'date-fns/parse'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport { fr } from \"date-fns/locale\";\n\nimport { Calendar, dateFnsLocalizer, Event } from 'react-big-calendar';\n\nexport interface IProps {\n  id: number;\n  calendars?: string[];\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function CalendarWidget(props: IProps): React.ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState(props.calendars);\n  const [schedules, setSchedules] = useState<Event[]>([]);\n\n  const locales = {\n    'fr': fr,\n  }\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n  })\n\n  useEffect(() => {\n    refreshWidget();\n  }, [calendarUrls]);\n\n  function onConfigSubmitted(updatedCalendars: string[]) {\n    updateWidgetData(props.id, { calendars: updatedCalendars })\n      .then(() => {\n        // Reset des URL pour pouvoir re-trigger le mode READ du widget via le changement de config.\n        setCalendarUrls([]);\n        setCalendarUrls(updatedCalendars);\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshWidget() {\n    setSchedules([]);\n    calendarUrls?.map((calendarUrl: string) => {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${calendarUrl}`)\n        .then((response) => {\n          const data = ical.parseICS(response.data);\n          setSchedules(schedules =>\n            schedules.concat(...Object.keys(data).map((eventKey) => {\n              const event = data[eventKey];\n              const newSchedule: Event = {\n                title: event.summary,\n                start: event.start,\n                end: event.end,\n                allDay: event.end?.getHours() === 0 && event.start?.getHours() === 0\n              };\n              return newSchedule;\n            }))\n          );\n        })\n        .catch((error) => {\n          logger.error(error);\n        });\n    });\n  }\n\n  const widgetHeader = <div>Calendar</div>;\n\n  const widgetBody = (\n    <div>\n      <Calendar\n        localizer={localizer}\n        culture={\"fr\"}\n        events={schedules}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        defaultView=\"month\"\n        popup={true}\n        style={{ height: 500 }}\n      />\n\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ calendars: calendarUrls }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyCalendarWidget\n            calendarUrls={calendarUrls}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","export function formatDateFromTimestamp(timestamp: number, offset = 0): Date {\n  return new Date(timestamp * 1000 + offset * 1000);\n}\n\nexport function formatDateFromUTC(date: string): string {\n  const parsedDate = new Date(date);\n  return parsedDate.toLocaleString('fr');\n}\n\nexport function adjustTimeWithOffset(offset: number): number {\n  const localeOffset = -(new Date().getTimezoneOffset() * 60);\n  if (Math.abs(offset) === Math.abs(localeOffset)) {\n    return 0;\n  }\n  const offsetMilliseconds = Math.abs(offset) + Math.abs(localeOffset);\n  return offset < localeOffset ? -offsetMilliseconds : offsetMilliseconds;\n}\n","import * as React from 'react';\nimport { formatDateFromUTC } from '../../../utils/DateUtils';\nimport { IArticle } from './IArticle';\nimport './RSSArticle.scss';\n\nfunction stripHtmlFromContent(content?: string) {\n  const div = document.createElement('div');\n  div.innerHTML = content || '';\n  return div.textContent || div.innerText || '';\n}\n\nconst RSSArticle: React.FunctionComponent<IArticle> = (props) => {\n  return (\n    <div className=\"article\">\n      <div className=\"articleTitle\">\n        <a href={props.link}>{props.title}</a>\n      </div>\n      <div className=\"articleContent\">\n        {stripHtmlFromContent(props.content) ||\n          stripHtmlFromContent(props.description)}\n      </div>\n      <div className=\"articlePubDate\">\n        Publié le {formatDateFromUTC(props.pubDate || '')}{' '}\n        {props.author && 'par ' + props.author}\n      </div>\n    </div>\n  );\n};\n\nexport default RSSArticle;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyRSSWidget.scss';\n\ninterface IProps {\n  url?: string;\n  onUrlSubmitted: (url: string) => void;\n}\n\nexport default function EmptyRSSWidget(props: IProps): React.ReactElement {\n  const [url, setUrl] = useState(props.url);\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setUrl(event.target.value);\n  const onValidation = () => {\n    if (url) {\n      props.onUrlSubmitted(url);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        id=\"rssFeedUrl\"\n        name=\"url\"\n        onChange={onChangeHandler}\n        value={url}\n        placeholder=\"Saisissez l'URL du flux RSS\"\n      />\n      <button\n        onClick={onValidation}\n        disabled={!url || url?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport RSSParser from 'rss-parser';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport { IArticle, ImageContent, IRSSHeader } from './article/IArticle';\nimport RSSArticle from './article/RSSArticle';\nimport EmptyRSSWidget from './emptyWidget/EmptyRSSWidget';\nimport './RSSWidget.scss';\n\ninterface IProps {\n  id: number;\n  url?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function RSSWidget(props: IProps): React.ReactElement {\n  const [feed, setFeed] = useState<IArticle[]>([]);\n  const [url, setUrl] = useState(props.url);\n  const [description, setDecription] = useState('');\n  const [image, setImage] = useState<ImageContent>();\n  const [link, setLink] = useState('');\n  const [title, setTitle] = useState('');\n  const rssParser = new RSSParser();\n\n  function fetchDataFromRssFeed() {\n    if (url) {\n      rssParser\n        .parseURL(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${url}`)\n        .then((apiResult: unknown) => {\n          const result = apiResult as IRSSHeader;\n          setDecription(result.description);\n          setFeed(result.items);\n          setImage(result.image);\n          setLink(result.link);\n          setTitle(result.title);\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromRssFeed();\n  }, [url]);\n\n  function refreshWidget() {\n    setFeed([]);\n    fetchDataFromRssFeed();\n  }\n\n  function onUrlSubmitted(rssUrl: string) {\n    updateWidgetData(props.id, { url: rssUrl })\n      .then(() => {\n        setUrl(rssUrl);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function formatTitleForArticle(pubDate: string, articleTitle?: string) {\n    const date = pubDate\n      ? new Date(pubDate).toLocaleTimeString('fr', {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n      : '';\n    return <div className=\"rssArticle\">{date} {articleTitle}</div>;\n  }\n\n  function getFeedFromRSS(data: IArticle[]) {\n    return data.map((article) => {\n      return (\n        <ComponentWithDetail\n          key={article.guid}\n          componentRoot={formatTitleForArticle(article.pubDate, article.title)}\n          componentDetail={<RSSArticle {...article} />}\n          link={article.link}\n        />\n      );\n    });\n  }\n\n  const widgetHeader = (\n    <div className=\"rssWidgetTitle\">\n      <a href={link} className=\"flexRow\">\n        {image && (\n          <div>\n            <img className=\"imgLogoRSS\" src={image?.url} alt=\"logo\" />\n          </div>\n        )}\n        <div className=\"rssTitle\">{title}</div>\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div>\n      {url && feed && (\n        <div>\n          <div className=\"rssDescription\">{description}</div>\n          <div className=\"feed\">{getFeedFromRSS(feed)}</div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ url: url }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyRSSWidget url={url} onUrlSubmitted={onUrlSubmitted} />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport logger from '../utils/LogUtils';\n\nexport function useLocalStorage(\n  key: string,\n  initialValue: unknown\n): [unknown, (value: unknown) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      logger.error(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: unknown) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      logger.error(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { IActivity } from '../IStrava';\n\nexport default function StravaActivity(props: IActivity): React.ReactElement {\n  return (\n    <div>\n      <div>\n        <a href={`https://www.strava.com/activities/${props.id}`}>\n          {format(new Date(props.start_date_local), 'dd MMM')}{' '}\n          {props.name}\n        </a>\n      </div>\n      <div>Distance : {Math.round(props.distance * 1000) / 1000000} kms</div>\n      <div>Durée : {props.moving_time / 60} mins</div>\n      <div>Denivelé : {props.total_elevation_gain}</div>\n      <div>Trophées : {props.achievement_count}</div>\n      <div>Vitesse moyenne : {props.average_speed}</div>\n      <div>Vitesse max : {props.max_speed}</div>\n      <div>Kudos : {props.kudos_count}</div>\n      <div>Commentaires : {props.comment_count}</div>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as queryString from 'query-string';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { useLocalStorage } from '../../hooks/localStorageHook';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport StravaActivity from './activity/StravaActivity';\nimport { IActivity, IAthlete } from './IStrava';\nimport { format, isAfter, isBefore } from 'date-fns';\nimport ChartComponent from 'react-chartjs-2';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function StravaWidget(props: IProps): React.ReactElement {\n  const [activities, setActivities] = useState([]);\n  const [athlete, setAthlete] = useState<IAthlete>();\n  const [token, setToken] = useLocalStorage('strava_token', null);\n  const [refreshToken, setRefreshToken] = useLocalStorage(\n    'strava_refresh_token',\n    null\n  );\n  const [tokenExpirationDate, setTokenExpirationDate] = useLocalStorage(\n    'strava_token_expires_at',\n    null\n  );\n  const { search } = useLocation();\n\n  const paginationActivities = 20;\n\n  useEffect(() => {\n    const values = queryString.parse(search);\n    if (values && values.code) {\n      const apiCode = values.code.toString();\n      getToken(apiCode);\n    }\n    if (\n      !token ||\n      !refreshToken ||\n      isBefore(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      refreshTokenFromApi();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      refreshWidget();\n    }\n  }, [token]);\n\n  function refreshWidget() {\n    setActivities([]);\n    getAthleteData();\n    getActivities();\n  }\n\n  function getToken(apiCode: string) {\n    axios\n      .post('https://www.strava.com/oauth/token', {\n        client_id: process.env.REACT_APP_STRAVA_CLIENT_ID,\n        client_secret: process.env.REACT_APP_STRAVA_CLIENT_SECRET,\n        code: apiCode,\n        grant_type: 'authorization_code'\n      })\n      .then((response) => {\n        setToken(response.data.access_token as string);\n        setRefreshToken(response.data.refresh_token);\n        setTokenExpirationDate(response.data.expires_at);\n        setAthlete(response.data.athlete);\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshTokenFromApi() {\n    if (refreshToken) {\n      axios\n        .post('https://www.strava.com/oauth/token', {\n          client_id: process.env.REACT_APP_STRAVA_CLIENT_ID,\n          client_secret: process.env.REACT_APP_STRAVA_CLIENT_SECRET,\n          refresh_token: refreshToken,\n          grant_type: 'refresh_token'\n        })\n        .then((response) => {\n          setToken(response.data.access_token);\n          setRefreshToken(response.data.refresh_token);\n          setTokenExpirationDate(response.data.expires_at);\n          setAthlete(response.data.athlete);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    } else {\n      logger.error('No refresh token');\n    }\n  }\n\n  function getAthleteData() {\n    if (token) {\n      axios\n        .get('https://www.strava.com/api/v3/athlete', {\n          headers: { Authorization: `Bearer ${token}` }\n        })\n        .then((response) => {\n          setAthlete(response.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function getActivities() {\n    if (\n      token &&\n      tokenExpirationDate &&\n      isAfter(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      axios\n        .get(\n          `https://www.strava.com/api/v3/athlete/activities?page=1&per_page=${paginationActivities}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          setActivities(response.data.reverse());\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    } else {\n      refreshTokenFromApi();\n    }\n  }\n\n  function getActivitiesByMonth() {\n    return activities.reduce((activitiesByMonth: IActivity[], activity: IActivity) => {\n      const month = format(new Date(activity.start_date_local), 'yyyy-MM');\n      if (!activitiesByMonth[month]) {\n        activitiesByMonth[month] = [];\n      }\n      activitiesByMonth[month].push(\n        Math.round(activity.distance * 1000) / 1000000\n      );\n      return activitiesByMonth;\n    }, []);\n  }\n\n  function getStatsFromActivities() {\n    const activitiesByMonthList = getActivitiesByMonth();\n    return Object.keys(activitiesByMonthList).map((month) => {\n      return {\n        x: new Date(month),\n        y: Math.round(\n          activitiesByMonthList[month].reduce(\n            (total: number, distance: number) => total + distance\n          )\n        )\n      };\n    });\n  }\n\n  const widgetHeader = (\n    <div>\n      <a href={`https://www.strava.com/athletes/${athlete?.id}`}>\n        <img src={athlete?.profile_medium} />\n        {athlete?.firstname} {athlete?.lastname}\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div className=\"flexColumn\">\n      { (token &&\n        refreshToken &&\n        (tokenExpirationDate &&\n          isAfter(new Date(tokenExpirationDate as number * 1000), new Date()))) && (\n          <div>\n            <div style={{ height: \"20vh\", overflowY: 'scroll' }}>\n              {activities.slice().reverse().map((activity: IActivity) => {\n                return (\n                  <ComponentWithDetail\n                    key={activity.id}\n                    componentRoot={`${format(\n                      new Date(activity.start_date_local),\n                      'dd MMM'\n                    )}  ${activity.name}  ${Math.round(activity.distance * 1000) / 1000000\n                      } kms`}\n                    componentDetail={<StravaActivity {...activity} />}\n                    link={`https://www.strava.com/activities/${activity.id}`}\n                  />\n                );\n              })}\n            </div>\n\n\n            <div style={{ minHeight: '25vh', maxHeight: \"80vh\", flex: '1 0 50%' }}>\n              <ChartComponent\n                type=\"bar\"\n                data={{\n                  labels: getStatsFromActivities().map(data => format(data.x, 'MMM yyyy')),\n                  datasets: [\n                    {\n                      label: 'Distance (kms)',\n                      backgroundColor: 'orange',\n                      data: getStatsFromActivities(),\n                      yAxisID: 'kms',\n                      order: 2\n                    },\n                    {\n                      label: 'Activités',\n                      type: \"line\",\n                      backgroundColor: 'darkgreen',\n                      data: Object.keys(getActivitiesByMonth()).map((month) => {\n                        return {\n                          x: new Date(month),\n                          y: getActivitiesByMonth()[month].length\n                        };\n                      }),\n                      yAxisID: 'activities',\n                      order: 1\n                    }\n                  ]\n                }}\n                options={{\n                  scales: {\n                    y: [{\n                      id: 'kms',\n                      type: 'linear',\n                      position: 'left'\n                    }, {\n                      id: 'activities',\n                      type: 'linear',\n                      position: 'right'\n                    }]\n                  }\n                }}\n              />\n            </div>\n\n          </div>\n        )}\n      {(!token ||\n        !refreshToken ||\n        (tokenExpirationDate &&\n          isBefore(new Date(tokenExpirationDate as number * 1000), new Date()))) && (\n          <a\n            href={`https://www.strava.com/oauth/authorize?client_id=${process.env.REACT_APP_STRAVA_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_FRONTEND_URL}&response_type=code&scope=read,activity:read`}\n          >\n            <Button>Se connecter</Button>\n          </a>\n        )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{}}\n        header={widgetHeader}\n        body={widgetBody}\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyWeatherWidget.scss';\n\ninterface IProps {\n  city?: string;\n  onConfigSubmitted: (city: string) => void;\n}\n\nexport default function EmptyWeatherWidget(props: IProps): React.ReactElement {\n  const [city, setCity] = useState(props.city || '');\n  const onCityChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setCity(event.target.value);\n  const onValidation = () => {\n    props.onConfigSubmitted(city);\n  };\n\n  return (\n    <div>\n      <input\n        id=\"cityNameInput\"\n        name=\"city\"\n        onChange={onCityChangeHandler}\n        value={city}\n        placeholder=\"Saisissez de nom de la ville\"\n      />\n      <button\n        id=\"validateButton\"\n        className=\"btn btn-success\"\n        onClick={onValidation}\n        disabled={\n          !city ||\n          city?.length < 1\n        }\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp,\n} from '../../utils/DateUtils';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport EmptyWeatherWidget from './emptyWidget/EmptyWeatherWidget';\nimport Forecast from './forecast/Forecast';\nimport { ICity, IForecast, IWeather, IWeatherAPIResponse } from './IWeather';\nimport './WeatherWidget.scss';\nimport { format } from 'date-fns';\n\ninterface IProps {\n  id: number;\n  city?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nenum ForecastMode {\n  TODAY,\n  TOMORROW,\n  WEEK\n}\n\nexport default function WeatherWidget(props: IProps): React.ReactElement {\n  const WEATHER_API = 'http://api.openweathermap.org/data/2.5/';\n  const WEATHER_ENDPOINT = 'weather';\n  const FORECAST_ENDPOINT = 'forecast';\n  const API_OPTIONS = '?units=metric&lang=fr&appid=';\n\n  const [cityToQuery, setCityToQuery] = useState(props.city);\n  const [weather, setWeather] = useState<IWeather>();\n  const [forecast, setForecast] = useState<IForecast[]>();\n  const [city, setCity] = useState<ICity>();\n  const [forecastMode, setForecastMode] = useState<ForecastMode>(ForecastMode.TODAY);\n\n  function fetchDataFromWeatherApi() {\n    if (cityToQuery) {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          params: {\n            url: `${WEATHER_API}${WEATHER_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\n          }\n        })\n        .then((result) => {\n          setWeather(result.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error);\n        });\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          params: {\n            url: `${WEATHER_API}${FORECAST_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\n          }\n        })\n        .then((result: AxiosResponse) => {\n          setForecast((result.data as IWeatherAPIResponse).list);\n          setCity((result.data as IWeatherAPIResponse).city);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromWeatherApi();\n  }, [cityToQuery]);\n\n  function refreshWidget() {\n    setWeather(undefined);\n    setForecast(undefined);\n    setCity(undefined);\n    fetchDataFromWeatherApi();\n  }\n\n  function onConfigSubmitted(updatedCity: string) {\n    updateWidgetData(props.id, {\n      city: updatedCity\n    })\n      .then(() => {\n        setCityToQuery(updatedCity);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function filterForecastByMode(): IForecast[] {\n    if (city && forecast) {\n      switch (forecastMode) {\n        case ForecastMode.WEEK: {\n          return forecast.filter(\n            (forecastDay) => {\n              const forecastElement = formatDateFromTimestamp(\n                forecastDay.dt,\n                adjustTimeWithOffset(city.timezone)\n              )\n              return forecastElement.getHours() === 17\n            }\n          )\n        }\n        case ForecastMode.TOMORROW: {\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date(+new Date() + 86400000).getDay() && new Date(forecastDay.dt * 1000).getHours() >= 7);\n        }\n        case ForecastMode.TODAY:\n        default: {\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date().getDay() && new Date(forecastDay.dt * 1000).getHours() >= 7);\n        }\n      }\n    } else {\n      return [];\n    }\n  }\n\n  function selectTodayForecast(): void {\n    setForecastMode(ForecastMode.TODAY);\n  }\n\n  function selectTomorrowForecast(): void {\n    setForecastMode(ForecastMode.TOMORROW);\n  }\n\n  function selectWeekForecast(): void {\n    setForecastMode(ForecastMode.WEEK);\n  }\n\n  const widgetHeader = <div>La météo aujourd'hui à {city?.name}</div>;\n\n  const widgetBody = (\n    <div>\n      {city && weather && weather.weather && (\n        <div className=\"flexRow\">\n          <div>\n            <img\n              style={{ width: '80px' }}\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              title={weather.weather[0].description}\n              alt={weather.weather[0].description}\n            />\n          </div>\n          <div className=\"flexRow\" style={{ placeItems: 'center' }}>\n            <div className=\"flexColumn mr5\">\n              <div>{weather.weather[0].description}</div>\n              <div>\n                <i className=\"fa fa-thermometer-three-quarters fa-md\" />{' '}\n                {weather.main.temp}°\n              </div>\n            </div>\n            <div className=\"flexColumn\">\n              <div className=\"spaceBetween\">\n                <div>\n                  <i className=\"fa fa-sun-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunrise,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n                <div>\n                  <i className=\"fa fa-moon-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunset,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n              </div>\n              <div>\n                <i className=\"fa fa-clock-o fa-md\" />{' '}\n                {formatDateFromTimestamp(\n                  weather.dt,\n                  adjustTimeWithOffset(weather.timezone)\n                ).toLocaleString('fr')}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {city && forecast && (\n        <div>\n          <div className=\"flexRow\">\n            <span className=\"bold\">Prévisions</span>\n            <span style={{ alignContent: \"space-between\", display: \"flex\" }}>\n              <button id=\"toggleTodayForecast\" onClick={selectTodayForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TODAY ? 'success' : 'primary'} mr-5`}>Aujourd'hui</button>\n              <button id=\"toggleTomorrowForecast\" onClick={selectTomorrowForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TOMORROW ? 'success' : 'primary'}`}>Demain</button>\n              <button id=\"toggleWeekForecast\" onClick={selectWeekForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.WEEK ? 'success' : 'primary'}`}>Semaine</button>\n            </span>\n          </div>\n          <br />\n          <div style={{ height: '20vh', maxWidth: \"100%\" }}>\n            <Line\n              type=\"line\"\n              data={{\n                labels:\n                  filterForecastByMode().map((forecastDay) => {\n                    if (forecastMode === ForecastMode.TODAY || forecastMode === ForecastMode.TOMORROW) {\n                      return format(new Date(forecastDay.dt * 1000), 'HH');\n                    } else {\n                      return format(new Date(forecastDay.dt * 1000), 'EEEE dd MMM');\n                    }\n                  }\n\n                  ),\n                datasets: [\n                  {\n                    label: 'Température',\n                    borderColor: 'orange',\n                    data: filterForecastByMode()\n                      .map((forecastDay) => forecastDay.main.temp_max)\n                  },\n                  {\n                    label: 'Ressenti',\n                    borderColor: 'red',\n                    data: filterForecastByMode()\n                      .map((forecastDay) => forecastDay.main.feels_like)\n                  }\n                ]\n              }}\n              options={{ maintainAspectRatio: false }}\n            />\n          </div>\n          <div className=\"flexRow forecastRow\">\n            {city &&\n              forecast &&\n              filterForecastByMode()\n                .map((forecastDay) => {\n                  return (\n                    <div className=\"forecastContainer\" key={forecastDay.dt}>\n                      <Forecast {...forecastDay} city={city} />\n                    </div>\n                  );\n                })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ city: city }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyWeatherWidget\n            city={cityToQuery}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp\n} from '../../../utils/DateUtils';\nimport { IForecast } from '../IWeather';\nimport './Forecast.scss';\n\nconst Forecast: React.FunctionComponent<IForecast> = (props) => {\n  return (\n    <div className=\"forecast\">\n      <div>\n        {formatDateFromTimestamp(\n          props.dt,\n          adjustTimeWithOffset(props.city.timezone)\n        ).toLocaleString('fr', {\n          weekday: 'short',\n          day: 'numeric',\n          hour: '2-digit'\n        })}\n      </div>\n      <div className=\"flexRow\">\n        <div>\n          <img\n            src={`https://openweathermap.org/img/wn/${props.weather[0]?.icon}@2x.png`}\n            className=\"smallImage\"\n            title={props.weather[0]?.description}\n            alt={props.weather[0]?.description}\n          />\n        </div>\n        <div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-three-quarters fa-sm mr10\"\n              style={{ color: 'crimson' }}\n            />\n            {props.main.temp_max}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-quarter fa-sm mr10\"\n              style={{ color: 'blue' }}\n            />\n            {props.main.temp_min}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-tint fa-sm mr10\"\n              style={{ color: 'lightblue' }}\n            />\n            {props.main.humidity}%\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TabPane } from 'reactstrap';\nimport FacebookWidget from 'src/widgets/facebook/FacebookWidget';\nimport SteamWidget from 'src/widgets/steam/SteamWidget';\nimport { WidgetTypes } from '../enums/WidgetsEnum';\nimport { ITabState } from '../reducers/tabReducer';\nimport { deleteWidget } from '../services/WidgetService';\nimport logger from '../utils/LogUtils';\nimport CalendarWidget from '../widgets/calendar/CalendarWidget';\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\nimport RSSWidget from '../widgets/rss/RSSWidget';\nimport StravaWidget from '../widgets/strava/StravaWidget';\nimport WeatherWidget from '../widgets/weather/WeatherWidget';\n\ninterface IProps {\n  tabId: number;\n  newWidget?: IWidgetConfig;\n}\n\nexport default function TabDash(props: IProps): React.ReactElement {\n  const [widgets, setWidgets] = useState([]);\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n\n  function createWidget(widgetConfig: IWidgetConfig) {\n    switch (widgetConfig.type) {\n      case WidgetTypes.WEATHER: {\n        return (\n          <WeatherWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.RSS: {\n        return (\n          <RSSWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.CALENDAR: {\n        return (\n          <CalendarWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.STRAVA: {\n        return (\n          <StravaWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.STEAM: {\n        return (\n          <SteamWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  function deleteWidgetFromDashboard(id: number) {\n    deleteWidget(id)\n      .then((response) => {\n        if (response) {\n          setWidgets(\n            widgets.filter((widget: IWidgetConfig) => {\n              return widget.id !== id;\n            })\n          );\n        }\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  useEffect(() => {\n    if (!widgets.length && activeTab === props.tabId) {\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/widget/?tabId=${props.tabId}`)\n        .then((result) => {\n          return result.json();\n        })\n        .then((result) => {\n          setWidgets(result);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    if (props.newWidget) {\n      setWidgets((widgets as IWidgetConfig[]).concat([props.newWidget]) as []);\n    }\n  }, [props.newWidget != null && props.newWidget.id]);\n\n  return (\n    <TabPane tabId={props.tabId}>\n\n      <div className=\"widgetList\">\n        <FacebookWidget />\n        {widgets &&\n          widgets.length > 0 &&\n          widgets.map((widgetConfig: IWidgetConfig) => {\n            return (\n\n              <div\n                key={widgetConfig.id}\n                className=\"widget\"\n              >\n                {createWidget(widgetConfig)}\n              </div>\n            )\n          }\n\n          )}\n      </div>\n\n    </TabPane>\n  );\n}\n","import 'font-awesome/fonts/fontawesome-webfont.svg';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DroppableProvided,\n  DropResult\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Nav,\n  TabContent\n} from 'reactstrap';\nimport './Dash.scss';\nimport { ITab } from './model/Tab';\nimport NavDash from './navigation/navDash/NavDash';\nimport Store from './pages/store/Store';\nimport { toggleSelectedTab } from './reducers/actions';\nimport { ITabState } from './reducers/tabReducer';\nimport { addTab, updateTabs } from './services/TabService';\nimport { addWidget } from './services/WidgetService';\nimport TabDash from './tab/TabDash';\nimport logger from './utils/LogUtils';\nimport { IWidgetConfig } from './widgets/IWidgetConfig';\n\nexport interface IMenu {\n  link: string;\n  icon: string;\n}\n\nexport default function Dash(): React.ReactElement {\n  const [tabs, setTabs] = useState<ITab[]>([]);\n  const [newWidget, setNewWidget] = useState<IWidgetConfig>();\n  const [modal, setModal] = useState(false);\n\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n  const dispatch = useDispatch();\n\n  function initDashboard() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/tab/`)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        if (!result || result.length === 0) {\n          addNewTab();\n        }\n        setTabs(result);\n        dispatch(toggleSelectedTab(result[0].id));\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function toggleTab(tab: number) {\n    if (activeTab !== tab) {\n      dispatch(toggleSelectedTab(tab));\n    }\n  }\n\n  function addNewTab() {\n    const newTabLabel = 'Nouvel onglet';\n    addTab(newTabLabel).then((response) => {\n      const insertedTab = response.data as ITab;\n      setTabs(tabs.concat(insertedTab));\n      dispatch(toggleSelectedTab(insertedTab.id));\n    });\n  }\n\n  function getNewWidget(tabId: number) {\n    if (newWidget && tabId === newWidget.tab.id) {\n      return newWidget;\n    } else {\n      return undefined;\n    }\n  }\n\n  function toggleModal() {\n    setModal(!modal);\n  }\n\n  function onWidgetAdded(type: React.MouseEvent<HTMLButtonElement>) {\n    if (activeTab) {\n      addWidget(type.currentTarget.value, activeTab)\n        .then((response) => {\n          if (response) {\n            const widgetData = response.data as IWidgetConfig;\n            setNewWidget(widgetData);\n          }\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function onTabDeleted(id: number) {\n    setTabs(tabs.filter((tab) => tab.id !== id));\n    if (tabs[0].id === id) {\n      dispatch(toggleSelectedTab(tabs[1].id));\n    } else if (activeTab === id) {\n      dispatch(toggleSelectedTab(tabs[0].id));\n    } else {\n      dispatch(toggleSelectedTab(activeTab));\n    }\n  }\n\n  function reorder(\n    list: unknown[],\n    startIndex: number,\n    endIndex: number\n  ): unknown[] {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  function onDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      tabs,\n      result.source.index,\n      result.destination.index\n    ).map((tab, index) => {\n      (tab as ITab).tabOrder = index;\n      return tab;\n    });\n    updateTabs(items as ITab[]).then((response) => {\n      setTabs(response.data as ITab[]);\n    });\n  }\n\n  useEffect(initDashboard, []);\n\n  return (\n    <div className=\"dash\">\n      <div className=\"flexRow\">\n        <div className=\"dashNavbar\">\n          {activeTab && tabs.length > 0 &&\n            <Nav vertical={true} navbar={true}>\n              <Button\n                id=\"openAddWidgetModal\"\n                className=\"dashNavbarLink\"\n                onClick={toggleModal}\n              >\n                <i className=\"fa fa-plus-circle fa-lg\" aria-hidden=\"true\" />\n              </Button>\n              <Modal isOpen={modal} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Ajouter un widget</ModalHeader>\n                <ModalBody>\n                  <Store onWidgetAdded={onWidgetAdded} />\n                </ModalBody>\n                <ModalFooter>\n                  <Button\n                    id=\"closeAddWidgetModal\"\n                    color=\"primary\"\n                    onClick={toggleModal}\n                  >\n                    Fermer\n                </Button>\n                </ModalFooter>\n              </Modal>\n            </Nav>\n          }\n        </div>\n\n        <div className=\"flexColumn tabsBar\">\n          <Nav tabs={true}>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                {(providedDroppable: DroppableProvided) => (\n                  <div\n                    className=\"flexRow\"\n                    {...providedDroppable.droppableProps}\n                    ref={providedDroppable.innerRef}\n                  >\n                    {tabs.length > 0 &&\n                      tabs.map((tab: ITab, index: number) => {\n                        return (\n                          <Draggable\n                            key={tab.id}\n                            draggableId={tab.id.toString()}\n                            index={index}\n                          >\n                            {(providedDraggable) => (\n                              <div\n                                key={tab.id}\n                                ref={providedDraggable.innerRef}\n                                {...providedDraggable.draggableProps}\n                                {...providedDraggable.dragHandleProps}\n                                className={`tab ${tab.id === activeTab ? 'selectedItem' : ''\n                                  }`}\n                              >\n                                <NavDash\n                                  tab={tab}\n                                  onTabClicked={() => toggleTab(tab.id)}\n                                  onTabDeleted={onTabDeleted}\n                                />\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n            <Button onClick={addNewTab} id=\"addNewTabButton\" className=\"fa fa-plus-circle fa-lg\" />\n          </Nav>\n          <TabContent activeTab={activeTab}>\n            {tabs.length > 0 &&\n              tabs.map((tab: ITab) => {\n                return (\n                  <TabDash\n                    key={tab.id}\n                    newWidget={getNewWidget(tab.id)}\n                    tabId={tab.id}\n                  />\n                );\n              })}\n          </TabContent>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport interface ITabState {\n  activeTab: number;\n}\n\nconst initialState: ITabState = {\n  activeTab: -1\n};\n\nexport default function (\n  state = initialState,\n  action: { type: string; payload: { id: number } }\n): ITabState {\n  switch (action.type) {\n    case TOGGLE_TAB: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        activeTab: id\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport rootReducer from './tabReducer';\n\nexport default createStore(rootReducer);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dash from './Dash';\nimport './index.scss';\nimport store from './reducers/store';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Dash />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}