{"version":3,"sources":["services/TabService.ts","navigation/navDash/NavDash.tsx","enums/WidgetsEnum.ts","pages/store/Store.tsx","reducers/actionTypes.ts","reducers/actions.ts","services/WidgetService.ts","enums/ModeEnum.ts","utils/LogUtils.ts","widgets/utils/DeleteWidget.tsx","widgets/Widget.tsx","widgets/calendar/emptyWidget/EmptyCalendarWidget.tsx","widgets/calendar/CalendarWidget.tsx","components/detailComponent/ComponentWithDetail.tsx","utils/DateUtils.ts","widgets/rss/article/RSSArticle.tsx","widgets/rss/emptyWidget/EmptyRSSWidget.tsx","widgets/rss/RSSWidget.tsx","hooks/localStorageHook.ts","widgets/strava/activity/StravaActivity.tsx","widgets/strava/emptyWidget/EmptyStravaWidget.tsx","widgets/strava/StravaWidget.tsx","widgets/weather/emptyWidget/EmptyWeatherWidget.tsx","widgets/weather/WeatherWidget.tsx","widgets/weather/forecast/Forecast.tsx","tab_facebook/TabNavigation.tsx","widgets/facebook/FacebookWidget.tsx","widgets/facebook/groups/GroupsTab.tsx","widgets/facebook/FacebookAPI.ts","widgets/facebook/events/EventsTab.tsx","tab/TabDash.tsx","Dash.tsx","reducers/tabReducer.ts","reducers/store.ts","registerServiceWorker.ts","index.tsx"],"names":["headers","NavDash","props","useState","tab","label","setLabel","isToggled","toggle","NavItem","className","NavLink","onClick","onTabClicked","onDoubleClick","id","tabOrder","axios","post","process","updateTab","then","onChange","event","target","value","Button","delete","onTabDeleted","WidgetTypes","Store","Object","keys","map","key","isNaN","parseInt","Card","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","onWidgetAdded","TOGGLE_TAB","toggleSelectedTab","type","payload","updateWidgetData","data","ModeEnum","logger","winston","format","combine","json","colorize","all","level","transports","Console","DeleteWidget","onCancelButtonClicked","onDeleteButtonClicked","idWidget","Widget","READ","mode","setMode","useEffect","config","header","EDIT","aria-hidden","refreshFunction","DELETE","body","editModeComponent","EmptyCalendarWidget","calendarUrls","setCalendarUrls","onCalendarUrlUpdated","url","index","toString","placeholder","calendarUrl","filter","concat","onConfigSubmitted","disabled","length","CalendarWidget","calendars","schedules","setSchedules","locales","fr","localizer","dateFnsLocalizer","parse","startOfWeek","getDay","refreshWidget","get","response","ical","scheds","eventKey","title","summary","start","end","allDay","getHours","catch","error","widgetHeader","widgetBody","culture","events","startAccessor","endAccessor","defaultView","popup","style","height","tabId","updatedCalendars","message","ComponentWithDetail","openCollapse","setOpenCollapse","componentRoot","Collapse","isOpen","componentDetail","formatDateFromTimestamp","timestamp","offset","Date","adjustTimeWithOffset","localeOffset","getTimezoneOffset","Math","abs","offsetMilliseconds","stripHtmlFromContent","content","div","document","createElement","innerHTML","textContent","innerText","RSSArticle","href","link","description","date","pubDate","toLocaleString","author","EmptyRSSWidget","setUrl","name","onUrlSubmitted","RSSWidget","feed","setFeed","setDecription","image","setImage","setLink","setTitle","rssParser","RSSParser","fetchDataFromRssFeed","parseURL","apiResult","result","items","formatTitleForArticle","articleTitle","toLocaleTimeString","hour","minute","article","guid","rssUrl","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","StravaActivity","start_date_local","round","distance","moving_time","total_elevation_gain","achievement_count","average_speed","max_speed","kudos_count","comment_count","EmptyStravaWidget","clientId","clientSecret","StravaWidget","REACT_APP_STRAVA_CLIENT_ID","setClientId","REACT_APP_STRAVA_CLIENT_SECRET","setClientSecret","activities","setActivities","athlete","setAthlete","token","setToken","refreshToken","setRefreshToken","tokenExpirationDate","setTokenExpirationDate","search","useLocation","Authorization","isAfter","reverse","refreshTokenFromApi","client_id","client_secret","refresh_token","grant_type","access_token","expires_at","getActivitiesByMonth","reduce","activitiesByMonth","activity","month","push","getStatsFromActivities","activitiesByMonthList","x","y","total","values","queryString","code","apiCode","getToken","isBefore","profile_medium","firstname","lastname","overflowY","slice","minHeight","maxHeight","flex","labels","datasets","backgroundColor","yAxisID","order","options","scales","position","updatedClientId","updatedClientSecret","EmptyWeatherWidget","city","setCity","ForecastMode","Forecast","dt","timezone","weekday","day","weather","icon","color","main","temp_max","temp_min","humidity","WeatherWidget","WEATHER_API","API_OPTIONS","cityToQuery","setCityToQuery","setWeather","forecast","setForecast","TODAY","forecastMode","setForecastMode","fetchDataFromWeatherApi","params","REACT_APP_OPENWEATHERMAP_KEY","list","undefined","filterForecastByMode","WEEK","forecastDay","TOMORROW","placeItems","temp","sys","sunrise","sunset","alignContent","display","maxWidth","borderColor","feels_like","maintainAspectRatio","updatedCity","TabNavigation","tabList","to","path","exact","component","tabs","Promise","resolve","reject","debug","FB","api","fields","groupsData","Error","FacebookWidget","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","setState","loginStatusResponse","status","login","scope","facebookLogout","logout","userData","fbAsyncInit","init","appId","xfbml","version","fbInitEvent","Event","dispatchEvent","d","s","js","getElementsByTagName","fjs","getElementById","parentNode","insertBefore","addEventListener","removeEventListener","this","element","state","first_name","last_name","data-max-rows","data-size","data-button-type","data-use-continue-as","React","TabDash","widgets","setWidgets","activeTab","useSelector","createWidget","widgetConfig","WEATHER","deleteWidgetFromDashboard","RSS","CALENDAR","STRAVA","deleteWidget","widget","fetch","newWidget","TabPane","onDragEnd","destination","widgetsData","widgetOrder","updateWidgetsOrder","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","providedDroppable","droppableProps","ref","innerRef","draggableId","providedDraggable","draggableProps","dragHandleProps","Dash","setTabs","setNewWidget","modal","setModal","dispatch","useDispatch","addNewTab","insertedTab","toggleModal","Nav","vertical","navbar","Modal","ModalHeader","ModalBody","addWidget","currentTarget","widgetData","ModalFooter","updateTabs","direction","toggleTab","TabContent","initialState","createStore","action","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","store","URL","origin","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.89f9a9ef.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport { ITab } from '../model/Tab';\r\n\r\nconst headers = {\r\n  'Content-type': 'application/json'\r\n};\r\n\r\nexport function addTab(label: string): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/tab/addTab`,\r\n    { label: label },\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function updateTab(\r\n  id: number,\r\n  label: string,\r\n  tabOrder: number\r\n): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTab`,\r\n    { id: id, label: label, tabOrder: tabOrder },\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function updateTabs(tabs: ITab[]): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTabs`,\r\n    tabs,\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function deleteTab(id: number): Promise<AxiosResponse<unknown>> {\r\n  return axios.delete(\r\n    `${process.env.REACT_APP_BACKEND_URL}/tab/deleteTab/?id=${id}`,\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, NavItem, NavLink } from 'reactstrap';\r\nimport { ITab } from '../../model/Tab';\r\nimport { deleteTab, updateTab } from '../../services/TabService';\r\ninterface IProps {\r\n  tab: ITab;\r\n  onTabClicked: () => void;\r\n  onTabDeleted: (id: number) => void;\r\n}\r\n\r\nexport default function NavDash(props: IProps): React.ReactElement {\r\n  const [label, setLabel] = useState(props.tab.label);\r\n  const [isToggled, toggle] = useState(false);\r\n\r\n  function deleteTabFromDash() {\r\n    deleteTab(props.tab.id).then(() => props.onTabDeleted(props.tab.id));\r\n  }\r\n\r\n  function saveTabName() {\r\n    updateTab(props.tab.id, label, props.tab.tabOrder).then(() => {\r\n      toggle(!isToggled);\r\n    });\r\n  }\r\n\r\n  function clickToggle() {\r\n    toggle(!isToggled);\r\n  }\r\n\r\n  return (\r\n    <NavItem className=\"clickableItem\" key={props.tab.id}>\r\n      <NavLink onClick={props.onTabClicked}>\r\n        {isToggled ? (\r\n          <div className=\"flexRow\">\r\n            <input\r\n              onDoubleClick={saveTabName}\r\n              onChange={(event) => setLabel(event.target.value)}\r\n              value={label}\r\n            />\r\n            <Button className=\"deleteTabButton\" onClick={deleteTabFromDash}>\r\n              <i className=\"fa fa-trash\" />\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <span onDoubleClick={clickToggle}>{label}</span>\r\n        )}\r\n      </NavLink>\r\n    </NavItem>\r\n  );\r\n}\r\n","export enum WidgetTypes {\r\n  WEATHER = 1,\r\n  RSS = 2,\r\n  CALENDAR = 3,\r\n  STRAVA = 4\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle\r\n} from 'reactstrap';\r\nimport { WidgetTypes } from '../../enums/WidgetsEnum';\r\n\r\ninterface IProps {\r\n  onWidgetAdded: (type: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst Store: React.FunctionComponent<IProps> = (props) => {\r\n  return (\r\n    <div className=\"flexRow\">\r\n      {Object.keys(WidgetTypes).map((key) => {\r\n        return (\r\n          isNaN(parseInt(key, 0)) && (\r\n            <Card key={key}>\r\n              <CardImg\r\n                top={true}\r\n                width=\"100%\"\r\n                src=\"/assets/318x180.svg\"\r\n                alt=\"Card image cap\"\r\n              />\r\n              <CardBody>\r\n                <CardTitle>{key}</CardTitle>\r\n                <CardSubtitle>Widget {key}</CardSubtitle>\r\n                <CardText>\r\n                  Cliquez ci-dessous pour ajouter un widget {key} au dashboard.\r\n                </CardText>\r\n                <Button\r\n                  id={key}\r\n                  onClick={props.onWidgetAdded}\r\n                  className=\"btn btn-success\"\r\n                  value={WidgetTypes[key]}\r\n                >\r\n                  Ajouter\r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          )\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n","export const TOGGLE_TAB = 'TOGGLE_TAB';\r\n","import { TOGGLE_TAB } from './actionTypes';\r\n\r\nexport const toggleSelectedTab = (\r\n  id: number\r\n): { type: string; payload: { id: number } } => ({\r\n  type: TOGGLE_TAB,\r\n  payload: {\r\n    id\r\n  }\r\n});\r\n","import axios, { AxiosResponse } from 'axios';\r\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\r\nconst headers = {\r\n  'Content-type': 'application/json'\r\n};\r\n\r\nexport function addWidget(\r\n  type: string,\r\n  tabId: number\r\n): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/widget/addWidget`,\r\n    { type: type, tab: { id: tabId } },\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function updateWidgetData(\r\n  id: number,\r\n  data: unknown\r\n): Promise<AxiosResponse<unknown>> {\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetData`,\r\n    { id: id, data: data },\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function updateWidgetsOrder(\r\n  widgets: IWidgetConfig[]\r\n): Promise<AxiosResponse<unknown>> {\r\n  const widgetsData = widgets.map((widget) => {\r\n    return { id: widget.id, widgetOrder: widget.widgetOrder };\r\n  });\r\n  return axios.post(\r\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetsOrder`,\r\n    widgetsData,\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n\r\nexport function deleteWidget(id: number): Promise<AxiosResponse<unknown>> {\r\n  return axios.delete(\r\n    `${process.env.REACT_APP_BACKEND_URL}/widget/deleteWidget/?id=${id}`,\r\n    {\r\n      headers\r\n    }\r\n  );\r\n}\r\n","export enum ModeEnum {\r\n  READ = 1,\r\n  EDIT = 2,\r\n  DELETE = 3\r\n}\r\n","import * as winston from 'winston';\r\n\r\nconst logger = winston.createLogger({\r\n  format: winston.format.combine(\r\n    winston.format.json(),\r\n    winston.format.colorize({ all: true })\r\n  ),\r\n  level: 'debug',\r\n  transports: [new winston.transports.Console()]\r\n});\r\n\r\nexport default logger;\r\n","import * as React from 'react';\r\n\r\ninterface IProps {\r\n  idWidget: number;\r\n  onCancelButtonClicked: () => void;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function DeleteWidget(props: IProps): React.ReactElement {\r\n  const confirmDeleteWidget = () => {\r\n    props.onDeleteButtonClicked(props.idWidget);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Êtes-vous sûr de vouloir supprimer ce widget ?</h4>\r\n      <button\r\n        onClick={props.onCancelButtonClicked}\r\n        className=\"btn btn-primary cancelButton\"\r\n      >\r\n        Annuler\r\n      </button>\r\n      <button\r\n        onClick={confirmDeleteWidget}\r\n        className=\"btn btn-danger validateDeletionButton\"\r\n      >\r\n        Supprimer\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { ModeEnum } from '../enums/ModeEnum';\r\nimport DeleteWidget from './utils/DeleteWidget';\r\n\r\ninterface IProps {\r\n  id: number;\r\n  tabId: number;\r\n  config: Record<string, unknown>;\r\n  header: React.ReactElement;\r\n  body: React.ReactElement;\r\n  editModeComponent: React.ReactElement<IProps>;\r\n  refreshFunction: () => void;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function Widget(props: IProps): React.ReactElement {\r\n  const [mode, setMode] = useState(ModeEnum.READ);\r\n\r\n  useEffect(() => {\r\n    setMode(ModeEnum.READ);\r\n  }, [props.config]);\r\n\r\n  function editWidget() {\r\n    setMode(ModeEnum.EDIT);\r\n  }\r\n\r\n  function cancelDeletion() {\r\n    setMode(ModeEnum.READ);\r\n  }\r\n\r\n  function deleteWidget() {\r\n    setMode(ModeEnum.DELETE);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {mode === ModeEnum.READ ? (\r\n        <div>\r\n          <div className=\"header\">\r\n            <div className=\"leftGroup widgetHeader\">{props.header}</div>\r\n            <div className=\"rightGroup\">\r\n              <button\r\n                onClick={editWidget}\r\n                className=\"btn btn-default editButton\"\r\n              >\r\n                <i className=\"fa fa-cog\" aria-hidden=\"true\" />\r\n              </button>\r\n              <button\r\n                onClick={props.refreshFunction}\r\n                className=\"btn btn-default refreshButton\"\r\n              >\r\n                <i className=\"fa fa-refresh\" aria-hidden=\"true\" />\r\n              </button>\r\n              <button\r\n                onClick={deleteWidget}\r\n                className=\"btn btn-default deleteButton\"\r\n              >\r\n                <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {props.body}\r\n        </div>\r\n      ) : mode === ModeEnum.DELETE ? (\r\n        <DeleteWidget\r\n          idWidget={props.id}\r\n          onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n          onCancelButtonClicked={cancelDeletion}\r\n        />\r\n      ) : (\r\n        props.editModeComponent\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport './EmptyCalendarWidget.scss';\r\n\r\ninterface IProps {\r\n  calendarUrls?: string[];\r\n  onConfigSubmitted: (calendarUrls: string[]) => void;\r\n}\r\n\r\nexport default function EmptyCalendarWidget(props: IProps): React.ReactElement {\r\n  const [calendarUrls, setCalendarUrls] = useState<string[]>(\r\n    props.calendarUrls || []\r\n  );\r\n  const onValidation = () => {\r\n    props.onConfigSubmitted(calendarUrls);\r\n  };\r\n\r\n  const onCalendarUrlUpdated = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCalendarUrls(\r\n      calendarUrls.map((url: string, index: number) =>\r\n        index.toString() === event.target?.id ? event.target.value : url\r\n      )\r\n    );\r\n  };\r\n\r\n  const onCalendarUrlAdded = () => {\r\n    setCalendarUrls(calendarUrls.concat(''));\r\n  };\r\n\r\n  function removeCalendarUrl(calendarUrl: string) {\r\n    setCalendarUrls(calendarUrls.filter(url => url !== calendarUrl));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {calendarUrls &&\r\n          calendarUrls.map((url, index) => {\r\n            return (\r\n              <div>\r\n                <input\r\n                  key={index}\r\n                  id={index.toString()}\r\n                  onChange={onCalendarUrlUpdated}\r\n                  value={url}\r\n                  placeholder=\"Saisissez une URL\"\r\n                />\r\n                <button className=\"btn btn-danger\" onClick={() => removeCalendarUrl(url)}>Supprimer</button>\r\n              </div>\r\n            );\r\n          })}\r\n        <button id=\"addCalendarUrl\" className=\"btn btn-primary\" onClick={onCalendarUrlAdded}>\r\n          Ajouter\r\n        </button>\r\n      </div>\r\n      <button\r\n        id=\"validateCalendarUrls\"\r\n        onClick={onValidation}\r\n        disabled={!calendarUrls || calendarUrls?.length < 1}\r\n        className=\"btn btn-success\"\r\n      >\r\n        Valider\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport * as ical from 'ical';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { updateWidgetData } from '../../services/WidgetService';\r\nimport logger from '../../utils/LogUtils';\r\nimport Widget from '../Widget';\r\nimport './CalendarWidget.scss';\r\nimport EmptyCalendarWidget from './emptyWidget/EmptyCalendarWidget';\r\nimport format from 'date-fns/format'\r\nimport parse from 'date-fns/parse'\r\nimport startOfWeek from 'date-fns/startOfWeek'\r\nimport getDay from 'date-fns/getDay'\r\nimport { fr } from \"date-fns/locale\";\r\n\r\nimport { Calendar, dateFnsLocalizer, Event } from 'react-big-calendar';\r\n\r\nexport interface IProps {\r\n  id: number;\r\n  calendars?: string[];\r\n  tabId: number;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function CalendarWidget(props: IProps): React.ReactElement {\r\n  const [calendarUrls, setCalendarUrls] = useState(props.calendars);\r\n  const [schedules, setSchedules] = useState<Event[]>([]);\r\n\r\n  const locales = {\r\n    'fr': fr,\r\n  }\r\n  const localizer = dateFnsLocalizer({\r\n    format,\r\n    parse,\r\n    startOfWeek,\r\n    getDay,\r\n    locales,\r\n  })\r\n\r\n  useEffect(() => {\r\n    refreshWidget();\r\n  }, [calendarUrls]);\r\n\r\n  function onConfigSubmitted(updatedCalendars: string[]) {\r\n    updateWidgetData(props.id, { calendars: updatedCalendars })\r\n      .then(() => {\r\n        // Reset des URL pour pouvoir re-trigger le mode READ du widget via le changement de config.\r\n        setCalendarUrls([]);\r\n        setCalendarUrls(updatedCalendars);\r\n      })\r\n      .catch((error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function refreshWidget() {\r\n    setSchedules([]);\r\n    calendarUrls?.map((calendarUrl: string, index: number) => {\r\n      axios\r\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${calendarUrl}`)\r\n        .then((response) => {\r\n          const data = ical.parseICS(response.data);\r\n          const scheds = index > 0 ? schedules : [];\r\n          setSchedules([\r\n            ...scheds,\r\n            ...Object.keys(data).map((eventKey) => {\r\n              const event = data[eventKey];\r\n              const newSchedule: Event = {\r\n                title: event.summary,\r\n                start: event.start,\r\n                end: event.end,\r\n                allDay: event.end?.getHours() === 0 && event.start?.getHours() === 0\r\n              };\r\n              return newSchedule;\r\n            })\r\n          ]);\r\n        })\r\n        .catch((error) => {\r\n          logger.error(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  const widgetHeader = <div>Calendar</div>;\r\n\r\n  const widgetBody = (\r\n    <div>\r\n      <Calendar\r\n        localizer={localizer}\r\n        culture={\"fr\"}\r\n        events={schedules}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        defaultView=\"month\"\r\n        popup={true}\r\n        style={{ height: 500 }}\r\n      />\r\n\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        id={props.id}\r\n        tabId={props.tabId}\r\n        config={{ calendars: calendarUrls }}\r\n        header={widgetHeader}\r\n        body={widgetBody}\r\n        editModeComponent={\r\n          <EmptyCalendarWidget\r\n            calendarUrls={calendarUrls}\r\n            onConfigSubmitted={onConfigSubmitted}\r\n          />\r\n        }\r\n        refreshFunction={refreshWidget}\r\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Card, CardBody, Collapse } from 'reactstrap';\r\nimport './ComponentWithDetail.scss';\r\n\r\ninterface IProps {\r\n  componentRoot: React.ReactNode | string;\r\n  componentDetail: React.ReactNode | string;\r\n  link?: string;\r\n}\r\n\r\nexport default function ComponentWithDetail(props: IProps): React.ReactElement {\r\n  const [openCollapse, setOpenCollapse] = useState(false);\r\n  const toggleCollapse = () => {\r\n    setOpenCollapse(!openCollapse);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div onClick={toggleCollapse} className=\"title\">\r\n        {props.componentRoot}\r\n      </div>\r\n      <div>\r\n        <Collapse isOpen={openCollapse}>\r\n          <Card>\r\n            <CardBody>{props.componentDetail}</CardBody>\r\n          </Card>\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import addDays from 'date-fns/addDays'\r\n\r\nexport function getDayFromNow(numberOfDays: number): Date {\r\n  return addDays(new Date(), numberOfDays);\r\n}\r\n\r\nexport function formatDateFromTimestamp(timestamp: number, offset = 0): Date {\r\n  return new Date(timestamp * 1000 + offset * 1000);\r\n}\r\n\r\nexport function formatDateFromUTC(date: string): string {\r\n  const parsedDate = new Date(date);\r\n  return parsedDate.toLocaleString('fr');\r\n}\r\n\r\nexport function formatDayFromUTC(date: string): string {\r\n  const parsedDate = new Date(date);\r\n  return (\r\n    parsedDate.getDate() +\r\n    '/' +\r\n    parsedDate.getMonth() +\r\n    '/' +\r\n    parsedDate.getFullYear()\r\n  );\r\n}\r\n\r\nexport function formatTimeFromDate(date: string): string {\r\n  const parsedDate = new Date(date);\r\n  return parsedDate.getHours() + ':' + parsedDate.getMinutes();\r\n}\r\n\r\nexport function adjustTimeWithOffset(offset: number): number {\r\n  const localeOffset = -(new Date().getTimezoneOffset() * 60);\r\n  if (Math.abs(offset) === Math.abs(localeOffset)) {\r\n    return 0;\r\n  }\r\n  const offsetMilliseconds = Math.abs(offset) + Math.abs(localeOffset);\r\n  return offset < localeOffset ? -offsetMilliseconds : offsetMilliseconds;\r\n}\r\n","import * as React from 'react';\r\nimport { formatDateFromUTC } from '../../../utils/DateUtils';\r\nimport { IArticle } from './IArticle';\r\nimport './RSSArticle.scss';\r\n\r\nfunction stripHtmlFromContent(content?: string) {\r\n  const div = document.createElement('div');\r\n  div.innerHTML = content || '';\r\n  return div.textContent || div.innerText || '';\r\n}\r\n\r\nconst RSSArticle: React.FunctionComponent<IArticle> = (props) => {\r\n  return (\r\n    <div className=\"article\">\r\n      <div>\r\n        <a href={props.link}>{props.title}</a>\r\n      </div>\r\n      <div>\r\n        {stripHtmlFromContent(props.content) ||\r\n          stripHtmlFromContent(props.description)}\r\n      </div>\r\n      <div>\r\n        Publié le {formatDateFromUTC(props.pubDate || '')}{' '}\r\n        {props.author && 'par ' + props.author}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RSSArticle;\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport './EmptyRSSWidget.scss';\r\n\r\ninterface IProps {\r\n  url?: string;\r\n  onUrlSubmitted: (url: string) => void;\r\n}\r\n\r\nexport default function EmptyRSSWidget(props: IProps): React.ReactElement {\r\n  const [url, setUrl] = useState(props.url);\r\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    setUrl(event.target.value);\r\n  const onValidation = () => {\r\n    if (url) {\r\n      props.onUrlSubmitted(url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        id=\"rssFeedUrl\"\r\n        name=\"url\"\r\n        onChange={onChangeHandler}\r\n        value={url}\r\n        placeholder=\"Saisissez l'URL du flux RSS\"\r\n      />\r\n      <button\r\n        onClick={onValidation}\r\n        disabled={!url || url?.length < 1}\r\n        className=\"btn btn-success\"\r\n      >\r\n        Valider\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport RSSParser from 'rss-parser';\r\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\r\nimport { updateWidgetData } from '../../services/WidgetService';\r\nimport logger from '../../utils/LogUtils';\r\nimport Widget from '../Widget';\r\nimport { IArticle, ImageContent, IRSSHeader } from './article/IArticle';\r\nimport RSSArticle from './article/RSSArticle';\r\nimport EmptyRSSWidget from './emptyWidget/EmptyRSSWidget';\r\nimport './RSSWidget.scss';\r\n\r\ninterface IProps {\r\n  id: number;\r\n  url?: string;\r\n  tabId: number;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function RSSWidget(props: IProps): React.ReactElement {\r\n  const [feed, setFeed] = useState<IArticle[]>([]);\r\n  const [url, setUrl] = useState(props.url);\r\n  const [description, setDecription] = useState('');\r\n  const [image, setImage] = useState<ImageContent>();\r\n  const [link, setLink] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const rssParser = new RSSParser();\r\n\r\n  function fetchDataFromRssFeed() {\r\n    if (url) {\r\n      rssParser\r\n        .parseURL(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${url}`)\r\n        .then((apiResult: unknown) => {\r\n          const result = apiResult as IRSSHeader;\r\n          setDecription(result.description);\r\n          setFeed(result.items);\r\n          setImage(result.image);\r\n          setLink(result.link);\r\n          setTitle(result.title);\r\n        })\r\n        .catch((error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDataFromRssFeed();\r\n  }, [url]);\r\n\r\n  function refreshWidget() {\r\n    setFeed([]);\r\n    fetchDataFromRssFeed();\r\n  }\r\n\r\n  function onUrlSubmitted(rssUrl: string) {\r\n    updateWidgetData(props.id, { url: rssUrl })\r\n      .then(() => {\r\n        setUrl(rssUrl);\r\n        refreshWidget();\r\n      })\r\n      .catch((error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function formatTitleForArticle(pubDate: string, articleTitle?: string) {\r\n    const date = pubDate\r\n      ? new Date(pubDate).toLocaleTimeString('fr', {\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        })\r\n      : '';\r\n    return `${date} ${articleTitle}`;\r\n  }\r\n\r\n  function getFeedFromRSS(data: IArticle[]) {\r\n    return data.map((article) => {\r\n      return (\r\n        <ComponentWithDetail\r\n          key={article.guid}\r\n          componentRoot={formatTitleForArticle(article.pubDate, article.title)}\r\n          componentDetail={<RSSArticle {...article} />}\r\n          link={article.link}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  const widgetHeader = (\r\n    <div className=\"rssWidgetTitle\">\r\n      <a href={link} className=\"flexRow\">\r\n        {image && (\r\n          <div>\r\n            <img className=\"imgLogoRSS\" src={image?.url} alt=\"logo\" />\r\n          </div>\r\n        )}\r\n        <div className=\"rssTitle\">{title}</div>\r\n      </a>\r\n    </div>\r\n  );\r\n\r\n  const widgetBody = (\r\n    <div>\r\n      {url && feed && (\r\n        <div>\r\n          <div className=\"rssDescription\">{description}</div>\r\n          <div className=\"feed\">{getFeedFromRSS(feed)}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        id={props.id}\r\n        tabId={props.tabId}\r\n        config={{ url: url }}\r\n        header={widgetHeader}\r\n        body={widgetBody}\r\n        editModeComponent={\r\n          <EmptyRSSWidget url={url} onUrlSubmitted={onUrlSubmitted} />\r\n        }\r\n        refreshFunction={refreshWidget}\r\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport logger from '../utils/LogUtils';\r\n\r\nexport function useLocalStorage(\r\n  key: string,\r\n  initialValue: unknown\r\n): [unknown, (value: unknown) => void] {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      logger.error(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value: unknown) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      logger.error(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n","import { format } from 'date-fns';\r\nimport * as React from 'react';\r\nimport { IActivity } from '../IStrava';\r\n\r\nexport default function StravaActivity(props: IActivity): React.ReactElement {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <a href={`https://www.strava.com/activities/${props.id}`}>\r\n          {format(new Date(props.start_date_local), 'dd MMM')}{' '}\r\n          {props.name}\r\n        </a>\r\n      </div>\r\n      <div>Distance : {Math.round(props.distance * 1000) / 1000000} kms</div>\r\n      <div>Durée : {props.moving_time / 60} mins</div>\r\n      <div>Denivelé : {props.total_elevation_gain}</div>\r\n      <div>Trophées : {props.achievement_count}</div>\r\n      <div>Vitesse moyenne : {props.average_speed}</div>\r\n      <div>Vitesse max : {props.max_speed}</div>\r\n      <div>Kudos : {props.kudos_count}</div>\r\n      <div>Commentaires : {props.comment_count}</div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\n\r\ninterface IProps {\r\n  clientId?: string;\r\n  clientSecret?: string;\r\n  onConfigSubmitted: (clientId: string, clientSecret: string) => void;\r\n}\r\n\r\nexport default function EmptyStravaWidget(props: IProps): React.ReactElement {\r\n\r\n  useEffect(() => {\r\n    props.onConfigSubmitted(props.clientId || '', props.clientSecret || '');\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport * as queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\r\nimport { useLocalStorage } from '../../hooks/localStorageHook';\r\nimport { updateWidgetData } from '../../services/WidgetService';\r\nimport logger from '../../utils/LogUtils';\r\nimport Widget from '../Widget';\r\nimport StravaActivity from './activity/StravaActivity';\r\nimport EmptyStravaWidget from './emptyWidget/EmptyStravaWidget';\r\nimport { IActivity, IAthlete } from './IStrava';\r\nimport { format, isAfter, isBefore } from 'date-fns';\r\nimport ChartComponent from 'react-chartjs-2';\r\n\r\ninterface IProps {\r\n  id: number;\r\n  clientId?: string;\r\n  clientSecret?: string;\r\n  tabId: number;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nexport default function StravaWidget(props: IProps): React.ReactElement {\r\n  const [clientId, setClientId] = useState(process.env.REACT_APP_STRAVA_CLIENT_ID);\r\n  const [clientSecret, setClientSecret] = useState(process.env.REACT_APP_STRAVA_CLIENT_SECRET);\r\n  const [activities, setActivities] = useState([]);\r\n  const [athlete, setAthlete] = useState<IAthlete>();\r\n  const [token, setToken] = useLocalStorage('strava_token', null);\r\n  const [refreshToken, setRefreshToken] = useLocalStorage(\r\n    'strava_refresh_token',\r\n    null\r\n  );\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useLocalStorage(\r\n    'strava_token_expires_at',\r\n    null\r\n  );\r\n  const { search } = useLocation();\r\n\r\n  const paginationActivities = 20;\r\n\r\n  useEffect(() => {\r\n    const values = queryString.parse(search);\r\n    if (values && values.code) {\r\n      const apiCode = values.code.toString();\r\n      getToken(apiCode);\r\n    }\r\n    if (\r\n      !token ||\r\n      !refreshToken ||\r\n      isBefore(new Date((tokenExpirationDate as number) * 1000), new Date())\r\n    ) {\r\n      refreshTokenFromApi();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      refreshWidget();\r\n    }\r\n  }, [token]);\r\n\r\n  function onConfigSubmitted(\r\n    updatedClientId: string,\r\n    updatedClientSecret: string\r\n  ) {\r\n    updateWidgetData(props.id, {\r\n      clientId: updatedClientId,\r\n      clientSecret: updatedClientSecret\r\n    })\r\n      .then(() => {\r\n        setClientId(clientId);\r\n        setClientSecret(clientSecret);\r\n        refreshWidget();\r\n      })\r\n      .catch((error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function refreshWidget() {\r\n    setActivities([]);\r\n    getAthleteData();\r\n    getActivities();\r\n  }\r\n\r\n  function getToken(apiCode: string) {\r\n    axios\r\n      .post('https://www.strava.com/oauth/token', {\r\n        client_id: clientId,\r\n        client_secret: clientSecret,\r\n        code: apiCode,\r\n        grant_type: 'authorization_code'\r\n      })\r\n      .then((response) => {\r\n        setToken(response.data.access_token as string);\r\n        setRefreshToken(response.data.refresh_token);\r\n        setTokenExpirationDate(response.data.expires_at);\r\n        setAthlete(response.data.athlete);\r\n      })\r\n      .catch((error: Error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function refreshTokenFromApi() {\r\n    if (refreshToken) {\r\n      axios\r\n        .post('https://www.strava.com/oauth/token', {\r\n          client_id: clientId,\r\n          client_secret: clientSecret,\r\n          refresh_token: refreshToken,\r\n          grant_type: 'refresh_token'\r\n        })\r\n        .then((response) => {\r\n          setToken(response.data.access_token);\r\n          setRefreshToken(response.data.refresh_token);\r\n          setTokenExpirationDate(response.data.expires_at);\r\n          setAthlete(response.data.athlete);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.error(error.message);\r\n        });\r\n    } else {\r\n      logger.error('No refresh token');\r\n    }\r\n  }\r\n\r\n  function getAthleteData() {\r\n    if (token) {\r\n      axios\r\n        .get('https://www.strava.com/api/v3/athlete', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then((response) => {\r\n          setAthlete(response.data);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  function getActivities() {\r\n    if (\r\n      token &&\r\n      tokenExpirationDate &&\r\n      isAfter(new Date((tokenExpirationDate as number) * 1000), new Date())\r\n    ) {\r\n      axios\r\n        .get(\r\n          `https://www.strava.com/api/v3/athlete/activities?page=1&per_page=${paginationActivities}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setActivities(response.data.reverse());\r\n        })\r\n        .catch((error) => {\r\n          logger.error(error.message);\r\n        });\r\n    } else {\r\n      refreshTokenFromApi();\r\n    }\r\n  }\r\n\r\n  function getActivitiesByMonth() {\r\n    return activities.reduce((activitiesByMonth: IActivity[], activity: IActivity) => {\r\n      const month = format(new Date(activity.start_date_local), 'yyyy-MM');\r\n      if (!activitiesByMonth[month]) {\r\n        activitiesByMonth[month] = [];\r\n      }\r\n      activitiesByMonth[month].push(\r\n        Math.round(activity.distance * 1000) / 1000000\r\n      );\r\n      return activitiesByMonth;\r\n    }, []);\r\n  }\r\n\r\n  function getStatsFromActivities() {\r\n    const activitiesByMonthList = getActivitiesByMonth();\r\n    return Object.keys(activitiesByMonthList).map((month) => {\r\n      return {\r\n        x: new Date(month),\r\n        y: Math.round(\r\n          activitiesByMonthList[month].reduce(\r\n            (total: number, distance: number) => total + distance\r\n          )\r\n        )\r\n      };\r\n    });\r\n  }\r\n\r\n  const widgetHeader = (\r\n    <div>\r\n      <a href={`https://www.strava.com/athletes/${athlete?.id}`}>\r\n        <img src={athlete?.profile_medium} />\r\n        {athlete?.firstname} {athlete?.lastname}\r\n      </a>\r\n    </div>\r\n  );\r\n\r\n  const widgetBody = (\r\n    <div className=\"flexColumn\">\r\n      { (token &&\r\n        refreshToken &&\r\n        (tokenExpirationDate &&\r\n          isAfter(new Date(tokenExpirationDate as number * 1000), new Date()))) && (\r\n          <div>\r\n            <div style={{ height: \"20vh\", overflowY: 'scroll' }}>\r\n              {activities.slice().reverse().map((activity: IActivity) => {\r\n                return (\r\n                  <ComponentWithDetail\r\n                    key={activity.id}\r\n                    componentRoot={`${format(\r\n                      new Date(activity.start_date_local),\r\n                      'dd MMM'\r\n                    )}  ${activity.name}  ${Math.round(activity.distance * 1000) / 1000000\r\n                      } kms`}\r\n                    componentDetail={<StravaActivity {...activity} />}\r\n                    link={`https://www.strava.com/activities/${activity.id}`}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n\r\n\r\n            <div style={{ minHeight: '25vh', maxHeight: \"80vh\", flex: '1 0 50%' }}>\r\n              <ChartComponent\r\n                type=\"bar\"\r\n                data={{\r\n                  labels: getStatsFromActivities().map(data => format(data.x, 'MMM yyyy')),\r\n                  datasets: [\r\n                    {\r\n                      label: 'Distance (kms)',\r\n                      backgroundColor: 'orange',\r\n                      data: getStatsFromActivities(),\r\n                      yAxisID: 'kms',\r\n                      order: 2\r\n                    },\r\n                    {\r\n                      label: 'Activités',\r\n                      type: \"line\",\r\n                      backgroundColor: 'darkgreen',\r\n                      data: Object.keys(getActivitiesByMonth()).map((month) => {\r\n                        return {\r\n                          x: new Date(month),\r\n                          y: getActivitiesByMonth()[month].length\r\n                        };\r\n                      }),\r\n                      yAxisID: 'activities',\r\n                      order: 1\r\n                    }\r\n                  ]\r\n                }}\r\n                options={{\r\n                  scales: {\r\n                    y: [{\r\n                      id: 'kms',\r\n                      type: 'linear',\r\n                      position: 'left'\r\n                    }, {\r\n                      id: 'activities',\r\n                      type: 'linear',\r\n                      position: 'right'\r\n                    }]\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n        )}\r\n      {(!token ||\r\n        !refreshToken ||\r\n        (tokenExpirationDate &&\r\n          isBefore(new Date(tokenExpirationDate as number * 1000), new Date()))) && (\r\n          <a\r\n            href={`https://www.strava.com/oauth/authorize?client_id=${clientId}&redirect_uri=${process.env.REACT_APP_FRONTEND_URL}&response_type=code&scope=read,activity:read`}\r\n          >\r\n            <Button>Se connecter</Button>\r\n          </a>\r\n        )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        id={props.id}\r\n        tabId={props.tabId}\r\n        config={{ clientId: clientId }}\r\n        header={widgetHeader}\r\n        body={widgetBody}\r\n        editModeComponent={\r\n          <EmptyStravaWidget\r\n            clientId={clientId}\r\n            clientSecret={clientSecret}\r\n            onConfigSubmitted={onConfigSubmitted}\r\n          />\r\n        }\r\n        refreshFunction={refreshWidget}\r\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport './EmptyWeatherWidget.scss';\r\n\r\ninterface IProps {\r\n  city?: string;\r\n  onConfigSubmitted: (city: string) => void;\r\n}\r\n\r\nexport default function EmptyWeatherWidget(props: IProps): React.ReactElement {\r\n  const [city, setCity] = useState(props.city || '');\r\n  const onCityChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    setCity(event.target.value);\r\n  const onValidation = () => {\r\n    props.onConfigSubmitted(city);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        id=\"cityNameInput\"\r\n        name=\"city\"\r\n        onChange={onCityChangeHandler}\r\n        value={city}\r\n        placeholder=\"Saisissez de nom de la ville\"\r\n      />\r\n      <button\r\n        id=\"validateButton\"\r\n        className=\"btn btn-success\"\r\n        onClick={onValidation}\r\n        disabled={\r\n          !city ||\r\n          city?.length < 1\r\n        }\r\n      >\r\n        Valider\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import axios, { AxiosResponse } from 'axios';\r\n\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { updateWidgetData } from '../../services/WidgetService';\r\nimport {\r\n  adjustTimeWithOffset,\r\n  formatDateFromTimestamp,\r\n} from '../../utils/DateUtils';\r\nimport logger from '../../utils/LogUtils';\r\nimport Widget from '../Widget';\r\nimport EmptyWeatherWidget from './emptyWidget/EmptyWeatherWidget';\r\nimport Forecast from './forecast/Forecast';\r\nimport { ICity, IForecast, IWeather, IWeatherAPIResponse } from './IWeather';\r\nimport './WeatherWidget.scss';\r\nimport { format } from 'date-fns';\r\n\r\ninterface IProps {\r\n  id: number;\r\n  city?: string;\r\n  tabId: number;\r\n  onDeleteButtonClicked: (idWidget: number) => void;\r\n}\r\n\r\nenum ForecastMode {\r\n  TODAY,\r\n  TOMORROW,\r\n  WEEK\r\n}\r\n\r\nexport default function WeatherWidget(props: IProps): React.ReactElement {\r\n  const WEATHER_API = 'http://api.openweathermap.org/data/2.5/';\r\n  const WEATHER_ENDPOINT = 'weather';\r\n  const FORECAST_ENDPOINT = 'forecast';\r\n  const API_OPTIONS = '?units=metric&lang=fr&appid=';\r\n\r\n  const [cityToQuery, setCityToQuery] = useState(props.city);\r\n  const [weather, setWeather] = useState<IWeather>();\r\n  const [forecast, setForecast] = useState<IForecast[]>();\r\n  const [city, setCity] = useState<ICity>();\r\n  const [forecastMode, setForecastMode] = useState<ForecastMode>(ForecastMode.TODAY);\r\n\r\n  function fetchDataFromWeatherApi() {\r\n    if (cityToQuery) {\r\n      axios\r\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\r\n          params: {\r\n            url: `${WEATHER_API}${WEATHER_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\r\n          }\r\n        })\r\n        .then((result) => {\r\n          setWeather(result.data);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.error(error);\r\n        });\r\n      axios\r\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\r\n          params: {\r\n            url: `${WEATHER_API}${FORECAST_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\r\n          }\r\n        })\r\n        .then((result: AxiosResponse) => {\r\n          setForecast((result.data as IWeatherAPIResponse).list);\r\n          setCity((result.data as IWeatherAPIResponse).city);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDataFromWeatherApi();\r\n  }, [cityToQuery]);\r\n\r\n  function refreshWidget() {\r\n    setWeather(undefined);\r\n    setForecast(undefined);\r\n    setCity(undefined);\r\n    fetchDataFromWeatherApi();\r\n  }\r\n\r\n  function onConfigSubmitted(updatedCity: string) {\r\n    updateWidgetData(props.id, {\r\n      city: updatedCity\r\n    })\r\n      .then(() => {\r\n        setCityToQuery(updatedCity);\r\n        refreshWidget();\r\n      })\r\n      .catch((error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function filterForecastByMode(): IForecast[] {\r\n    if (city && forecast) {\r\n      switch (forecastMode) {\r\n        case ForecastMode.WEEK: {\r\n          return forecast.filter(\r\n            (forecastDay) => {\r\n              const forecastElement = formatDateFromTimestamp(\r\n                forecastDay.dt,\r\n                adjustTimeWithOffset(city.timezone)\r\n              )\r\n              return forecastElement.getHours() === 17\r\n            }\r\n          )\r\n        }\r\n        case ForecastMode.TOMORROW: {\r\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date(+new Date() + 86400000).getDay() && new Date(forecastDay.dt * 1000).getHours() >= 7);\r\n        }\r\n        case ForecastMode.TODAY:\r\n        default: {\r\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date().getDay() && new Date(forecastDay.dt * 1000).getHours() >= 7);\r\n        }\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  function selectTodayForecast(): void {\r\n    setForecastMode(ForecastMode.TODAY);\r\n  }\r\n\r\n  function selectTomorrowForecast(): void {\r\n    setForecastMode(ForecastMode.TOMORROW);\r\n  }\r\n\r\n  function selectWeekForecast(): void {\r\n    setForecastMode(ForecastMode.WEEK);\r\n  }\r\n\r\n  const widgetHeader = <div>La météo aujourd'hui à {city?.name}</div>;\r\n\r\n  const widgetBody = (\r\n    <div>\r\n      {city && weather && weather.weather && (\r\n        <div className=\"flexRow\">\r\n          <div>\r\n            <img\r\n              style={{ width: '80px' }}\r\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n              title={weather.weather[0].description}\r\n              alt={weather.weather[0].description}\r\n            />\r\n          </div>\r\n          <div className=\"flexRow\" style={{ placeItems: 'center' }}>\r\n            <div className=\"flexColumn mr5\">\r\n              <div>{weather.weather[0].description}</div>\r\n              <div>\r\n                <i className=\"fa fa-thermometer-three-quarters fa-md\" />{' '}\r\n                {weather.main.temp}°\r\n              </div>\r\n            </div>\r\n            <div className=\"flexColumn\">\r\n              <div className=\"spaceBetween\">\r\n                <div>\r\n                  <i className=\"fa fa-sun-o fa-md\" />{' '}\r\n                  {formatDateFromTimestamp(\r\n                    weather.sys.sunrise,\r\n                    adjustTimeWithOffset(weather.timezone)\r\n                  ).toLocaleTimeString('fr')}\r\n                </div>\r\n                <div>\r\n                  <i className=\"fa fa-moon-o fa-md\" />{' '}\r\n                  {formatDateFromTimestamp(\r\n                    weather.sys.sunset,\r\n                    adjustTimeWithOffset(weather.timezone)\r\n                  ).toLocaleTimeString('fr')}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <i className=\"fa fa-clock-o fa-md\" />{' '}\r\n                {formatDateFromTimestamp(\r\n                  weather.dt,\r\n                  adjustTimeWithOffset(weather.timezone)\r\n                ).toLocaleString('fr')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {city && forecast && (\r\n        <div>\r\n          <div className=\"flexRow\">\r\n            <span className=\"bold\">Prévisions</span>\r\n            <span style={{ alignContent: \"space-between\", display: \"flex\" }}>\r\n              <button id=\"toggleTodayForecast\" onClick={selectTodayForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TODAY ? 'success' : 'primary'} mr-5`}>Aujourd'hui</button>\r\n              <button id=\"toggleTomorrowForecast\" onClick={selectTomorrowForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TOMORROW ? 'success' : 'primary'}`}>Demain</button>\r\n              <button id=\"toggleWeekForecast\" onClick={selectWeekForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.WEEK ? 'success' : 'primary'}`}>Semaine</button>\r\n            </span>\r\n          </div>\r\n          <br />\r\n          <div style={{ height: '20vh', maxWidth: \"100%\" }}>\r\n            <Line\r\n              type=\"line\"\r\n              data={{\r\n                labels:\r\n                  filterForecastByMode().map((forecastDay) => {\r\n                    if (forecastMode === ForecastMode.TODAY || forecastMode === ForecastMode.TOMORROW) {\r\n                      return format(new Date(forecastDay.dt * 1000), 'HH');\r\n                    } else {\r\n                      return format(new Date(forecastDay.dt * 1000), 'EEEE dd MMM');\r\n                    }\r\n                  }\r\n\r\n                  ),\r\n                datasets: [\r\n                  {\r\n                    label: 'Température',\r\n                    borderColor: 'orange',\r\n                    data: filterForecastByMode()\r\n                      .map((forecastDay) => forecastDay.main.temp_max)\r\n                  },\r\n                  {\r\n                    label: 'Ressenti',\r\n                    borderColor: 'red',\r\n                    data: filterForecastByMode()\r\n                      .map((forecastDay) => forecastDay.main.feels_like)\r\n                  }\r\n                ]\r\n              }}\r\n              options={{ maintainAspectRatio: false }}\r\n            />\r\n          </div>\r\n          <div className=\"flexRow forecastRow\">\r\n            {city &&\r\n              forecast &&\r\n              filterForecastByMode()\r\n                .map((forecastDay) => {\r\n                  return (\r\n                    <div className=\"forecastContainer\" key={forecastDay.dt}>\r\n                      <Forecast {...forecastDay} city={city} />\r\n                    </div>\r\n                  );\r\n                })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        id={props.id}\r\n        tabId={props.tabId}\r\n        config={{ city: city }}\r\n        header={widgetHeader}\r\n        body={widgetBody}\r\n        editModeComponent={\r\n          <EmptyWeatherWidget\r\n            city={cityToQuery}\r\n            onConfigSubmitted={onConfigSubmitted}\r\n          />\r\n        }\r\n        refreshFunction={refreshWidget}\r\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  adjustTimeWithOffset,\r\n  formatDateFromTimestamp\r\n} from '../../../utils/DateUtils';\r\nimport { IForecast } from '../IWeather';\r\nimport './Forecast.scss';\r\n\r\nconst Forecast: React.FunctionComponent<IForecast> = (props) => {\r\n  return (\r\n    <div className=\"forecast\">\r\n      <div>\r\n        {formatDateFromTimestamp(\r\n          props.dt,\r\n          adjustTimeWithOffset(props.city.timezone)\r\n        ).toLocaleString('fr', {\r\n          weekday: 'short',\r\n          day: 'numeric',\r\n          hour: '2-digit'\r\n        })}\r\n      </div>\r\n      <div className=\"flexRow\">\r\n        <div>\r\n          <img\r\n            src={`https://openweathermap.org/img/wn/${props.weather[0]?.icon}@2x.png`}\r\n            className=\"smallImage\"\r\n            title={props.weather[0]?.description}\r\n            alt={props.weather[0]?.description}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <i\r\n              className=\"fa fa-thermometer-three-quarters fa-sm mr10\"\r\n              style={{ color: 'crimson' }}\r\n            />\r\n            {props.main.temp_max}°\r\n          </div>\r\n          <div>\r\n            <i\r\n              className=\"fa fa-thermometer-quarter fa-sm mr10\"\r\n              style={{ color: 'blue' }}\r\n            />\r\n            {props.main.temp_min}°\r\n          </div>\r\n          <div>\r\n            <i\r\n              className=\"fa fa-tint fa-sm mr10\"\r\n              style={{ color: 'lightblue' }}\r\n            />\r\n            {props.main.humidity}%\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import * as React from 'react';\r\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\r\nimport ITab from './ITab';\r\nimport './TabNavigation.scss';\r\n\r\ninterface IProps {\r\n  tabList: ITab[];\r\n}\r\n\r\nconst TabNavigation: React.FunctionComponent<IProps> = (props) => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <div className=\"tabContainer\">\r\n            {props.tabList.map((tab: ITab) => {\r\n              return (\r\n                <div key={tab.title}>\r\n                  <Link to={tab.path}>{tab.title}</Link>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div>\r\n            {props.tabList.map((tab: ITab) => {\r\n              return (\r\n                <div key={tab.title}>\r\n                  <Route\r\n                    path={tab.path}\r\n                    exact={tab.exact}\r\n                    component={tab.component}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabNavigation;\r\n","import * as React from 'react';\r\nimport ITab from '../../tab_facebook/ITab';\r\nimport TabNavigation from '../../tab_facebook/TabNavigation';\r\nimport logger from '../../utils/LogUtils';\r\nimport EventsTab from './events/EventsTab';\r\nimport { getProfileInfo } from './FacebookAPI';\r\nimport GroupsTab from './groups/GroupsTab';\r\nimport IFBUser from './IFBUser';\r\n\r\ndeclare const window: any;\r\ndeclare const FB: any;\r\n\r\ninterface IProps {\r\n  appId?: string;\r\n}\r\n\r\ninterface IState {\r\n  loginStatusResponse: any;\r\n  userData?: IFBUser;\r\n}\r\n\r\nconst tabs: ITab[] = [\r\n  {\r\n    title: 'Groupes',\r\n    component: GroupsTab,\r\n    path: '/groups/'\r\n  },\r\n  {\r\n    title: 'Events',\r\n    component: EventsTab,\r\n    path: '/events/'\r\n  }\r\n];\r\n\r\nexport default class FacebookWidget extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    window.fbAsyncInit = () => {\r\n      FB.init({\r\n        appId: props.appId,\r\n        xfbml: true,\r\n        version: 'v3.2'\r\n      });\r\n\r\n      // Broadcast an event when FB object is ready\r\n      const fbInitEvent = new Event('FBObjectReady');\r\n      document.dispatchEvent(fbInitEvent);\r\n    };\r\n    ((d, s, id) => {\r\n      let js: any = d.getElementsByTagName(s)[0];\r\n      const fjs: Element = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) {\r\n        return;\r\n      }\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\r\n      if (fjs && fjs.parentNode) {\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n      }\r\n    })(document, 'script', 'facebook-jssdk');\r\n    document.addEventListener('FBObjectReady', this.checkLoginStatus);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    document.removeEventListener('FBObjectReady', this.checkLoginStatus);\r\n  }\r\n\r\n  public checkLoginStatus = (): void => {\r\n    FB.getLoginStatus(this.facebookLoginHandler);\r\n  };\r\n\r\n  /**\r\n   * Check login status and call login api is user is not logged in\r\n   */\r\n  public facebookLogin = (): void => {\r\n    logger.debug('facebookLogin');\r\n    FB.getLoginStatus((response: any) => {\r\n      logger.debug(response);\r\n      this.setState({ loginStatusResponse: response });\r\n      if (response.status !== 'connected') {\r\n        FB.login(this.facebookLoginHandler, {\r\n          scope:\r\n            'user_birthday,user_hometown,user_likes,user_photos,user_friends,user_status,user_tagged_places,user_posts,user_gender,user_link,email,public_profile'\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  public facebookLogout = (): void => {\r\n    FB.logout((response: any) => {\r\n      logger.debug(response);\r\n      this.setState({ userData: undefined, loginStatusResponse: response });\r\n    });\r\n  };\r\n\r\n  public facebookLoginHandler = (response: any): void => {\r\n    logger.debug('facebookLoginHandler');\r\n    this.setState({ loginStatusResponse: response });\r\n    if (response.status === 'connected') {\r\n      logger.debug('Connected');\r\n      getProfileInfo()\r\n        .then((result: IFBUser) => {\r\n          logger.debug('Result');\r\n          logger.debug(result);\r\n          this.setState({ userData: result });\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.debug(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  public render(): React.ReactElement {\r\n    let element = null;\r\n    if (\r\n      this.state &&\r\n      this.state.loginStatusResponse &&\r\n      this.state.loginStatusResponse.status === 'connected' &&\r\n      this.state.userData\r\n    ) {\r\n      const userData: IFBUser = this.state.userData;\r\n      element = (\r\n        <div>\r\n          <div>\r\n            {userData.first_name} {userData.last_name}\r\n          </div>\r\n          <div onClick={this.facebookLogout}>Se déconnecter</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      element = (\r\n        <div\r\n          onClick={this.facebookLogin}\r\n          className=\"fb-login-button\"\r\n          data-max-rows=\"1\"\r\n          data-size=\"large\"\r\n          data-button-type=\"continue_with\"\r\n          data-use-continue-as=\"true\"\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {element}\r\n        {this.state && this.state.userData && (\r\n          <div>\r\n            <TabNavigation tabList={tabs} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport logger from '../../../utils/LogUtils';\r\nimport { getGroupsData } from '../FacebookAPI';\r\nimport IGroup from './IGroup';\r\n\r\nexport default function GroupsTab(): React.ReactElement {\r\n  useEffect(() => {\r\n    getGroupsData()\r\n      .then((result: unknown) => {\r\n        logger.debug(result as IGroup[]);\r\n      })\r\n      .catch((error: Error) => {\r\n        logger.debug(error);\r\n      });\r\n  }, []);\r\n\r\n  return <div>Liste des groupes auxquels vous appartenez</div>;\r\n}\r\n","import logger from '../../utils/LogUtils';\r\nimport IFBUser from './IFBUser';\r\n\r\ninterface IFB {\r\n  api: (url: string, data: unknown, response: (data:unknown) => unknown) => Promise<unknown>;\r\n}\r\n\r\ndeclare const FB: IFB;\r\n\r\nexport function getProfileInfo(): Promise<IFBUser> {\r\n  return new Promise((resolve, reject) => {\r\n    logger.debug('getProfile');\r\n    FB.api(\r\n      '/me',\r\n      {\r\n        fields: 'id,first_name,last_name,hometown,location,birthday,gender,link'\r\n      },\r\n      (userData: unknown) => {\r\n        if (userData) {\r\n          resolve(userData as IFBUser);\r\n        } else {\r\n          reject(Error('Promise rejected'));\r\n        }\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nexport function getGroupsData(): Promise<unknown> {\r\n  return new Promise((resolve, reject) => {\r\n    logger.debug('getGroupsData');\r\n    FB.api(\r\n      '/me/groups',\r\n      {\r\n        fields:\r\n          'administrator,bookmark_order,id,unread,cover,created_time,description,icon,email,link,name,purpose,venue,picture'\r\n      },\r\n      (groupsData) => {\r\n        if (groupsData) {\r\n          resolve(groupsData);\r\n        } else {\r\n          reject(Error('Promise rejected'));\r\n        }\r\n      }\r\n    );\r\n  });\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport logger from '../../../utils/LogUtils';\r\n\r\nexport default function EventsTab(): React.ReactElement {\r\n  useEffect(() => {\r\n    logger.debug('onComponentDidMount');\r\n  });\r\n\r\n  return <div>Liste des prochains évènements</div>;\r\n}\r\n","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  DragDropContext,\r\n  Draggable,\r\n  Droppable,\r\n  DroppableProvided,\r\n  DropResult\r\n} from 'react-beautiful-dnd';\r\nimport { useSelector } from 'react-redux';\r\nimport { TabPane } from 'reactstrap';\r\nimport { ITabState } from '../reducers/tabReducer';\r\nimport { WidgetTypes } from '../enums/WidgetsEnum';\r\nimport { deleteWidget, updateWidgetsOrder } from '../services/WidgetService';\r\nimport logger from '../utils/LogUtils';\r\nimport CalendarWidget from '../widgets/calendar/CalendarWidget';\r\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\r\nimport RSSWidget from '../widgets/rss/RSSWidget';\r\nimport StravaWidget from '../widgets/strava/StravaWidget';\r\nimport WeatherWidget from '../widgets/weather/WeatherWidget';\r\nimport FacebookWidget from 'src/widgets/facebook/FacebookWidget';\r\n\r\ninterface IProps {\r\n  tabId: number;\r\n  newWidget?: IWidgetConfig;\r\n}\r\n\r\nexport default function TabDash(props: IProps): React.ReactElement {\r\n  const [widgets, setWidgets] = useState([]);\r\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\r\n\r\n  function createWidget(widgetConfig: IWidgetConfig) {\r\n    switch (widgetConfig.type) {\r\n      case WidgetTypes.WEATHER: {\r\n        return (\r\n          <WeatherWidget\r\n            id={widgetConfig.id}\r\n            tabId={widgetConfig.tab.id}\r\n            {...widgetConfig.data}\r\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\r\n          />\r\n        );\r\n      }\r\n      case WidgetTypes.RSS: {\r\n        return (\r\n          <RSSWidget\r\n            id={widgetConfig.id}\r\n            tabId={widgetConfig.tab.id}\r\n            {...widgetConfig.data}\r\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\r\n          />\r\n        );\r\n      }\r\n      case WidgetTypes.CALENDAR: {\r\n        return (\r\n          <CalendarWidget\r\n            id={widgetConfig.id}\r\n            tabId={widgetConfig.tab.id}\r\n            {...widgetConfig.data}\r\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\r\n          />\r\n        );\r\n      }\r\n      case WidgetTypes.STRAVA: {\r\n        return (\r\n          <StravaWidget\r\n            id={widgetConfig.id}\r\n            tabId={widgetConfig.tab.id}\r\n            {...widgetConfig.data}\r\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\r\n          />\r\n        );\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteWidgetFromDashboard(id: number) {\r\n    deleteWidget(id)\r\n      .then((response) => {\r\n        if (response) {\r\n          setWidgets(\r\n            widgets.filter((widget: IWidgetConfig) => {\r\n              return widget.id !== id;\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((error: Error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!widgets.length && activeTab === props.tabId) {\r\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/widget/?tabId=${props.tabId}`)\r\n        .then((result) => {\r\n          return result.json();\r\n        })\r\n        .then((result) => {\r\n          setWidgets(result);\r\n        })\r\n        .catch((error: Error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }, [activeTab]);\r\n\r\n  useEffect(() => {\r\n    if (props.newWidget) {\r\n      setWidgets((widgets as IWidgetConfig[]).concat([props.newWidget]) as []);\r\n    }\r\n  }, [props.newWidget != null && props.newWidget.id]);\r\n\r\n  function reorder(\r\n    list: never[],\r\n    startIndex: number,\r\n    endIndex: number\r\n  ): unknown[] {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n  }\r\n\r\n  function onDragEnd(result: DropResult) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      widgets,\r\n      result.source.index,\r\n      result.destination.index\r\n    ).map((widget: unknown, index: number) => {\r\n      (widget as IWidgetConfig).widgetOrder = index;\r\n      return widget;\r\n    });\r\n    updateWidgetsOrder(items as never[]).then((response) =>\r\n      setWidgets(response.data as [])\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TabPane tabId={props.tabId}>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(providedDroppable: DroppableProvided) => (\r\n            <div\r\n              {...providedDroppable.droppableProps}\r\n              ref={providedDroppable.innerRef}\r\n            >\r\n              <div className=\"widgetList\">\r\n              <FacebookWidget />\r\n                {widgets &&\r\n                  widgets.length > 0 &&\r\n                  widgets.map((widgetConfig: IWidgetConfig, index) => {\r\n                    return (\r\n                      <Draggable\r\n                        key={widgetConfig.id}\r\n                        draggableId={widgetConfig.id.toString()}\r\n                        index={index}\r\n                      >\r\n                        {(providedDraggable) => (\r\n                          <div\r\n                            key={widgetConfig.id}\r\n                            className=\"widget\"\r\n                            ref={providedDraggable.innerRef}\r\n                            {...providedDraggable.draggableProps}\r\n                            {...providedDraggable.dragHandleProps}\r\n                          >\r\n                            {createWidget(widgetConfig)}\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    );\r\n                  })}\r\n                {providedDroppable.placeholder}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </TabPane>\r\n  );\r\n}\r\n","import 'font-awesome/fonts/fontawesome-webfont.svg';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  DragDropContext,\r\n  Draggable,\r\n  Droppable,\r\n  DroppableProvided,\r\n  DropResult\r\n} from 'react-beautiful-dnd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Nav,\r\n  TabContent\r\n} from 'reactstrap';\r\nimport './Dash.scss';\r\nimport { ITab } from './model/Tab';\r\nimport NavDash from './navigation/navDash/NavDash';\r\nimport Store from './pages/store/Store';\r\nimport { toggleSelectedTab } from './reducers/actions';\r\nimport { ITabState } from './reducers/tabReducer';\r\nimport { addTab, updateTabs } from './services/TabService';\r\nimport { addWidget } from './services/WidgetService';\r\nimport TabDash from './tab/TabDash';\r\nimport logger from './utils/LogUtils';\r\nimport { IWidgetConfig } from './widgets/IWidgetConfig';\r\n\r\nexport interface IMenu {\r\n  link: string;\r\n  icon: string;\r\n}\r\n\r\nexport default function Dash(): React.ReactElement {\r\n  const [tabs, setTabs] = useState<ITab[]>([]);\r\n  const [newWidget, setNewWidget] = useState<IWidgetConfig>();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\r\n  const dispatch = useDispatch();\r\n\r\n  function initDashboard() {\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/tab/`)\r\n      .then((result) => {\r\n        return result.json();\r\n      })\r\n      .then((result) => {\r\n        if (!result || result.length === 0) {\r\n          addNewTab();\r\n        }\r\n        setTabs(result);\r\n        dispatch(toggleSelectedTab(result[0].id));\r\n      })\r\n      .catch((error: Error) => {\r\n        logger.error(error.message);\r\n      });\r\n  }\r\n\r\n  function toggleTab(tab: number) {\r\n    if (activeTab !== tab) {\r\n      dispatch(toggleSelectedTab(tab));\r\n    }\r\n  }\r\n\r\n  function addNewTab() {\r\n    const newTabLabel = 'Nouvel onglet';\r\n    addTab(newTabLabel).then((response) => {\r\n      const insertedTab = response.data as ITab;\r\n      setTabs(tabs.concat(insertedTab));\r\n      dispatch(toggleSelectedTab(insertedTab.id));\r\n    });\r\n  }\r\n\r\n  function getNewWidget(tabId: number) {\r\n    if (newWidget && tabId === newWidget.tab.id) {\r\n      return newWidget;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  function toggleModal() {\r\n    setModal(!modal);\r\n  }\r\n\r\n  function onWidgetAdded(type: React.MouseEvent<HTMLButtonElement>) {\r\n    if (activeTab) {\r\n      addWidget(type.currentTarget.value, activeTab)\r\n        .then((response) => {\r\n          if (response) {\r\n            const widgetData = response.data as IWidgetConfig;\r\n            setNewWidget(widgetData);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          logger.error(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  function onTabDeleted(id: number) {\r\n    setTabs(tabs.filter((tab) => tab.id !== id));\r\n    if (activeTab === id) {\r\n      dispatch(toggleSelectedTab(tabs[0].id));\r\n    }\r\n  }\r\n\r\n  function reorder(\r\n    list: unknown[],\r\n    startIndex: number,\r\n    endIndex: number\r\n  ): unknown[] {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n  }\r\n\r\n  function onDragEnd(result: DropResult) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      tabs,\r\n      result.source.index,\r\n      result.destination.index\r\n    ).map((tab, index) => {\r\n      (tab as ITab).tabOrder = index;\r\n      return tab;\r\n    });\r\n    updateTabs(items as ITab[]).then((response) => {\r\n      setTabs(response.data as ITab[]);\r\n    });\r\n  }\r\n\r\n  useEffect(initDashboard, []);\r\n\r\n  return (\r\n    <div className=\"dash\">\r\n      <div className=\"flexRow\">\r\n        <div className=\"dashNavbar\">\r\n          <Nav vertical={true} navbar={true}>\r\n            <Button\r\n              id=\"openAddWidgetModal\"\r\n              className=\"dashNavbarLink\"\r\n              onClick={toggleModal}\r\n            >\r\n              <i className=\"fa fa-plus-circle fa-lg\" aria-hidden=\"true\" />\r\n            </Button>\r\n            <Modal isOpen={modal} toggle={toggleModal}>\r\n              <ModalHeader toggle={toggleModal}>Ajouter un widget</ModalHeader>\r\n              <ModalBody>\r\n                <Store onWidgetAdded={onWidgetAdded} />\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  id=\"closeAddWidgetModal\"\r\n                  color=\"primary\"\r\n                  onClick={toggleModal}\r\n                >\r\n                  Fermer\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Nav>\r\n        </div>\r\n\r\n        <div className=\"flexColumn tabsBar\">\r\n          <Nav tabs={true}>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n                {(providedDroppable: DroppableProvided) => (\r\n                  <div\r\n                    className=\"flexRow\"\r\n                    {...providedDroppable.droppableProps}\r\n                    ref={providedDroppable.innerRef}\r\n                  >\r\n                    {tabs.length > 0 &&\r\n                      tabs.map((tab: ITab, index: number) => {\r\n                        return (\r\n                          <Draggable\r\n                            key={tab.id}\r\n                            draggableId={tab.id.toString()}\r\n                            index={index}\r\n                          >\r\n                            {(providedDraggable) => (\r\n                              <div\r\n                                key={tab.id}\r\n                                ref={providedDraggable.innerRef}\r\n                                {...providedDraggable.draggableProps}\r\n                                {...providedDraggable.dragHandleProps}\r\n                                className={`tab ${\r\n                                  tab.id === activeTab ? 'selectedItem' : ''\r\n                                }`}\r\n                              >\r\n                                <NavDash\r\n                                  tab={tab}\r\n                                  onTabClicked={() => toggleTab(tab.id)}\r\n                                  onTabDeleted={onTabDeleted}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                    {providedDroppable.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            <Button onClick={addNewTab} id=\"addNewTabButton\" className=\"fa fa-plus-circle fa-lg\" />\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            {tabs.length > 0 &&\r\n              tabs.map((tab: ITab) => {\r\n                return (\r\n                  <TabDash\r\n                    key={tab.id}\r\n                    newWidget={getNewWidget(tab.id)}\r\n                    tabId={tab.id}\r\n                  />\r\n                );\r\n              })}\r\n          </TabContent>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { TOGGLE_TAB } from './actionTypes';\r\n\r\nexport interface ITabState {\r\n  activeTab: number;\r\n}\r\n\r\nconst initialState: ITabState = {\r\n  activeTab: -1\r\n};\r\n\r\nexport default function (\r\n  state = initialState,\r\n  action: { type: string; payload: { id: number } }\r\n): ITabState {\r\n  switch (action.type) {\r\n    case TOGGLE_TAB: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state,\r\n        activeTab: id\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './tabReducer';\r\n\r\nexport default createStore(rootReducer);\r\n","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Dash from './Dash';\r\nimport './index.scss';\r\nimport store from './reducers/store';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Dash />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}