{"version":3,"sources":["services/TabService.ts","navigation/navDash/NavDash.tsx","enums/WidgetsEnum.ts","pages/store/Store.tsx","reducers/actionTypes.ts","reducers/actions.ts","services/WidgetService.ts","enums/ModeEnum.ts","utils/LogUtils.ts","widgets/utils/DeleteWidget.tsx","widgets/Widget.tsx","widgets/calendar/emptyWidget/EmptyCalendarWidget.tsx","widgets/calendar/CalendarWidget.tsx","components/detailComponent/ComponentWithDetail.tsx","utils/DateUtils.ts","widgets/rss/article/RSSArticle.tsx","widgets/rss/emptyWidget/EmptyRSSWidget.tsx","widgets/rss/RSSWidget.tsx","hooks/localStorageHook.ts","widgets/strava/activity/StravaActivity.tsx","widgets/strava/emptyWidget/EmptyStravaWidget.tsx","widgets/strava/StravaWidget.tsx","widgets/weather/emptyWidget/EmptyWeatherWidget.tsx","widgets/weather/WeatherWidget.tsx","widgets/weather/forecast/Forecast.tsx","tab_facebook/TabNavigation.tsx","widgets/facebook/FacebookWidget.tsx","widgets/facebook/groups/GroupsTab.tsx","widgets/facebook/FacebookAPI.ts","widgets/facebook/events/EventsTab.tsx","tab/TabDash.tsx","Dash.tsx","reducers/tabReducer.ts","reducers/store.ts","registerServiceWorker.ts","index.tsx"],"names":["headers","NavDash","props","useState","tab","label","setLabel","isToggled","toggle","NavItem","className","NavLink","onClick","onTabClicked","onDoubleClick","id","tabOrder","axios","post","process","updateTab","then","onChange","event","target","value","Button","delete","onTabDeleted","WidgetTypes","Store","Object","keys","map","key","isNaN","parseInt","Card","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","onWidgetAdded","TOGGLE_TAB","toggleSelectedTab","type","payload","updateWidgetData","data","ModeEnum","logger","winston","format","combine","json","colorize","all","level","transports","Console","DeleteWidget","onCancelButtonClicked","onDeleteButtonClicked","idWidget","Widget","READ","mode","setMode","useEffect","config","header","EDIT","aria-hidden","refreshFunction","DELETE","body","editModeComponent","EmptyCalendarWidget","calendarUrls","setCalendarUrls","onCalendarUrlUpdated","url","index","toString","placeholder","calendarUrl","filter","concat","onConfigSubmitted","disabled","length","CalendarWidget","calendars","schedules","setSchedules","locales","fr","localizer","dateFnsLocalizer","parse","startOfWeek","getDay","refreshWidget","get","response","ical","scheds","eventKey","title","summary","start","end","allDay","getHours","catch","error","widgetHeader","widgetBody","culture","events","startAccessor","endAccessor","defaultView","popup","style","height","tabId","updatedCalendars","message","ComponentWithDetail","openCollapse","setOpenCollapse","componentRoot","Collapse","isOpen","componentDetail","formatDateFromTimestamp","timestamp","offset","Date","adjustTimeWithOffset","localeOffset","getTimezoneOffset","Math","abs","offsetMilliseconds","stripHtmlFromContent","content","div","document","createElement","innerHTML","textContent","innerText","RSSArticle","href","link","description","date","pubDate","toLocaleString","author","EmptyRSSWidget","setUrl","name","onUrlSubmitted","RSSWidget","feed","setFeed","setDecription","image","setImage","setLink","setTitle","rssParser","RSSParser","fetchDataFromRssFeed","parseURL","apiResult","result","items","formatTitleForArticle","articleTitle","toLocaleTimeString","hour","minute","article","guid","rssUrl","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","StravaActivity","start_date_local","round","distance","moving_time","total_elevation_gain","achievement_count","average_speed","max_speed","kudos_count","comment_count","EmptyStravaWidget","clientId","clientSecret","StravaWidget","REACT_APP_STRAVA_CLIENT_ID","setClientId","REACT_APP_STRAVA_CLIENT_SECRET","setClientSecret","activities","setActivities","athlete","setAthlete","token","setToken","refreshToken","setRefreshToken","tokenExpirationDate","setTokenExpirationDate","search","useLocation","Authorization","isAfter","reverse","refreshTokenFromApi","client_id","client_secret","refresh_token","grant_type","access_token","expires_at","getActivitiesByMonth","reduce","activitiesByMonth","activity","month","push","getStatsFromActivities","activitiesByMonthList","x","y","total","values","queryString","code","apiCode","getToken","isBefore","profile_medium","firstname","lastname","overflowY","slice","minHeight","maxHeight","flex","labels","datasets","backgroundColor","yAxisID","order","options","scales","position","updatedClientId","updatedClientSecret","EmptyWeatherWidget","city","setCity","ForecastMode","Forecast","dt","timezone","weekday","day","weather","icon","color","main","temp_max","temp_min","humidity","WeatherWidget","WEATHER_API","API_OPTIONS","cityToQuery","setCityToQuery","setWeather","forecast","setForecast","TODAY","forecastMode","setForecastMode","fetchDataFromWeatherApi","params","REACT_APP_OPENWEATHERMAP_KEY","list","undefined","filterForecastByMode","WEEK","forecastDay","TOMORROW","placeItems","temp","sys","sunrise","sunset","alignContent","display","maxWidth","borderColor","feels_like","maintainAspectRatio","updatedCity","TabNavigation","tabList","to","path","exact","component","tabs","Promise","resolve","reject","debug","FB","api","fields","groupsData","Error","FacebookWidget","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","setState","loginStatusResponse","status","login","scope","facebookLogout","logout","userData","fbAsyncInit","init","appId","xfbml","version","fbInitEvent","Event","dispatchEvent","d","s","js","getElementsByTagName","fjs","getElementById","parentNode","insertBefore","addEventListener","removeEventListener","this","element","state","first_name","last_name","data-max-rows","data-size","data-button-type","data-use-continue-as","React","TabDash","widgets","setWidgets","activeTab","useSelector","createWidget","widgetConfig","WEATHER","deleteWidgetFromDashboard","RSS","CALENDAR","STRAVA","deleteWidget","widget","fetch","newWidget","TabPane","onDragEnd","destination","widgetsData","widgetOrder","updateWidgetsOrder","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","providedDroppable","droppableProps","ref","innerRef","draggableId","providedDraggable","draggableProps","dragHandleProps","Dash","setTabs","setNewWidget","modal","setModal","dispatch","useDispatch","addNewTab","insertedTab","toggleModal","Nav","vertical","navbar","Modal","ModalHeader","ModalBody","addWidget","currentTarget","widgetData","ModalFooter","updateTabs","direction","toggleTab","TabContent","initialState","createStore","action","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","store","URL","origin","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.20295c9a.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { ITab } from '../model/Tab';\n\nconst headers = {\n  'Content-type': 'application/json'\n};\n\nexport function addTab(label: string): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/addTab`,\n    { label: label },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateTab(\n  id: number,\n  label: string,\n  tabOrder: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTab`,\n    { id: id, label: label, tabOrder: tabOrder },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateTabs(tabs: ITab[]): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTabs`,\n    tabs,\n    {\n      headers\n    }\n  );\n}\n\nexport function deleteTab(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/deleteTab/?id=${id}`,\n    {\n      headers\n    }\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Button, NavItem, NavLink } from 'reactstrap';\nimport { ITab } from '../../model/Tab';\nimport { deleteTab, updateTab } from '../../services/TabService';\ninterface IProps {\n  tab: ITab;\n  onTabClicked: () => void;\n  onTabDeleted: (id: number) => void;\n}\n\nexport default function NavDash(props: IProps): React.ReactElement {\n  const [label, setLabel] = useState(props.tab.label);\n  const [isToggled, toggle] = useState(false);\n\n  function deleteTabFromDash() {\n    deleteTab(props.tab.id).then(() => props.onTabDeleted(props.tab.id));\n  }\n\n  function saveTabName() {\n    updateTab(props.tab.id, label, props.tab.tabOrder).then(() => {\n      toggle(!isToggled);\n    });\n  }\n\n  function clickToggle() {\n    toggle(!isToggled);\n  }\n\n  return (\n    <NavItem className=\"clickableItem\" key={props.tab.id}>\n      <NavLink onClick={props.onTabClicked}>\n        {isToggled ? (\n          <div className=\"flexRow\">\n            <input\n              onDoubleClick={saveTabName}\n              onChange={(event) => setLabel(event.target.value)}\n              value={label}\n            />\n            <Button className=\"deleteTabButton\" onClick={deleteTabFromDash}>\n              <i className=\"fa fa-trash\" />\n            </Button>\n          </div>\n        ) : (\n          <span onDoubleClick={clickToggle}>{label}</span>\n        )}\n      </NavLink>\n    </NavItem>\n  );\n}\n","export enum WidgetTypes {\n  WEATHER = 1,\n  RSS = 2,\n  CALENDAR = 3,\n  STRAVA = 4\n}\n","import * as React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle\n} from 'reactstrap';\nimport { WidgetTypes } from '../../enums/WidgetsEnum';\n\ninterface IProps {\n  onWidgetAdded: (type: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Store: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <div className=\"flexRow\">\n      {Object.keys(WidgetTypes).map((key) => {\n        return (\n          isNaN(parseInt(key, 0)) && (\n            <Card key={key}>\n              <CardImg\n                top={true}\n                width=\"100%\"\n                src=\"/assets/318x180.svg\"\n                alt=\"Card image cap\"\n              />\n              <CardBody>\n                <CardTitle>{key}</CardTitle>\n                <CardSubtitle>Widget {key}</CardSubtitle>\n                <CardText>\n                  Cliquez ci-dessous pour ajouter un widget {key} au dashboard.\n                </CardText>\n                <Button\n                  id={key}\n                  onClick={props.onWidgetAdded}\n                  className=\"btn btn-success\"\n                  value={WidgetTypes[key]}\n                >\n                  Ajouter\n                </Button>\n              </CardBody>\n            </Card>\n          )\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Store;\n","export const TOGGLE_TAB = 'TOGGLE_TAB';\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport const toggleSelectedTab = (\n  id: number\n): { type: string; payload: { id: number } } => ({\n  type: TOGGLE_TAB,\n  payload: {\n    id\n  }\n});\n","import axios, { AxiosResponse } from 'axios';\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\nconst headers = {\n  'Content-type': 'application/json'\n};\n\nexport function addWidget(\n  type: string,\n  tabId: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/addWidget`,\n    { type: type, tab: { id: tabId } },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateWidgetData(\n  id: number,\n  data: unknown\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetData`,\n    { id: id, data: data },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateWidgetsOrder(\n  widgets: IWidgetConfig[]\n): Promise<AxiosResponse<unknown>> {\n  const widgetsData = widgets.map((widget) => {\n    return { id: widget.id, widgetOrder: widget.widgetOrder };\n  });\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetsOrder`,\n    widgetsData,\n    {\n      headers\n    }\n  );\n}\n\nexport function deleteWidget(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/deleteWidget/?id=${id}`,\n    {\n      headers\n    }\n  );\n}\n","export enum ModeEnum {\n  READ = 1,\n  EDIT = 2,\n  DELETE = 3\n}\n","import * as winston from 'winston';\n\nconst logger = winston.createLogger({\n  format: winston.format.combine(\n    winston.format.json(),\n    winston.format.colorize({ all: true })\n  ),\n  level: 'debug',\n  transports: [new winston.transports.Console()]\n});\n\nexport default logger;\n","import * as React from 'react';\n\ninterface IProps {\n  idWidget: number;\n  onCancelButtonClicked: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function DeleteWidget(props: IProps): React.ReactElement {\n  const confirmDeleteWidget = () => {\n    props.onDeleteButtonClicked(props.idWidget);\n  };\n\n  return (\n    <div>\n      <h4>Êtes-vous sûr de vouloir supprimer ce widget ?</h4>\n      <button\n        onClick={props.onCancelButtonClicked}\n        className=\"btn btn-primary cancelButton\"\n      >\n        Annuler\n      </button>\n      <button\n        onClick={confirmDeleteWidget}\n        className=\"btn btn-danger validateDeletionButton\"\n      >\n        Supprimer\n      </button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ModeEnum } from '../enums/ModeEnum';\nimport DeleteWidget from './utils/DeleteWidget';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  config: Record<string, unknown>;\n  header: React.ReactElement;\n  body: React.ReactElement;\n  editModeComponent: React.ReactElement<IProps>;\n  refreshFunction: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function Widget(props: IProps): React.ReactElement {\n  const [mode, setMode] = useState(ModeEnum.READ);\n\n  useEffect(() => {\n    setMode(ModeEnum.READ);\n  }, [props.config]);\n\n  function editWidget() {\n    setMode(ModeEnum.EDIT);\n  }\n\n  function cancelDeletion() {\n    setMode(ModeEnum.READ);\n  }\n\n  function deleteWidget() {\n    setMode(ModeEnum.DELETE);\n  }\n\n  return (\n    <div>\n      {mode === ModeEnum.READ ? (\n        <div>\n          <div className=\"header\">\n            <div className=\"leftGroup widgetHeader\">{props.header}</div>\n            <div className=\"rightGroup\">\n              <button\n                onClick={editWidget}\n                className=\"btn btn-default editButton\"\n              >\n                <i className=\"fa fa-cog\" aria-hidden=\"true\" />\n              </button>\n              <button\n                onClick={props.refreshFunction}\n                className=\"btn btn-default refreshButton\"\n              >\n                <i className=\"fa fa-refresh\" aria-hidden=\"true\" />\n              </button>\n              <button\n                onClick={deleteWidget}\n                className=\"btn btn-default deleteButton\"\n              >\n                <i className=\"fa fa-trash\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n          {props.body}\n        </div>\n      ) : mode === ModeEnum.DELETE ? (\n        <DeleteWidget\n          idWidget={props.id}\n          onDeleteButtonClicked={props.onDeleteButtonClicked}\n          onCancelButtonClicked={cancelDeletion}\n        />\n      ) : (\n        props.editModeComponent\n      )}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyCalendarWidget.scss';\n\ninterface IProps {\n  calendarUrls?: string[];\n  onConfigSubmitted: (calendarUrls: string[]) => void;\n}\n\nexport default function EmptyCalendarWidget(props: IProps): React.ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState<string[]>(\n    props.calendarUrls || []\n  );\n  const onValidation = () => {\n    props.onConfigSubmitted(calendarUrls);\n  };\n\n  const onCalendarUrlUpdated = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCalendarUrls(\n      calendarUrls.map((url: string, index: number) =>\n        index.toString() === event.target?.id ? event.target.value : url\n      )\n    );\n  };\n\n  const onCalendarUrlAdded = () => {\n    setCalendarUrls(calendarUrls.concat(''));\n  };\n\n  function removeCalendarUrl(calendarUrl: string) {\n    setCalendarUrls(calendarUrls.filter(url => url !== calendarUrl));\n  }\n\n  return (\n    <div>\n      <div>\n        {calendarUrls &&\n          calendarUrls.map((url, index) => {\n            return (\n              <div>\n                <input\n                  key={index}\n                  id={index.toString()}\n                  onChange={onCalendarUrlUpdated}\n                  value={url}\n                  placeholder=\"Saisissez une URL\"\n                />\n                <button className=\"btn btn-danger\" onClick={() => removeCalendarUrl(url)}>Supprimer</button>\n              </div>\n            );\n          })}\n        <button id=\"addCalendarUrl\" className=\"btn btn-primary\" onClick={onCalendarUrlAdded}>\n          Ajouter\n        </button>\n      </div>\n      <button\n        id=\"validateCalendarUrls\"\n        onClick={onValidation}\n        disabled={!calendarUrls || calendarUrls?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as ical from 'ical';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport './CalendarWidget.scss';\nimport EmptyCalendarWidget from './emptyWidget/EmptyCalendarWidget';\nimport format from 'date-fns/format'\nimport parse from 'date-fns/parse'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport { fr } from \"date-fns/locale\";\n\nimport { Calendar, dateFnsLocalizer, Event } from 'react-big-calendar';\n\nexport interface IProps {\n  id: number;\n  calendars?: string[];\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function CalendarWidget(props: IProps): React.ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState(props.calendars);\n  const [schedules, setSchedules] = useState<Event[]>([]);\n\n  const locales = {\n    'fr': fr,\n  }\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n  })\n\n  useEffect(() => {\n    refreshWidget();\n  }, [calendarUrls]);\n\n  function onConfigSubmitted(updatedCalendars: string[]) {\n    updateWidgetData(props.id, { calendars: updatedCalendars })\n      .then(() => {\n        // Reset des URL pour pouvoir re-trigger le mode READ du widget via le changement de config.\n        setCalendarUrls([]);\n        setCalendarUrls(updatedCalendars);\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshWidget() {\n    setSchedules([]);\n    calendarUrls?.map((calendarUrl: string, index: number) => {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${calendarUrl}`)\n        .then((response) => {\n          const data = ical.parseICS(response.data);\n          const scheds = index > 0 ? schedules : [];\n          setSchedules([\n            ...scheds,\n            ...Object.keys(data).map((eventKey) => {\n              const event = data[eventKey];\n              const newSchedule: Event = {\n                title: event.summary,\n                start: event.start,\n                end: event.end,\n                allDay: event.end?.getHours() === 0 && event.start?.getHours() === 0\n              };\n              return newSchedule;\n            })\n          ]);\n        })\n        .catch((error) => {\n          logger.error(error);\n        });\n    });\n  }\n\n  const widgetHeader = <div>Calendar</div>;\n\n  const widgetBody = (\n    <div>\n      <Calendar\n        localizer={localizer}\n        culture={\"fr\"}\n        events={schedules}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        defaultView=\"month\"\n        popup={true}\n        style={{ height: 500 }}\n      />\n\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ calendars: calendarUrls }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyCalendarWidget\n            calendarUrls={calendarUrls}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Card, CardBody, Collapse } from 'reactstrap';\nimport './ComponentWithDetail.scss';\n\ninterface IProps {\n  componentRoot: React.ReactNode | string;\n  componentDetail: React.ReactNode | string;\n  link?: string;\n}\n\nexport default function ComponentWithDetail(props: IProps): React.ReactElement {\n  const [openCollapse, setOpenCollapse] = useState(false);\n  const toggleCollapse = () => {\n    setOpenCollapse(!openCollapse);\n  };\n\n  return (\n    <div>\n      <div onClick={toggleCollapse} className=\"title\">\n        {props.componentRoot}\n      </div>\n      <div>\n        <Collapse isOpen={openCollapse}>\n          <Card>\n            <CardBody>{props.componentDetail}</CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import addDays from 'date-fns/addDays'\n\nexport function getDayFromNow(numberOfDays: number): Date {\n  return addDays(new Date(), numberOfDays);\n}\n\nexport function formatDateFromTimestamp(timestamp: number, offset = 0): Date {\n  return new Date(timestamp * 1000 + offset * 1000);\n}\n\nexport function formatDateFromUTC(date: string): string {\n  const parsedDate = new Date(date);\n  return parsedDate.toLocaleString('fr');\n}\n\nexport function formatDayFromUTC(date: string): string {\n  const parsedDate = new Date(date);\n  return (\n    parsedDate.getDate() +\n    '/' +\n    parsedDate.getMonth() +\n    '/' +\n    parsedDate.getFullYear()\n  );\n}\n\nexport function formatTimeFromDate(date: string): string {\n  const parsedDate = new Date(date);\n  return parsedDate.getHours() + ':' + parsedDate.getMinutes();\n}\n\nexport function adjustTimeWithOffset(offset: number): number {\n  const localeOffset = -(new Date().getTimezoneOffset() * 60);\n  if (Math.abs(offset) === Math.abs(localeOffset)) {\n    return 0;\n  }\n  const offsetMilliseconds = Math.abs(offset) + Math.abs(localeOffset);\n  return offset < localeOffset ? -offsetMilliseconds : offsetMilliseconds;\n}\n","import * as React from 'react';\nimport { formatDateFromUTC } from '../../../utils/DateUtils';\nimport { IArticle } from './IArticle';\nimport './RSSArticle.scss';\n\nfunction stripHtmlFromContent(content?: string) {\n  const div = document.createElement('div');\n  div.innerHTML = content || '';\n  return div.textContent || div.innerText || '';\n}\n\nconst RSSArticle: React.FunctionComponent<IArticle> = (props) => {\n  return (\n    <div className=\"article\">\n      <div>\n        <a href={props.link}>{props.title}</a>\n      </div>\n      <div>\n        {stripHtmlFromContent(props.content) ||\n          stripHtmlFromContent(props.description)}\n      </div>\n      <div>\n        Publié le {formatDateFromUTC(props.pubDate || '')}{' '}\n        {props.author && 'par ' + props.author}\n      </div>\n    </div>\n  );\n};\n\nexport default RSSArticle;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyRSSWidget.scss';\n\ninterface IProps {\n  url?: string;\n  onUrlSubmitted: (url: string) => void;\n}\n\nexport default function EmptyRSSWidget(props: IProps): React.ReactElement {\n  const [url, setUrl] = useState(props.url);\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setUrl(event.target.value);\n  const onValidation = () => {\n    if (url) {\n      props.onUrlSubmitted(url);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        id=\"rssFeedUrl\"\n        name=\"url\"\n        onChange={onChangeHandler}\n        value={url}\n        placeholder=\"Saisissez l'URL du flux RSS\"\n      />\n      <button\n        onClick={onValidation}\n        disabled={!url || url?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport RSSParser from 'rss-parser';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport { IArticle, ImageContent, IRSSHeader } from './article/IArticle';\nimport RSSArticle from './article/RSSArticle';\nimport EmptyRSSWidget from './emptyWidget/EmptyRSSWidget';\nimport './RSSWidget.scss';\n\ninterface IProps {\n  id: number;\n  url?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function RSSWidget(props: IProps): React.ReactElement {\n  const [feed, setFeed] = useState<IArticle[]>([]);\n  const [url, setUrl] = useState(props.url);\n  const [description, setDecription] = useState('');\n  const [image, setImage] = useState<ImageContent>();\n  const [link, setLink] = useState('');\n  const [title, setTitle] = useState('');\n  const rssParser = new RSSParser();\n\n  function fetchDataFromRssFeed() {\n    if (url) {\n      rssParser\n        .parseURL(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${url}`)\n        .then((apiResult: unknown) => {\n          const result = apiResult as IRSSHeader;\n          setDecription(result.description);\n          setFeed(result.items);\n          setImage(result.image);\n          setLink(result.link);\n          setTitle(result.title);\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromRssFeed();\n  }, [url]);\n\n  function refreshWidget() {\n    setFeed([]);\n    fetchDataFromRssFeed();\n  }\n\n  function onUrlSubmitted(rssUrl: string) {\n    updateWidgetData(props.id, { url: rssUrl })\n      .then(() => {\n        setUrl(rssUrl);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function formatTitleForArticle(pubDate: string, articleTitle?: string) {\n    const date = pubDate\n      ? new Date(pubDate).toLocaleTimeString('fr', {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      : '';\n    return `${date} ${articleTitle}`;\n  }\n\n  function getFeedFromRSS(data: IArticle[]) {\n    return data.map((article) => {\n      return (\n        <ComponentWithDetail\n          key={article.guid}\n          componentRoot={formatTitleForArticle(article.pubDate, article.title)}\n          componentDetail={<RSSArticle {...article} />}\n          link={article.link}\n        />\n      );\n    });\n  }\n\n  const widgetHeader = (\n    <div className=\"rssWidgetTitle\">\n      <a href={link} className=\"flexRow\">\n        {image && (\n          <div>\n            <img className=\"imgLogoRSS\" src={image?.url} alt=\"logo\" />\n          </div>\n        )}\n        <div className=\"rssTitle\">{title}</div>\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div>\n      {url && feed && (\n        <div>\n          <div className=\"rssDescription\">{description}</div>\n          <div className=\"feed\">{getFeedFromRSS(feed)}</div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ url: url }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyRSSWidget url={url} onUrlSubmitted={onUrlSubmitted} />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport logger from '../utils/LogUtils';\n\nexport function useLocalStorage(\n  key: string,\n  initialValue: unknown\n): [unknown, (value: unknown) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      logger.error(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: unknown) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      logger.error(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { IActivity } from '../IStrava';\n\nexport default function StravaActivity(props: IActivity): React.ReactElement {\n  return (\n    <div>\n      <div>\n        <a href={`https://www.strava.com/activities/${props.id}`}>\n          {format(new Date(props.start_date_local), 'dd MMM')}{' '}\n          {props.name}\n        </a>\n      </div>\n      <div>Distance : {Math.round(props.distance * 1000) / 1000000} kms</div>\n      <div>Durée : {props.moving_time / 60} mins</div>\n      <div>Denivelé : {props.total_elevation_gain}</div>\n      <div>Trophées : {props.achievement_count}</div>\n      <div>Vitesse moyenne : {props.average_speed}</div>\n      <div>Vitesse max : {props.max_speed}</div>\n      <div>Kudos : {props.kudos_count}</div>\n      <div>Commentaires : {props.comment_count}</div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\ninterface IProps {\n  clientId?: string;\n  clientSecret?: string;\n  onConfigSubmitted: (clientId: string, clientSecret: string) => void;\n}\n\nexport default function EmptyStravaWidget(props: IProps): React.ReactElement {\n\n  useEffect(() => {\n    props.onConfigSubmitted(props.clientId || '', props.clientSecret || '');\n  }, []);\n\n  return (\n    <div>\n\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as queryString from 'query-string';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { useLocalStorage } from '../../hooks/localStorageHook';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport StravaActivity from './activity/StravaActivity';\nimport EmptyStravaWidget from './emptyWidget/EmptyStravaWidget';\nimport { IActivity, IAthlete } from './IStrava';\nimport { format, isAfter, isBefore } from 'date-fns';\nimport ChartComponent from 'react-chartjs-2';\n\ninterface IProps {\n  id: number;\n  clientId?: string;\n  clientSecret?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function StravaWidget(props: IProps): React.ReactElement {\n  const [clientId, setClientId] = useState(process.env.REACT_APP_STRAVA_CLIENT_ID);\n  const [clientSecret, setClientSecret] = useState(process.env.REACT_APP_STRAVA_CLIENT_SECRET);\n  const [activities, setActivities] = useState([]);\n  const [athlete, setAthlete] = useState<IAthlete>();\n  const [token, setToken] = useLocalStorage('strava_token', null);\n  const [refreshToken, setRefreshToken] = useLocalStorage(\n    'strava_refresh_token',\n    null\n  );\n  const [tokenExpirationDate, setTokenExpirationDate] = useLocalStorage(\n    'strava_token_expires_at',\n    null\n  );\n  const { search } = useLocation();\n\n  const paginationActivities = 20;\n\n  useEffect(() => {\n    const values = queryString.parse(search);\n    if (values && values.code) {\n      const apiCode = values.code.toString();\n      getToken(apiCode);\n    }\n    if (\n      !token ||\n      !refreshToken ||\n      isBefore(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      refreshTokenFromApi();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      refreshWidget();\n    }\n  }, [token]);\n\n  function onConfigSubmitted(\n    updatedClientId: string,\n    updatedClientSecret: string\n  ) {\n    updateWidgetData(props.id, {\n      clientId: updatedClientId,\n      clientSecret: updatedClientSecret\n    })\n      .then(() => {\n        setClientId(clientId);\n        setClientSecret(clientSecret);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshWidget() {\n    setActivities([]);\n    getAthleteData();\n    getActivities();\n  }\n\n  function getToken(apiCode: string) {\n    axios\n      .post('https://www.strava.com/oauth/token', {\n        client_id: clientId,\n        client_secret: clientSecret,\n        code: apiCode,\n        grant_type: 'authorization_code'\n      })\n      .then((response) => {\n        setToken(response.data.access_token as string);\n        setRefreshToken(response.data.refresh_token);\n        setTokenExpirationDate(response.data.expires_at);\n        setAthlete(response.data.athlete);\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshTokenFromApi() {\n    if (refreshToken) {\n      axios\n        .post('https://www.strava.com/oauth/token', {\n          client_id: clientId,\n          client_secret: clientSecret,\n          refresh_token: refreshToken,\n          grant_type: 'refresh_token'\n        })\n        .then((response) => {\n          setToken(response.data.access_token);\n          setRefreshToken(response.data.refresh_token);\n          setTokenExpirationDate(response.data.expires_at);\n          setAthlete(response.data.athlete);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    } else {\n      logger.error('No refresh token');\n    }\n  }\n\n  function getAthleteData() {\n    if (token) {\n      axios\n        .get('https://www.strava.com/api/v3/athlete', {\n          headers: { Authorization: `Bearer ${token}` }\n        })\n        .then((response) => {\n          setAthlete(response.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function getActivities() {\n    if (\n      token &&\n      tokenExpirationDate &&\n      isAfter(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      axios\n        .get(\n          `https://www.strava.com/api/v3/athlete/activities?page=1&per_page=${paginationActivities}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          setActivities(response.data.reverse());\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    } else {\n      refreshTokenFromApi();\n    }\n  }\n\n  function getActivitiesByMonth() {\n    return activities.reduce((activitiesByMonth: IActivity[], activity: IActivity) => {\n      const month = format(new Date(activity.start_date_local), 'yyyy-MM');\n      if (!activitiesByMonth[month]) {\n        activitiesByMonth[month] = [];\n      }\n      activitiesByMonth[month].push(\n        Math.round(activity.distance * 1000) / 1000000\n      );\n      return activitiesByMonth;\n    }, []);\n  }\n\n  function getStatsFromActivities() {\n    const activitiesByMonthList = getActivitiesByMonth();\n    return Object.keys(activitiesByMonthList).map((month) => {\n      return {\n        x: new Date(month),\n        y: Math.round(\n          activitiesByMonthList[month].reduce(\n            (total: number, distance: number) => total + distance\n          )\n        )\n      };\n    });\n  }\n\n  const widgetHeader = (\n    <div>\n      <a href={`https://www.strava.com/athletes/${athlete?.id}`}>\n        <img src={athlete?.profile_medium} />\n        {athlete?.firstname} {athlete?.lastname}\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div className=\"flexColumn\">\n      { (token &&\n        refreshToken &&\n        (tokenExpirationDate &&\n          isAfter(new Date(tokenExpirationDate as number * 1000), new Date()))) && (\n          <div>\n            <div style={{ height: \"20vh\", overflowY: 'scroll' }}>\n              {activities.slice().reverse().map((activity: IActivity) => {\n                return (\n                  <ComponentWithDetail\n                    key={activity.id}\n                    componentRoot={`${format(\n                      new Date(activity.start_date_local),\n                      'dd MMM'\n                    )}  ${activity.name}  ${Math.round(activity.distance * 1000) / 1000000\n                      } kms`}\n                    componentDetail={<StravaActivity {...activity} />}\n                    link={`https://www.strava.com/activities/${activity.id}`}\n                  />\n                );\n              })}\n            </div>\n\n\n            <div style={{ minHeight: '25vh', maxHeight: \"80vh\", flex: '1 0 50%' }}>\n              <ChartComponent\n                type=\"bar\"\n                data={{\n                  labels: getStatsFromActivities().map(data => format(data.x, 'MMM yyyy')),\n                  datasets: [\n                    {\n                      label: 'Distance (kms)',\n                      backgroundColor: 'orange',\n                      data: getStatsFromActivities(),\n                      yAxisID: 'kms',\n                      order: 2\n                    },\n                    {\n                      label: 'Activités',\n                      type: \"line\",\n                      backgroundColor: 'darkgreen',\n                      data: Object.keys(getActivitiesByMonth()).map((month) => {\n                        return {\n                          x: new Date(month),\n                          y: getActivitiesByMonth()[month].length\n                        };\n                      }),\n                      yAxisID: 'activities',\n                      order: 1\n                    }\n                  ]\n                }}\n                options={{\n                  scales: {\n                    y: [{\n                      id: 'kms',\n                      type: 'linear',\n                      position: 'left'\n                    }, {\n                      id: 'activities',\n                      type: 'linear',\n                      position: 'right'\n                    }]\n                  }\n                }}\n              />\n            </div>\n\n          </div>\n        )}\n      {(!token ||\n        !refreshToken ||\n        (tokenExpirationDate &&\n          isBefore(new Date(tokenExpirationDate as number * 1000), new Date()))) && (\n          <a\n            href={`https://www.strava.com/oauth/authorize?client_id=${clientId}&redirect_uri=${process.env.REACT_APP_FRONTEND_URL}&response_type=code&scope=read,activity:read`}\n          >\n            <Button>Se connecter</Button>\n          </a>\n        )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ clientId: clientId }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyStravaWidget\n            clientId={clientId}\n            clientSecret={clientSecret}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyWeatherWidget.scss';\n\ninterface IProps {\n  city?: string;\n  onConfigSubmitted: (city: string) => void;\n}\n\nexport default function EmptyWeatherWidget(props: IProps): React.ReactElement {\n  const [city, setCity] = useState(props.city || '');\n  const onCityChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setCity(event.target.value);\n  const onValidation = () => {\n    props.onConfigSubmitted(city);\n  };\n\n  return (\n    <div>\n      <input\n        id=\"cityNameInput\"\n        name=\"city\"\n        onChange={onCityChangeHandler}\n        value={city}\n        placeholder=\"Saisissez de nom de la ville\"\n      />\n      <button\n        id=\"validateButton\"\n        className=\"btn btn-success\"\n        onClick={onValidation}\n        disabled={\n          !city ||\n          city?.length < 1\n        }\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp,\n} from '../../utils/DateUtils';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport EmptyWeatherWidget from './emptyWidget/EmptyWeatherWidget';\nimport Forecast from './forecast/Forecast';\nimport { ICity, IForecast, IWeather, IWeatherAPIResponse } from './IWeather';\nimport './WeatherWidget.scss';\nimport { format } from 'date-fns';\n\ninterface IProps {\n  id: number;\n  city?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nenum ForecastMode {\n  TODAY,\n  TOMORROW,\n  WEEK\n}\n\nexport default function WeatherWidget(props: IProps): React.ReactElement {\n  const WEATHER_API = 'http://api.openweathermap.org/data/2.5/';\n  const WEATHER_ENDPOINT = 'weather';\n  const FORECAST_ENDPOINT = 'forecast';\n  const API_OPTIONS = '?units=metric&lang=fr&appid=';\n\n  const [cityToQuery, setCityToQuery] = useState(props.city);\n  const [weather, setWeather] = useState<IWeather>();\n  const [forecast, setForecast] = useState<IForecast[]>();\n  const [city, setCity] = useState<ICity>();\n  const [forecastMode, setForecastMode] = useState<ForecastMode>(ForecastMode.TODAY);\n\n  function fetchDataFromWeatherApi() {\n    if (cityToQuery) {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          params: {\n            url: `${WEATHER_API}${WEATHER_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\n          }\n        })\n        .then((result) => {\n          setWeather(result.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error);\n        });\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          params: {\n            url: `${WEATHER_API}${FORECAST_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\n          }\n        })\n        .then((result: AxiosResponse) => {\n          setForecast((result.data as IWeatherAPIResponse).list);\n          setCity((result.data as IWeatherAPIResponse).city);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromWeatherApi();\n  }, [cityToQuery]);\n\n  function refreshWidget() {\n    setWeather(undefined);\n    setForecast(undefined);\n    setCity(undefined);\n    fetchDataFromWeatherApi();\n  }\n\n  function onConfigSubmitted(updatedCity: string) {\n    updateWidgetData(props.id, {\n      city: updatedCity\n    })\n      .then(() => {\n        setCityToQuery(updatedCity);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function filterForecastByMode(): IForecast[] {\n    if (city && forecast) {\n      switch (forecastMode) {\n        case ForecastMode.WEEK: {\n          return forecast.filter(\n            (forecastDay) => {\n              const forecastElement = formatDateFromTimestamp(\n                forecastDay.dt,\n                adjustTimeWithOffset(city.timezone)\n              )\n              return forecastElement.getHours() === 17\n            }\n          )\n        }\n        case ForecastMode.TOMORROW: {\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date(+new Date() + 86400000).getDay() && new Date(forecastDay.dt * 1000).getHours() >= 7);\n        }\n        case ForecastMode.TODAY:\n        default: {\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date().getDay() && new Date(forecastDay.dt * 1000).getHours() >= 7);\n        }\n      }\n    } else {\n      return [];\n    }\n  }\n\n  function selectTodayForecast(): void {\n    setForecastMode(ForecastMode.TODAY);\n  }\n\n  function selectTomorrowForecast(): void {\n    setForecastMode(ForecastMode.TOMORROW);\n  }\n\n  function selectWeekForecast(): void {\n    setForecastMode(ForecastMode.WEEK);\n  }\n\n  const widgetHeader = <div>La météo aujourd'hui à {city?.name}</div>;\n\n  const widgetBody = (\n    <div>\n      {city && weather && weather.weather && (\n        <div className=\"flexRow\">\n          <div>\n            <img\n              style={{ width: '80px' }}\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              title={weather.weather[0].description}\n              alt={weather.weather[0].description}\n            />\n          </div>\n          <div className=\"flexRow\" style={{ placeItems: 'center' }}>\n            <div className=\"flexColumn mr5\">\n              <div>{weather.weather[0].description}</div>\n              <div>\n                <i className=\"fa fa-thermometer-three-quarters fa-md\" />{' '}\n                {weather.main.temp}°\n              </div>\n            </div>\n            <div className=\"flexColumn\">\n              <div className=\"spaceBetween\">\n                <div>\n                  <i className=\"fa fa-sun-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunrise,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n                <div>\n                  <i className=\"fa fa-moon-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunset,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n              </div>\n              <div>\n                <i className=\"fa fa-clock-o fa-md\" />{' '}\n                {formatDateFromTimestamp(\n                  weather.dt,\n                  adjustTimeWithOffset(weather.timezone)\n                ).toLocaleString('fr')}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {city && forecast && (\n        <div>\n          <div className=\"flexRow\">\n            <span className=\"bold\">Prévisions</span>\n            <span style={{ alignContent: \"space-between\", display: \"flex\" }}>\n              <button id=\"toggleTodayForecast\" onClick={selectTodayForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TODAY ? 'success' : 'primary'} mr-5`}>Aujourd'hui</button>\n              <button id=\"toggleTomorrowForecast\" onClick={selectTomorrowForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TOMORROW ? 'success' : 'primary'}`}>Demain</button>\n              <button id=\"toggleWeekForecast\" onClick={selectWeekForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.WEEK ? 'success' : 'primary'}`}>Semaine</button>\n            </span>\n          </div>\n          <br />\n          <div style={{ height: '20vh', maxWidth: \"100%\" }}>\n            <Line\n              type=\"line\"\n              data={{\n                labels:\n                  filterForecastByMode().map((forecastDay) => {\n                    if (forecastMode === ForecastMode.TODAY || forecastMode === ForecastMode.TOMORROW) {\n                      return format(new Date(forecastDay.dt * 1000), 'HH');\n                    } else {\n                      return format(new Date(forecastDay.dt * 1000), 'EEEE dd MMM');\n                    }\n                  }\n\n                  ),\n                datasets: [\n                  {\n                    label: 'Température',\n                    borderColor: 'orange',\n                    data: filterForecastByMode()\n                      .map((forecastDay) => forecastDay.main.temp_max)\n                  },\n                  {\n                    label: 'Ressenti',\n                    borderColor: 'red',\n                    data: filterForecastByMode()\n                      .map((forecastDay) => forecastDay.main.feels_like)\n                  }\n                ]\n              }}\n              options={{ maintainAspectRatio: false }}\n            />\n          </div>\n          <div className=\"flexRow forecastRow\">\n            {city &&\n              forecast &&\n              filterForecastByMode()\n                .map((forecastDay) => {\n                  return (\n                    <div className=\"forecastContainer\" key={forecastDay.dt}>\n                      <Forecast {...forecastDay} city={city} />\n                    </div>\n                  );\n                })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ city: city }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyWeatherWidget\n            city={cityToQuery}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp\n} from '../../../utils/DateUtils';\nimport { IForecast } from '../IWeather';\nimport './Forecast.scss';\n\nconst Forecast: React.FunctionComponent<IForecast> = (props) => {\n  return (\n    <div className=\"forecast\">\n      <div>\n        {formatDateFromTimestamp(\n          props.dt,\n          adjustTimeWithOffset(props.city.timezone)\n        ).toLocaleString('fr', {\n          weekday: 'short',\n          day: 'numeric',\n          hour: '2-digit'\n        })}\n      </div>\n      <div className=\"flexRow\">\n        <div>\n          <img\n            src={`https://openweathermap.org/img/wn/${props.weather[0]?.icon}@2x.png`}\n            className=\"smallImage\"\n            title={props.weather[0]?.description}\n            alt={props.weather[0]?.description}\n          />\n        </div>\n        <div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-three-quarters fa-sm mr10\"\n              style={{ color: 'crimson' }}\n            />\n            {props.main.temp_max}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-quarter fa-sm mr10\"\n              style={{ color: 'blue' }}\n            />\n            {props.main.temp_min}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-tint fa-sm mr10\"\n              style={{ color: 'lightblue' }}\n            />\n            {props.main.humidity}%\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import * as React from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport ITab from './ITab';\nimport './TabNavigation.scss';\n\ninterface IProps {\n  tabList: ITab[];\n}\n\nconst TabNavigation: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <div>\n      <Router>\n        <div>\n          <div className=\"tabContainer\">\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Link to={tab.path}>{tab.title}</Link>\n                </div>\n              );\n            })}\n          </div>\n          <div>\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Route\n                    path={tab.path}\n                    exact={tab.exact}\n                    component={tab.component}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default TabNavigation;\n","import * as React from 'react';\nimport ITab from '../../tab_facebook/ITab';\nimport TabNavigation from '../../tab_facebook/TabNavigation';\nimport logger from '../../utils/LogUtils';\nimport EventsTab from './events/EventsTab';\nimport { getProfileInfo } from './FacebookAPI';\nimport GroupsTab from './groups/GroupsTab';\nimport IFBUser from './IFBUser';\n\ndeclare const window: any;\ndeclare const FB: any;\n\ninterface IProps {\n  appId?: string;\n}\n\ninterface IState {\n  loginStatusResponse: any;\n  userData?: IFBUser;\n}\n\nconst tabs: ITab[] = [\n  {\n    title: 'Groupes',\n    component: GroupsTab,\n    path: '/groups/'\n  },\n  {\n    title: 'Events',\n    component: EventsTab,\n    path: '/events/'\n  }\n];\n\nexport default class FacebookWidget extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    window.fbAsyncInit = () => {\n      FB.init({\n        appId: props.appId,\n        xfbml: true,\n        version: 'v3.2'\n      });\n\n      // Broadcast an event when FB object is ready\n      const fbInitEvent = new Event('FBObjectReady');\n      document.dispatchEvent(fbInitEvent);\n    };\n    ((d, s, id) => {\n      let js: any = d.getElementsByTagName(s)[0];\n      const fjs: Element = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\n      if (fjs && fjs.parentNode) {\n        fjs.parentNode.insertBefore(js, fjs);\n      }\n    })(document, 'script', 'facebook-jssdk');\n    document.addEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public componentWillUnmount(): void {\n    document.removeEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public checkLoginStatus = (): void => {\n    FB.getLoginStatus(this.facebookLoginHandler);\n  };\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  public facebookLogin = (): void => {\n    logger.debug('facebookLogin');\n    FB.getLoginStatus((response: any) => {\n      logger.debug(response);\n      this.setState({ loginStatusResponse: response });\n      if (response.status !== 'connected') {\n        FB.login(this.facebookLoginHandler, {\n          scope:\n            'user_birthday,user_hometown,user_likes,user_photos,user_friends,user_status,user_tagged_places,user_posts,user_gender,user_link,email,public_profile'\n        });\n      }\n    });\n  };\n\n  public facebookLogout = (): void => {\n    FB.logout((response: any) => {\n      logger.debug(response);\n      this.setState({ userData: undefined, loginStatusResponse: response });\n    });\n  };\n\n  public facebookLoginHandler = (response: any): void => {\n    logger.debug('facebookLoginHandler');\n    this.setState({ loginStatusResponse: response });\n    if (response.status === 'connected') {\n      logger.debug('Connected');\n      getProfileInfo()\n        .then((result: IFBUser) => {\n          logger.debug('Result');\n          logger.debug(result);\n          this.setState({ userData: result });\n        })\n        .catch((error: Error) => {\n          logger.debug(error);\n        });\n    }\n  };\n\n  public render(): React.ReactElement {\n    let element = null;\n    if (\n      this.state &&\n      this.state.loginStatusResponse &&\n      this.state.loginStatusResponse.status === 'connected' &&\n      this.state.userData\n    ) {\n      const userData: IFBUser = this.state.userData;\n      element = (\n        <div>\n          <div>\n            {userData.first_name} {userData.last_name}\n          </div>\n          <div onClick={this.facebookLogout}>Se déconnecter</div>\n        </div>\n      );\n    } else {\n      element = (\n        <div\n          onClick={this.facebookLogin}\n          className=\"fb-login-button\"\n          data-max-rows=\"1\"\n          data-size=\"large\"\n          data-button-type=\"continue_with\"\n          data-use-continue-as=\"true\"\n        />\n      );\n    }\n    return (\n      <div>\n        {element}\n        {this.state && this.state.userData && (\n          <div>\n            <TabNavigation tabList={tabs} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\nimport { getGroupsData } from '../FacebookAPI';\nimport IGroup from './IGroup';\n\nexport default function GroupsTab(): React.ReactElement {\n  useEffect(() => {\n    getGroupsData()\n      .then((result: unknown) => {\n        logger.debug(result as IGroup[]);\n      })\n      .catch((error: Error) => {\n        logger.debug(error);\n      });\n  }, []);\n\n  return <div>Liste des groupes auxquels vous appartenez</div>;\n}\n","import logger from '../../utils/LogUtils';\nimport IFBUser from './IFBUser';\n\ninterface IFB {\n  api: (url: string, data: unknown, response: (data:unknown) => unknown) => Promise<unknown>;\n}\n\ndeclare const FB: IFB;\n\nexport function getProfileInfo(): Promise<IFBUser> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getProfile');\n    FB.api(\n      '/me',\n      {\n        fields: 'id,first_name,last_name,hometown,location,birthday,gender,link'\n      },\n      (userData: unknown) => {\n        if (userData) {\n          resolve(userData as IFBUser);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n\nexport function getGroupsData(): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getGroupsData');\n    FB.api(\n      '/me/groups',\n      {\n        fields:\n          'administrator,bookmark_order,id,unread,cover,created_time,description,icon,email,link,name,purpose,venue,picture'\n      },\n      (groupsData) => {\n        if (groupsData) {\n          resolve(groupsData);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\n\nexport default function EventsTab(): React.ReactElement {\n  useEffect(() => {\n    logger.debug('onComponentDidMount');\n  });\n\n  return <div>Liste des prochains évènements</div>;\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DroppableProvided,\n  DropResult\n} from 'react-beautiful-dnd';\nimport { useSelector } from 'react-redux';\nimport { TabPane } from 'reactstrap';\nimport { ITabState } from '../reducers/tabReducer';\nimport { WidgetTypes } from '../enums/WidgetsEnum';\nimport { deleteWidget, updateWidgetsOrder } from '../services/WidgetService';\nimport logger from '../utils/LogUtils';\nimport CalendarWidget from '../widgets/calendar/CalendarWidget';\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\nimport RSSWidget from '../widgets/rss/RSSWidget';\nimport StravaWidget from '../widgets/strava/StravaWidget';\nimport WeatherWidget from '../widgets/weather/WeatherWidget';\nimport FacebookWidget from 'src/widgets/facebook/FacebookWidget';\n\ninterface IProps {\n  tabId: number;\n  newWidget?: IWidgetConfig;\n}\n\nexport default function TabDash(props: IProps): React.ReactElement {\n  const [widgets, setWidgets] = useState([]);\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n\n  function createWidget(widgetConfig: IWidgetConfig) {\n    switch (widgetConfig.type) {\n      case WidgetTypes.WEATHER: {\n        return (\n          <WeatherWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.RSS: {\n        return (\n          <RSSWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.CALENDAR: {\n        return (\n          <CalendarWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.STRAVA: {\n        return (\n          <StravaWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  function deleteWidgetFromDashboard(id: number) {\n    deleteWidget(id)\n      .then((response) => {\n        if (response) {\n          setWidgets(\n            widgets.filter((widget: IWidgetConfig) => {\n              return widget.id !== id;\n            })\n          );\n        }\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  useEffect(() => {\n    if (!widgets.length && activeTab === props.tabId) {\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/widget/?tabId=${props.tabId}`)\n        .then((result) => {\n          return result.json();\n        })\n        .then((result) => {\n          setWidgets(result);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    if (props.newWidget) {\n      setWidgets((widgets as IWidgetConfig[]).concat([props.newWidget]) as []);\n    }\n  }, [props.newWidget != null && props.newWidget.id]);\n\n  function reorder(\n    list: never[],\n    startIndex: number,\n    endIndex: number\n  ): unknown[] {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  function onDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      widgets,\n      result.source.index,\n      result.destination.index\n    ).map((widget: unknown, index: number) => {\n      (widget as IWidgetConfig).widgetOrder = index;\n      return widget;\n    });\n    updateWidgetsOrder(items as never[]).then((response) =>\n      setWidgets(response.data as [])\n    );\n  }\n\n  return (\n    <TabPane tabId={props.tabId}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(providedDroppable: DroppableProvided) => (\n            <div\n              {...providedDroppable.droppableProps}\n              ref={providedDroppable.innerRef}\n            >\n              <div className=\"widgetList\">\n              <FacebookWidget />\n                {widgets &&\n                  widgets.length > 0 &&\n                  widgets.map((widgetConfig: IWidgetConfig, index) => {\n                    return (\n                      <Draggable\n                        key={widgetConfig.id}\n                        draggableId={widgetConfig.id.toString()}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            key={widgetConfig.id}\n                            className=\"widget\"\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {createWidget(widgetConfig)}\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                {providedDroppable.placeholder}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </TabPane>\n  );\n}\n","import 'font-awesome/fonts/fontawesome-webfont.svg';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DroppableProvided,\n  DropResult\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Nav,\n  TabContent\n} from 'reactstrap';\nimport './Dash.scss';\nimport { ITab } from './model/Tab';\nimport NavDash from './navigation/navDash/NavDash';\nimport Store from './pages/store/Store';\nimport { toggleSelectedTab } from './reducers/actions';\nimport { ITabState } from './reducers/tabReducer';\nimport { addTab, updateTabs } from './services/TabService';\nimport { addWidget } from './services/WidgetService';\nimport TabDash from './tab/TabDash';\nimport logger from './utils/LogUtils';\nimport { IWidgetConfig } from './widgets/IWidgetConfig';\n\nexport interface IMenu {\n  link: string;\n  icon: string;\n}\n\nexport default function Dash(): React.ReactElement {\n  const [tabs, setTabs] = useState<ITab[]>([]);\n  const [newWidget, setNewWidget] = useState<IWidgetConfig>();\n  const [modal, setModal] = useState(false);\n\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n  const dispatch = useDispatch();\n\n  function initDashboard() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/tab/`)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        if (!result || result.length === 0) {\n          addNewTab();\n        }\n        setTabs(result);\n        dispatch(toggleSelectedTab(result[0].id));\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function toggleTab(tab: number) {\n    if (activeTab !== tab) {\n      dispatch(toggleSelectedTab(tab));\n    }\n  }\n\n  function addNewTab() {\n    const newTabLabel = 'Nouvel onglet';\n    addTab(newTabLabel).then((response) => {\n      const insertedTab = response.data as ITab;\n      setTabs(tabs.concat(insertedTab));\n      dispatch(toggleSelectedTab(insertedTab.id));\n    });\n  }\n\n  function getNewWidget(tabId: number) {\n    if (newWidget && tabId === newWidget.tab.id) {\n      return newWidget;\n    } else {\n      return undefined;\n    }\n  }\n\n  function toggleModal() {\n    setModal(!modal);\n  }\n\n  function onWidgetAdded(type: React.MouseEvent<HTMLButtonElement>) {\n    if (activeTab) {\n      addWidget(type.currentTarget.value, activeTab)\n        .then((response) => {\n          if (response) {\n            const widgetData = response.data as IWidgetConfig;\n            setNewWidget(widgetData);\n          }\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function onTabDeleted(id: number) {\n    setTabs(tabs.filter((tab) => tab.id !== id));\n    if (activeTab === id) {\n      dispatch(toggleSelectedTab(tabs[0].id));\n    }\n  }\n\n  function reorder(\n    list: unknown[],\n    startIndex: number,\n    endIndex: number\n  ): unknown[] {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  function onDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      tabs,\n      result.source.index,\n      result.destination.index\n    ).map((tab, index) => {\n      (tab as ITab).tabOrder = index;\n      return tab;\n    });\n    updateTabs(items as ITab[]).then((response) => {\n      setTabs(response.data as ITab[]);\n    });\n  }\n\n  useEffect(initDashboard, []);\n\n  return (\n    <div className=\"dash\">\n      <div className=\"flexRow\">\n        <div className=\"dashNavbar\">\n          <Nav vertical={true} navbar={true}>\n            <Button\n              id=\"openAddWidgetModal\"\n              className=\"dashNavbarLink\"\n              onClick={toggleModal}\n            >\n              <i className=\"fa fa-plus-circle fa-lg\" aria-hidden=\"true\" />\n            </Button>\n            <Modal isOpen={modal} toggle={toggleModal}>\n              <ModalHeader toggle={toggleModal}>Ajouter un widget</ModalHeader>\n              <ModalBody>\n                <Store onWidgetAdded={onWidgetAdded} />\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  id=\"closeAddWidgetModal\"\n                  color=\"primary\"\n                  onClick={toggleModal}\n                >\n                  Fermer\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </Nav>\n        </div>\n\n        <div className=\"flexColumn tabsBar\">\n          <Nav tabs={true}>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                {(providedDroppable: DroppableProvided) => (\n                  <div\n                    className=\"flexRow\"\n                    {...providedDroppable.droppableProps}\n                    ref={providedDroppable.innerRef}\n                  >\n                    {tabs.length > 0 &&\n                      tabs.map((tab: ITab, index: number) => {\n                        return (\n                          <Draggable\n                            key={tab.id}\n                            draggableId={tab.id.toString()}\n                            index={index}\n                          >\n                            {(providedDraggable) => (\n                              <div\n                                key={tab.id}\n                                ref={providedDraggable.innerRef}\n                                {...providedDraggable.draggableProps}\n                                {...providedDraggable.dragHandleProps}\n                                className={`tab ${\n                                  tab.id === activeTab ? 'selectedItem' : ''\n                                }`}\n                              >\n                                <NavDash\n                                  tab={tab}\n                                  onTabClicked={() => toggleTab(tab.id)}\n                                  onTabDeleted={onTabDeleted}\n                                />\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n            <Button onClick={addNewTab} id=\"addNewTabButton\" className=\"fa fa-plus-circle fa-lg\" />\n          </Nav>\n          <TabContent activeTab={activeTab}>\n            {tabs.length > 0 &&\n              tabs.map((tab: ITab) => {\n                return (\n                  <TabDash\n                    key={tab.id}\n                    newWidget={getNewWidget(tab.id)}\n                    tabId={tab.id}\n                  />\n                );\n              })}\n          </TabContent>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport interface ITabState {\n  activeTab: number;\n}\n\nconst initialState: ITabState = {\n  activeTab: -1\n};\n\nexport default function (\n  state = initialState,\n  action: { type: string; payload: { id: number } }\n): ITabState {\n  switch (action.type) {\n    case TOGGLE_TAB: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        activeTab: id\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport rootReducer from './tabReducer';\n\nexport default createStore(rootReducer);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dash from './Dash';\nimport './index.scss';\nimport store from './reducers/store';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Dash />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}