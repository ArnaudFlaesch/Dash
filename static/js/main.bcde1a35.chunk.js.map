{"version":3,"sources":["services/TabService.ts","navigation/navDash/NavDash.tsx","enums/WidgetsEnum.ts","pages/store/Store.tsx","reducers/actionTypes.ts","reducers/actions.ts","services/WidgetService.ts","enums/ModeEnum.ts","utils/LogUtils.ts","widgets/utils/DeleteWidget.tsx","widgets/Widget.tsx","widgets/calendar/emptyWidget/EmptyCalendarWidget.tsx","widgets/calendar/CalendarWidget.tsx","components/detailComponent/ComponentWithDetail.tsx","utils/DateUtils.ts","widgets/rss/article/RSSArticle.tsx","widgets/rss/emptyWidget/EmptyRSSWidget.tsx","widgets/rss/RSSWidget.tsx","hooks/localStorageHook.ts","widgets/strava/activity/StravaActivity.tsx","widgets/strava/emptyWidget/EmptyStravaWidget.tsx","widgets/strava/StravaWidget.tsx","widgets/weather/emptyWidget/EmptyWeatherWidget.tsx","widgets/weather/WeatherWidget.tsx","widgets/weather/forecast/Forecast.tsx","tab_facebook/TabNavigation.tsx","widgets/facebook/FacebookWidget.tsx","widgets/facebook/groups/GroupsTab.tsx","widgets/facebook/FacebookAPI.ts","widgets/facebook/events/EventsTab.tsx","tab/TabDash.tsx","Dash.tsx","reducers/tabReducer.ts","reducers/store.ts","registerServiceWorker.ts","index.tsx"],"names":["headers","NavDash","props","useState","tab","label","setLabel","isToggled","toggle","NavItem","className","NavLink","onClick","onTabClicked","onDoubleClick","id","tabOrder","axios","post","process","updateTab","then","onChange","event","target","value","Button","delete","onTabDeleted","WidgetTypes","Store","Object","keys","map","key","isNaN","parseInt","Card","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","onWidgetAdded","TOGGLE_TAB","toggleSelectedTab","type","payload","updateWidgetData","data","ModeEnum","logger","winston","format","combine","json","colorize","all","level","transports","Console","DeleteWidget","onCancelButtonClicked","onDeleteButtonClicked","idWidget","Widget","READ","mode","setMode","useEffect","config","header","EDIT","aria-hidden","refreshFunction","DELETE","body","editModeComponent","EmptyCalendarWidget","calendarUrls","setCalendarUrls","onCalendarUrlUpdated","url","index","toString","placeholder","concat","onConfigSubmitted","disabled","length","CalendarWidget","calendars","setCalendars","schedules","setSchedules","selectedView","setSelectedView","calendarRef","React","refreshWidget","calendarUrl","get","response","calendarId","newCalendar","name","substring","color","borderColor","cals","current","getInstance","getViewName","scrollToNow","ical","scheds","eventKey","prototype","hasOwnProperty","call","title","summary","start","toISOString","end","location","category","getHours","catch","error","widgetHeader","widgetBody","today","data-action","prev","next","getDateRangeStart","toDate","toLocaleDateString","getDateRangeEnd","ref","height","disableDblClick","disableClick","isReadOnly","month","startDayOfWeek","daynames","scheduleView","taskView","template","milestone","schedule","bgColor","milestoneTitle","allday","alldayTitle","useDetailPopup","useCreationPopup","view","defaultView","week","hourStart","showTimezoneCollapseButton","timezonesCollapsed","tabId","updatedCalendars","message","ComponentWithDetail","openCollapse","setOpenCollapse","componentRoot","Collapse","isOpen","componentDetail","formatDateFromTimestamp","timestamp","offset","Date","adjustTimeWithOffset","localeOffset","getTimezoneOffset","Math","abs","offsetMilliseconds","stripHtmlFromContent","content","div","document","createElement","innerHTML","textContent","innerText","RSSArticle","href","link","description","date","pubDate","toLocaleString","author","EmptyRSSWidget","setUrl","onUrlSubmitted","RSSWidget","feed","setFeed","setDecription","image","setImage","setLink","setTitle","rssParser","RSSParser","fetchDataFromRssFeed","parseURL","apiResult","result","items","formatTitleForArticle","articleTitle","toLocaleTimeString","hour","minute","article","guid","rssUrl","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","StravaActivity","start_date_local","round","distance","moving_time","total_elevation_gain","achievement_count","average_speed","max_speed","kudos_count","comment_count","EmptyStravaWidget","clientId","setClientId","clientSecret","setClientSecret","StravaWidget","activities","setActivities","athlete","setAthlete","token","setToken","refreshToken","setRefreshToken","tokenExpirationDate","setTokenExpirationDate","search","useLocation","Authorization","isAfter","reverse","refreshTokenFromApi","client_id","client_secret","refresh_token","grant_type","access_token","expires_at","getActivitiesByMonth","reduce","activitiesByMonth","activity","push","getStatsFromActivities","activitiesByMonthList","x","y","total","values","queryString","code","apiCode","getToken","isBefore","profile_medium","firstname","lastname","style","flex","overflowY","slice","minHeight","labels","datasets","backgroundColor","updatedClientId","updatedClientSecret","EmptyWeatherWidget","city","setCity","weather_api_key","weatherApiKey","setWeatherApiKey","ForecastMode","Forecast","dt","timezone","weekday","day","weather","icon","main","temp_max","temp_min","humidity","WeatherWidget","WEATHER_API","API_OPTIONS","cityToQuery","setCityToQuery","apiKey","setApiKey","setWeather","forecast","setForecast","TODAY","forecastMode","setForecastMode","fetchDataFromWeatherApi","params","list","undefined","filterForecastByMode","WEEK","filter","forecastDay","TOMORROW","getDay","placeItems","temp","sys","sunrise","sunset","alignContent","display","maxWidth","feels_like","options","maintainAspectRatio","updatedCity","TabNavigation","tabList","to","path","exact","component","tabs","Promise","resolve","reject","debug","FB","api","fields","groupsData","Error","FacebookWidget","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","setState","loginStatusResponse","status","login","scope","facebookLogout","logout","userData","fbAsyncInit","init","appId","xfbml","version","fbInitEvent","Event","dispatchEvent","d","s","js","getElementsByTagName","fjs","getElementById","parentNode","insertBefore","addEventListener","removeEventListener","this","element","state","first_name","last_name","data-max-rows","data-size","data-button-type","data-use-continue-as","TabDash","widgets","setWidgets","activeTab","useSelector","createWidget","widgetConfig","WEATHER","deleteWidgetFromDashboard","RSS","CALENDAR","STRAVA","deleteWidget","widget","fetch","newWidget","TabPane","onDragEnd","destination","widgetsData","widgetOrder","updateWidgetsOrder","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","providedDroppable","droppableProps","innerRef","draggableId","providedDraggable","draggableProps","dragHandleProps","Dash","setTabs","setNewWidget","modal","setModal","dispatch","useDispatch","addNewTab","insertedTab","toggleModal","Nav","vertical","navbar","Modal","ModalHeader","ModalBody","addWidget","currentTarget","widgetData","ModalFooter","updateTabs","direction","toggleTab","TabContent","initialState","createStore","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","store","URL","origin","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bcde1a35.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { ITab } from '../model/Tab';\n\nconst headers = {\n  'Content-type': 'application/json'\n};\n\nexport function addTab(label: string): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/addTab`,\n    { label: label },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateTab(\n  id: number,\n  label: string,\n  tabOrder: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTab`,\n    { id: id, label: label, tabOrder: tabOrder },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateTabs(tabs: ITab[]): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTabs`,\n    tabs,\n    {\n      headers\n    }\n  );\n}\n\nexport function deleteTab(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/deleteTab/?id=${id}`,\n    {\n      headers\n    }\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Button, NavItem, NavLink } from 'reactstrap';\nimport { ITab } from '../../model/Tab';\nimport { deleteTab, updateTab } from '../../services/TabService';\ninterface IProps {\n  tab: ITab;\n  onTabClicked: () => void;\n  onTabDeleted: (id: number) => void;\n}\n\nexport default function NavDash(props: IProps): React.ReactElement {\n  const [label, setLabel] = useState(props.tab.label);\n  const [isToggled, toggle] = useState(false);\n\n  function deleteTabFromDash() {\n    deleteTab(props.tab.id).then(() => props.onTabDeleted(props.tab.id));\n  }\n\n  function saveTabName() {\n    updateTab(props.tab.id, label, props.tab.tabOrder).then(() => {\n      toggle(!isToggled);\n    });\n  }\n\n  function clickToggle() {\n    toggle(!isToggled);\n  }\n\n  return (\n    <NavItem className=\"clickableItem\" key={props.tab.id}>\n      <NavLink onClick={props.onTabClicked}>\n        {isToggled ? (\n          <div className=\"flexRow\">\n            <input\n              onDoubleClick={saveTabName}\n              onChange={(event) => setLabel(event.target.value)}\n              value={label}\n            />\n            <Button className=\"deleteTabButton\" onClick={deleteTabFromDash}>\n              <i className=\"fa fa-trash\" />\n            </Button>\n          </div>\n        ) : (\n          <span onDoubleClick={clickToggle}>{label}</span>\n        )}\n      </NavLink>\n    </NavItem>\n  );\n}\n","export enum WidgetTypes {\n  WEATHER = 1,\n  RSS = 2,\n  CALENDAR = 3,\n  STRAVA = 4\n}\n","import * as React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle\n} from 'reactstrap';\nimport { WidgetTypes } from '../../enums/WidgetsEnum';\n\ninterface IProps {\n  onWidgetAdded: (type: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Store: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <div className=\"flexRow\">\n      {Object.keys(WidgetTypes).map((key) => {\n        return (\n          isNaN(parseInt(key, 0)) && (\n            <Card key={key}>\n              <CardImg\n                top={true}\n                width=\"100%\"\n                src=\"/assets/318x180.svg\"\n                alt=\"Card image cap\"\n              />\n              <CardBody>\n                <CardTitle>{key}</CardTitle>\n                <CardSubtitle>Widget {key}</CardSubtitle>\n                <CardText>\n                  Cliquez ci-dessous pour ajouter un widget {key} au dashboard.\n                </CardText>\n                <Button\n                  id={key}\n                  onClick={props.onWidgetAdded}\n                  className=\"btn btn-success\"\n                  value={WidgetTypes[key]}\n                >\n                  Ajouter\n                </Button>\n              </CardBody>\n            </Card>\n          )\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Store;\n","export const TOGGLE_TAB = 'TOGGLE_TAB';\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport const toggleSelectedTab = (\n  id: number\n): { type: string; payload: { id: number } } => ({\n  type: TOGGLE_TAB,\n  payload: {\n    id\n  }\n});\n","import axios, { AxiosResponse } from 'axios';\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\nconst headers = {\n  'Content-type': 'application/json'\n};\n\nexport function addWidget(\n  type: string,\n  tabId: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/addWidget`,\n    { type: type, tab: { id: tabId } },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateWidgetData(\n  id: number,\n  data: unknown\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetData`,\n    { id: id, data: data },\n    {\n      headers\n    }\n  );\n}\n\nexport function updateWidgetsOrder(\n  widgets: IWidgetConfig[]\n): Promise<AxiosResponse<unknown>> {\n  const widgetsData = widgets.map((widget) => {\n    return { id: widget.id, widgetOrder: widget.widgetOrder };\n  });\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetsOrder`,\n    widgetsData,\n    {\n      headers\n    }\n  );\n}\n\nexport function deleteWidget(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/deleteWidget/?id=${id}`,\n    {\n      headers\n    }\n  );\n}\n","export enum ModeEnum {\n  READ = 1,\n  EDIT = 2,\n  DELETE = 3\n}\n","import * as winston from 'winston';\n\nconst logger = winston.createLogger({\n  format: winston.format.combine(\n    winston.format.json(),\n    winston.format.colorize({ all: true })\n  ),\n  level: 'debug',\n  transports: [new winston.transports.Console()]\n});\n\nexport default logger;\n","import * as React from 'react';\n\ninterface IProps {\n  idWidget: number;\n  onCancelButtonClicked: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function DeleteWidget(props: IProps): React.ReactElement {\n  const confirmDeleteWidget = () => {\n    props.onDeleteButtonClicked(props.idWidget);\n  };\n\n  return (\n    <div>\n      <h4>Êtes-vous sûr de vouloir supprimer ce widget ?</h4>\n      <button\n        onClick={props.onCancelButtonClicked}\n        className=\"btn btn-primary cancelButton\"\n      >\n        Annuler\n      </button>\n      <button\n        onClick={confirmDeleteWidget}\n        className=\"btn btn-danger validateDeletionButton\"\n      >\n        Supprimer\n      </button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ModeEnum } from '../enums/ModeEnum';\nimport DeleteWidget from './utils/DeleteWidget';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  config: Record<string, unknown>;\n  header: React.ReactElement;\n  body: React.ReactElement;\n  editModeComponent: React.ReactElement<IProps>;\n  refreshFunction: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function Widget(props: IProps): React.ReactElement {\n  const [mode, setMode] = useState(ModeEnum.READ);\n\n  useEffect(() => {\n    setMode(ModeEnum.READ);\n  }, [props.config]);\n\n  function editWidget() {\n    setMode(ModeEnum.EDIT);\n  }\n\n  function cancelDeletion() {\n    setMode(ModeEnum.READ);\n  }\n\n  function deleteWidget() {\n    setMode(ModeEnum.DELETE);\n  }\n\n  return (\n    <div>\n      {mode === ModeEnum.READ ? (\n        <div>\n          <div className=\"header\">\n            <div className=\"leftGroup widgetHeader\">{props.header}</div>\n            <div className=\"rightGroup\">\n              <button\n                onClick={editWidget}\n                className=\"btn btn-default editButton\"\n              >\n                <i className=\"fa fa-cog\" aria-hidden=\"true\" />\n              </button>\n              <button\n                onClick={props.refreshFunction}\n                className=\"btn btn-default refreshButton\"\n              >\n                <i className=\"fa fa-refresh\" aria-hidden=\"true\" />\n              </button>\n              <button\n                onClick={deleteWidget}\n                className=\"btn btn-default deleteButton\"\n              >\n                <i className=\"fa fa-trash\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n          {props.body}\n        </div>\n      ) : mode === ModeEnum.DELETE ? (\n        <DeleteWidget\n          idWidget={props.id}\n          onDeleteButtonClicked={props.onDeleteButtonClicked}\n          onCancelButtonClicked={cancelDeletion}\n        />\n      ) : (\n        props.editModeComponent\n      )}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyCalendarWidget.scss';\n\ninterface IProps {\n  calendarUrls?: string[];\n  onConfigSubmitted: (calendarUrls: string[]) => void;\n}\n\nexport default function EmptyCalendarWidget(props: IProps): React.ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState<string[]>(\n    props.calendarUrls || []\n  );\n  const onValidation = () => {\n    props.onConfigSubmitted(calendarUrls);\n  };\n\n  const onCalendarUrlUpdated = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCalendarUrls(\n      calendarUrls.map((url: string, index: number) =>\n        index.toString() === event.target?.id ? event.target.value : url\n      )\n    );\n  };\n\n  const onCalendarUrlAdded = () => {\n    setCalendarUrls(calendarUrls.concat(''));\n  };\n\n  return (\n    <div>\n      <div>\n        {calendarUrls &&\n          calendarUrls.map((url, index) => {\n            return (\n              <input\n                key={index}\n                id={index.toString()}\n                onChange={onCalendarUrlUpdated}\n                value={url}\n                placeholder=\"Saisissez une URL\"\n              />\n            );\n          })}\n        <button className=\"btn btn-success\" onClick={onCalendarUrlAdded}>\n          Ajouter\n        </button>\n      </div>\n      <button\n        onClick={onValidation}\n        disabled={!calendarUrls || calendarUrls?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import Calendar from '@toast-ui/react-calendar';\nimport axios from 'axios';\nimport * as ical from 'ical';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ICalendarInfo, ISchedule } from 'tui-calendar';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport './CalendarWidget.scss';\nimport EmptyCalendarWidget from './emptyWidget/EmptyCalendarWidget';\n\nexport interface IProps {\n  id: number;\n  calendars?: string[];\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function CalendarWidget(props: IProps): React.ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState(props.calendars);\n  const [calendars, setCalendars] = useState<ICalendarInfo[]>([]);\n  const [schedules, setSchedules] = useState<ISchedule[]>([]);\n  const [selectedView, setSelectedView] = useState('week');\n  const calendarRef = React.useRef<Calendar>(null);\n\n  useEffect(() => {\n    refreshWidget();\n  }, [calendarUrls]);\n\n  useEffect(() => {\n    calendarRef.current?.getInstance().scrollToNow();\n  }, [calendars]);\n\n  function refreshWidget() {\n    setCalendars([]);\n    setSchedules([]);\n    calendarUrls?.map((calendarUrl: string, index: number) => {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${calendarUrl}`)\n        .then((response) => {\n          const calendarId = index.toString();\n          const newCalendar = {\n            id: calendarId,\n            name: calendarUrl.substring(0, 10),\n            color: 'blue',\n            borderColor: 'blue'\n          };\n          const cals = index > 0 ? calendars : [];\n          setCalendars([...cals, newCalendar]);\n          if (calendarRef.current?.getInstance().getViewName() !== 'month') {\n            calendarRef.current?.getInstance().scrollToNow();\n          }\n          const data = ical.parseICS(response.data);\n          const scheds = index > 0 ? schedules : [];\n          setSchedules([\n            ...scheds,\n            ...Object.keys(data).map((eventKey) => {\n              if (\n                Object.prototype.hasOwnProperty.call(data, 'eventKey') &&\n                data[eventKey].type === 'VEVENT'\n              ) {\n                const event = data[eventKey];\n                const newSchedule: ISchedule = {\n                  calendarId,\n                  title: event.summary,\n                  start: event.start?.toISOString(),\n                  end: event.end?.toISOString(),\n                  location: event.location,\n                  category:\n                    event.end?.getHours() === 0 && event.start?.getHours() === 0\n                      ? 'allday'\n                      : 'time'\n                };\n                return newSchedule;\n              } else {\n                return {};\n              }\n            })\n          ]);\n        })\n        .catch((error) => {\n          logger.error(error);\n        });\n    });\n  }\n\n  function onConfigSubmitted(updatedCalendars: string[]) {\n    updateWidgetData(props.id, { calendars: updatedCalendars })\n      .then(() => {\n        setCalendarUrls(updatedCalendars);\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function setCalendarOnToday() {\n    if (calendarRef && calendarRef.current) {\n      const calendarInstance = calendarRef.current.getInstance();\n      calendarInstance.today();\n    }\n  }\n\n  function previousRange() {\n    if (calendarRef && calendarRef.current) {\n      const calendarInstance = calendarRef.current.getInstance();\n      calendarInstance.prev();\n    }\n  }\n\n  function nextRange() {\n    if (calendarRef && calendarRef.current) {\n      const calendarInstance = calendarRef.current.getInstance();\n      calendarInstance.next();\n    }\n  }\n\n  function toggleViewDay() {\n    setSelectedView('day');\n  }\n\n  function toggleViewWeek() {\n    setSelectedView('week');\n  }\n\n  function toggleViewMonth() {\n    setSelectedView('month');\n  }\n\n  const widgetHeader = <div>Calendar</div>;\n\n  const widgetBody = (\n    <div>\n      <div id=\"calendarMenu\">\n        <span id=\"menu-navi\">\n          <button\n            onClick={setCalendarOnToday}\n            className=\"btn btn-default btn-sm move-today\"\n            data-action=\"move-today\"\n          >\n            Today\n          </button>\n          <button\n            onClick={previousRange}\n            className=\"btn btn-default btn-sm move-day\"\n            data-action=\"move-prev\"\n          >\n            <i\n              className=\"tui-full-calendar-icon tui-full-calendar-ic-arrow-left\"\n              data-action=\"move-prev\"\n            />\n          </button>\n          <button\n            onClick={nextRange}\n            className=\"btn btn-default btn-sm move-day\"\n            data-action=\"move-next\"\n          >\n            <i\n              className=\"tui-full-calendar-icon tui-full-calendar-ic-arrow-right\"\n              data-action=\"move-next\"\n            />\n          </button>\n        </span>\n        <span id=\"renderRange\" className=\"render-range\">\n          {calendarRef.current\n            ?.getInstance()\n            .getDateRangeStart()\n            .toDate()\n            .toLocaleDateString('fr')}\n          -{' '}\n          {calendarRef.current\n            ?.getInstance()\n            .getDateRangeEnd()\n            .toDate()\n            .toLocaleDateString('fr')}\n        </span>\n        <button\n          onClick={toggleViewDay}\n          className={`btn btn-${\n            selectedView === 'day' ? 'primary' : 'default'\n          }`}\n        >\n          Jour\n        </button>\n        <button\n          onClick={toggleViewWeek}\n          className={`btn btn-${\n            selectedView === 'week' ? 'primary' : 'default'\n          }`}\n        >\n          Semaine\n        </button>\n        <button\n          onClick={toggleViewMonth}\n          className={`btn btn-${\n            selectedView === 'month' ? 'primary' : 'default'\n          }`}\n        >\n          Mois\n        </button>\n      </div>\n\n      <Calendar\n        ref={calendarRef}\n        height=\"inherit\"\n        calendars={calendars}\n        disableDblClick={true}\n        disableClick={false}\n        isReadOnly={false}\n        month={{\n          startDayOfWeek: 1,\n          daynames: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam']\n        }}\n        schedules={schedules}\n        scheduleView={true}\n        taskView={true}\n        template={{\n          milestone(schedule) {\n            return `<span style=\"color:#fff;background-color: ${schedule.bgColor};\">${schedule.title}</span>`;\n          },\n          milestoneTitle() {\n            return 'Milestone';\n          },\n          allday(schedule) {\n            return `${schedule.title}<i class=\"fa fa-refresh\"></i>`;\n          },\n          alldayTitle() {\n            return 'All Day';\n          }\n        }}\n        useDetailPopup={true}\n        useCreationPopup={true}\n        view={selectedView}\n        defaultView=\"week\"\n        week={{\n          startDayOfWeek: 1,\n          hourStart: 8,\n          daynames: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n          showTimezoneCollapseButton: true,\n          timezonesCollapsed: true\n        }}\n      />\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ calendarUrls: calendarUrls }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyCalendarWidget\n            calendarUrls={calendarUrls}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Card, CardBody, Collapse } from 'reactstrap';\nimport './ComponentWithDetail.scss';\n\ninterface IProps {\n  componentRoot: React.ReactNode | string;\n  componentDetail: React.ReactNode | string;\n  link?: string;\n}\n\nexport default function ComponentWithDetail(props: IProps): React.ReactElement {\n  const [openCollapse, setOpenCollapse] = useState(false);\n  const toggleCollapse = () => {\n    setOpenCollapse(!openCollapse);\n  };\n\n  return (\n    <div>\n      <div onClick={toggleCollapse} className=\"title\">\n        {props.componentRoot}\n      </div>\n      <div>\n        <Collapse isOpen={openCollapse}>\n          <Card>\n            <CardBody>{props.componentDetail}</CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import addDays from 'date-fns/addDays'\n\nexport function getDayFromNow(numberOfDays: number): Date {\n  return addDays(new Date(), numberOfDays);\n}\n\nexport function formatDateFromTimestamp(timestamp: number, offset = 0): Date {\n  return new Date(timestamp * 1000 + offset * 1000);\n}\n\nexport function formatDateFromUTC(date: string): string {\n  const parsedDate = new Date(date);\n  return parsedDate.toLocaleString('fr');\n}\n\nexport function formatDayFromUTC(date: string): string {\n  const parsedDate = new Date(date);\n  return (\n    parsedDate.getDate() +\n    '/' +\n    parsedDate.getMonth() +\n    '/' +\n    parsedDate.getFullYear()\n  );\n}\n\nexport function formatTimeFromDate(date: string): string {\n  const parsedDate = new Date(date);\n  return parsedDate.getHours() + ':' + parsedDate.getMinutes();\n}\n\nexport function adjustTimeWithOffset(offset: number): number {\n  const localeOffset = -(new Date().getTimezoneOffset() * 60);\n  if (Math.abs(offset) === Math.abs(localeOffset)) {\n    return 0;\n  }\n  const offsetMilliseconds = Math.abs(offset) + Math.abs(localeOffset);\n  return offset < localeOffset ? -offsetMilliseconds : offsetMilliseconds;\n}\n","import * as React from 'react';\nimport { formatDateFromUTC } from '../../../utils/DateUtils';\nimport { IArticle } from './IArticle';\nimport './RSSArticle.scss';\n\nfunction stripHtmlFromContent(content?: string) {\n  const div = document.createElement('div');\n  div.innerHTML = content || '';\n  return div.textContent || div.innerText || '';\n}\n\nconst RSSArticle: React.FunctionComponent<IArticle> = (props) => {\n  return (\n    <div className=\"article\">\n      <div>\n        <a href={props.link}>{props.title}</a>\n      </div>\n      <div>\n        {stripHtmlFromContent(props.content) ||\n          stripHtmlFromContent(props.description)}\n      </div>\n      <div>\n        Publié le {formatDateFromUTC(props.pubDate || '')}{' '}\n        {props.author && 'par ' + props.author}\n      </div>\n    </div>\n  );\n};\n\nexport default RSSArticle;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyRSSWidget.scss';\n\ninterface IProps {\n  url?: string;\n  onUrlSubmitted: (url: string) => void;\n}\n\nexport default function EmptyRSSWidget(props: IProps): React.ReactElement {\n  const [url, setUrl] = useState(props.url);\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setUrl(event.target.value);\n  const onValidation = () => {\n    if (url) {\n      props.onUrlSubmitted(url);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        name=\"url\"\n        onChange={onChangeHandler}\n        value={url}\n        placeholder=\"Saisissez l'URL du flux RSS\"\n      />\n      <button\n        onClick={onValidation}\n        disabled={!url || url?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport RSSParser from 'rss-parser';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport { IArticle, ImageContent, IRSSHeader } from './article/IArticle';\nimport RSSArticle from './article/RSSArticle';\nimport EmptyRSSWidget from './emptyWidget/EmptyRSSWidget';\nimport './RSSWidget.scss';\n\ninterface IProps {\n  id: number;\n  url?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function RSSWidget(props: IProps): React.ReactElement {\n  const [feed, setFeed] = useState<IArticle[]>([]);\n  const [url, setUrl] = useState(props.url);\n  const [description, setDecription] = useState('');\n  const [image, setImage] = useState<ImageContent>();\n  const [link, setLink] = useState('');\n  const [title, setTitle] = useState('');\n  const rssParser = new RSSParser();\n\n  function fetchDataFromRssFeed() {\n    if (url) {\n      rssParser\n        .parseURL(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${url}`)\n        .then((apiResult: unknown) => {\n          const result = apiResult as IRSSHeader;\n          setDecription(result.description);\n          setFeed(result.items);\n          setImage(result.image);\n          setLink(result.link);\n          setTitle(result.title);\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromRssFeed();\n  }, [url]);\n\n  function refreshWidget() {\n    setFeed([]);\n    fetchDataFromRssFeed();\n  }\n\n  function onUrlSubmitted(rssUrl: string) {\n    updateWidgetData(props.id, { url: rssUrl })\n      .then(() => {\n        setUrl(rssUrl);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function formatTitleForArticle(pubDate: string, articleTitle?: string) {\n    const date = pubDate\n      ? new Date(pubDate).toLocaleTimeString('fr', {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      : '';\n    return `${date} ${articleTitle}`;\n  }\n\n  function getFeedFromRSS(data: IArticle[]) {\n    return data.map((article) => {\n      return (\n        <ComponentWithDetail\n          key={article.guid}\n          componentRoot={formatTitleForArticle(article.pubDate, article.title)}\n          componentDetail={<RSSArticle {...article} />}\n          link={article.link}\n        />\n      );\n    });\n  }\n\n  const widgetHeader = (\n    <div className=\"rssWidgetTitle\">\n      <a href={link} className=\"flexRow\">\n        {image && (\n          <div>\n            <img className=\"imgLogoRSS\" src={image?.url} alt=\"logo\" />\n          </div>\n        )}\n        <div className=\"rssTitle\">{title}</div>\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div>\n      {url && feed && (\n        <div>\n          <div className=\"rssDescription\">{description}</div>\n          <div className=\"feed\">{getFeedFromRSS(feed)}</div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ url: url }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyRSSWidget url={url} onUrlSubmitted={onUrlSubmitted} />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport logger from '../utils/LogUtils';\n\nexport function useLocalStorage(\n  key: string,\n  initialValue: unknown\n): [unknown, (value: unknown) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      logger.error(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: unknown) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      logger.error(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { IActivity } from '../IStrava';\n\nexport default function StravaActivity(props: IActivity): React.ReactElement {\n  return (\n    <div>\n      <div>\n        <a href={`https://www.strava.com/activities/${props.id}`}>\n          {format(new Date(props.start_date_local), 'dd MMM')}{' '}\n          {props.name}\n        </a>\n      </div>\n      <div>Distance : {Math.round(props.distance * 1000) / 1000000} kms</div>\n      <div>Durée : {props.moving_time / 60} mins</div>\n      <div>Denivelé : {props.total_elevation_gain}</div>\n      <div>Trophées : {props.achievement_count}</div>\n      <div>Vitesse moyenne : {props.average_speed}</div>\n      <div>Vitesse max : {props.max_speed}</div>\n      <div>Kudos : {props.kudos_count}</div>\n      <div>Commentaires : {props.comment_count}</div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\ninterface IProps {\n  clientId?: string;\n  clientSecret?: string;\n  onConfigSubmitted: (clientId: string, clientSecret: string) => void;\n}\n\nexport default function EmptyStravaWidget(props: IProps): React.ReactElement {\n  const [clientId, setClientId] = useState(props.clientId || '');\n  const [clientSecret, setClientSecret] = useState(props.clientSecret || '');\n  const onClientIdChangeHandler = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => setClientId(event.target.value);\n  const onClientSecretChangeHandler = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => setClientSecret(event.target.value);\n\n  const onValidation = () => {\n    props.onConfigSubmitted(clientId, clientSecret);\n  };\n\n  return (\n    <div>\n      <input\n        name=\"clientId\"\n        onChange={onClientIdChangeHandler}\n        value={clientId}\n        placeholder=\"Saisissez le clientId\"\n      />\n      <input\n        name=\"clientSecret\"\n        onChange={onClientSecretChangeHandler}\n        value={clientSecret}\n        placeholder=\"Saisissez le clientSecret\"\n      />\n\n      <button\n        onClick={onValidation}\n        disabled={\n          !clientId ||\n          clientId?.length < 1 ||\n          !clientSecret ||\n          clientSecret?.length < 1\n        }\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as queryString from 'query-string';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { useLocalStorage } from '../../hooks/localStorageHook';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport StravaActivity from './activity/StravaActivity';\nimport EmptyStravaWidget from './emptyWidget/EmptyStravaWidget';\nimport { IActivity, IAthlete } from './IStrava';\nimport { format, isAfter, isBefore } from 'date-fns';\nimport { Bar } from 'react-chartjs-2';\n\ninterface IProps {\n  id: number;\n  clientId?: string;\n  clientSecret?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function StravaWidget(props: IProps): React.ReactElement {\n  const [clientId, setClientId] = useState(props.clientId);\n  const [clientSecret, setClientSecret] = useState(props.clientSecret);\n  const [activities, setActivities] = useState([]);\n  const [athlete, setAthlete] = useState<IAthlete>();\n  const [token, setToken] = useLocalStorage('strava_token', null);\n  const [refreshToken, setRefreshToken] = useLocalStorage(\n    'strava_refresh_token',\n    null\n  );\n  const [tokenExpirationDate, setTokenExpirationDate] = useLocalStorage(\n    'strava_token_expires_at',\n    null\n  );\n  const { search } = useLocation();\n\n  const paginationActivities = 20;\n\n  useEffect(() => {\n    const values = queryString.parse(search);\n    if (values && values.code) {\n      const apiCode = values.code.toString();\n      getToken(apiCode);\n    }\n    if (\n      !token ||\n      !refreshToken ||\n      isBefore(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      refreshTokenFromApi();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      refreshWidget();\n    }\n  }, [token]);\n\n  function onConfigSubmitted(\n    updatedClientId: string,\n    updatedClientSecret: string\n  ) {\n    updateWidgetData(props.id, {\n      clientId: updatedClientId,\n      clientSecret: updatedClientSecret\n    })\n      .then(() => {\n        setClientId(clientId);\n        setClientSecret(clientSecret);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshWidget() {\n    setActivities([]);\n    getAthleteData();\n    getActivities();\n  }\n\n  function getToken(apiCode: string) {\n    axios\n      .post('https://www.strava.com/oauth/token', {\n        client_id: clientId,\n        client_secret: clientSecret,\n        code: apiCode,\n        grant_type: 'authorization_code'\n      })\n      .then((response) => {\n        setToken(response.data.access_token as string);\n        setRefreshToken(response.data.refresh_token);\n        setTokenExpirationDate(response.data.expires_at);\n        setAthlete(response.data.athlete);\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshTokenFromApi() {\n    if (refreshToken) {\n      axios\n        .post('https://www.strava.com/oauth/token', {\n          client_id: clientId,\n          client_secret: clientSecret,\n          refresh_token: refreshToken,\n          grant_type: 'refresh_token'\n        })\n        .then((response) => {\n          setToken(response.data.access_token);\n          setRefreshToken(response.data.refresh_token);\n          setTokenExpirationDate(response.data.expires_at);\n          setAthlete(response.data.athlete);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    } else {\n      logger.error('No refresh token');\n    }\n  }\n\n  function getAthleteData() {\n    if (token) {\n      axios\n        .get('https://www.strava.com/api/v3/athlete', {\n          headers: { Authorization: `Bearer ${token}` }\n        })\n        .then((response) => {\n          setAthlete(response.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function getActivities() {\n    if (\n      token &&\n      tokenExpirationDate &&\n      isAfter(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      axios\n        .get(\n          `https://www.strava.com/api/v3/athlete/activities?page=1&per_page=${paginationActivities}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          setActivities(response.data.reverse());\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    } else {\n      refreshTokenFromApi();\n    }\n  }\n\n  function getActivitiesByMonth() {\n    return activities.reduce((activitiesByMonth: IActivity[], activity: IActivity) => {\n      const month = format(new Date(activity.start_date_local), 'yyyy-MM');\n      if (!activitiesByMonth[month]) {\n        activitiesByMonth[month] = [];\n      }\n      activitiesByMonth[month].push(\n        Math.round(activity.distance * 1000) / 1000000\n      );\n      return activitiesByMonth;\n    }, []);\n  }\n\n  function getStatsFromActivities() {\n    const activitiesByMonthList = getActivitiesByMonth();\n    return Object.keys(activitiesByMonthList).map((month) => {\n      return {\n        x: new Date(month),\n        y: Math.round(\n          activitiesByMonthList[month].reduce(\n            (total: number, distance: number) => total + distance\n          )\n        )\n      };\n    });\n  }\n\n  const widgetHeader = (\n    <div>\n      <a href={`https://www.strava.com/athletes/${athlete?.id}`}>\n        <img src={athlete?.profile_medium} />\n        {athlete?.firstname} {athlete?.lastname}\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div className=\"flexColumn\">\n      <div style={{ flex: '1 0 50%', overflowY: 'scroll' }}>\n        {activities.slice().reverse().map((activity: IActivity) => {\n          return (\n            <ComponentWithDetail\n              key={activity.id}\n              componentRoot={`${format(\n                new Date(activity.start_date_local),\n                'dd MMM'\n              )}  ${activity.name}  ${Math.round(activity.distance * 1000) / 1000000\n                } kms`}\n              componentDetail={<StravaActivity {...activity} />}\n              link={`https://www.strava.com/activities/${activity.id}`}\n            />\n          );\n        })}\n      </div>\n\n      <div style={{ minHeight: '25vh', flex: '1 0 50%' }}>\n        <Bar\n          type=\"bar\"\n          data={{\n            labels: getStatsFromActivities().map(data => format(data.x, 'MMM yyyy')),\n            datasets: [\n              {\n                label: 'Activités',\n                backgroundColor: 'darkgreen',\n                data: Object.keys(getActivitiesByMonth()).map((month) => {\n                  return {\n                    x: new Date(month),\n                    y: getActivitiesByMonth()[month].length\n                  };\n                })\n              },\n              {\n                label: 'Course',\n                backgroundColor: 'orange',\n                data: getStatsFromActivities()\n              }\n            ]\n          }}\n\n        />\n      </div>\n\n      {(!token ||\n        !refreshToken ||\n        (tokenExpirationDate &&\n          isBefore(new Date(tokenExpirationDate as number), new Date()))) && (\n          <a\n            href={`https://www.strava.com/oauth/authorize?client_id=${clientId}&redirect_uri=${process.env.REACT_APP_FRONTEND_URL}&response_type=code&scope=read,activity:read`}\n          >\n            <Button>Se connecter</Button>\n          </a>\n        )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ clientId: clientId }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyStravaWidget\n            clientId={clientId}\n            clientSecret={clientSecret}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './EmptyWeatherWidget.scss';\n\ninterface IProps {\n  weather_api_key?: string;\n  city?: string;\n  onConfigSubmitted: (weatherApiKey: string, city: string) => void;\n}\n\nexport default function EmptyWeatherWidget(props: IProps): React.ReactElement {\n  const [city, setCity] = useState(props.city || '');\n  const [weatherApiKey, setWeatherApiKey] = useState(\n    props.weather_api_key || ''\n  );\n  const onWeatherApiKeyChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value) {\n      setWeatherApiKey(event.target.value);\n    }\n  };\n  const onCityChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setCity(event.target.value);\n  const onValidation = () => {\n    props.onConfigSubmitted(weatherApiKey, city);\n  };\n\n  return (\n    <div>\n      <input\n        name=\"weatherApiKey\"\n        onChange={onWeatherApiKeyChangeHandler}\n        value={weatherApiKey}\n        placeholder=\"Saisissez la clé d'API\"\n      />\n      <input\n        name=\"city\"\n        onChange={onCityChangeHandler}\n        value={city}\n        placeholder=\"Saisissez de nom de la ville\"\n      />\n      <button\n        className=\"validateButton btn btn-success\"\n        onClick={onValidation}\n        disabled={\n          !city ||\n          !weatherApiKey ||\n          city?.length < 1 ||\n          weatherApiKey?.length < 1\n        }\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { updateWidgetData } from '../../services/WidgetService';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp,\n} from '../../utils/DateUtils';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport EmptyWeatherWidget from './emptyWidget/EmptyWeatherWidget';\nimport Forecast from './forecast/Forecast';\nimport { ICity, IForecast, IWeather, IWeatherAPIResponse } from './IWeather';\nimport './WeatherWidget.scss';\nimport { format } from 'date-fns';\n\ninterface IProps {\n  id: number;\n  weather_api_key?: string;\n  city?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nenum ForecastMode {\n  TODAY,\n  TOMORROW,\n  WEEK\n}\n\nexport default function WeatherWidget(props: IProps): React.ReactElement {\n  const WEATHER_API = 'http://api.openweathermap.org/data/2.5/';\n  const WEATHER_ENDPOINT = 'weather';\n  const FORECAST_ENDPOINT = 'forecast';\n  const API_OPTIONS = '?units=metric&lang=fr&appid=';\n\n  const [cityToQuery, setCityToQuery] = useState(props.city);\n  const [apiKey, setApiKey] = useState(props.weather_api_key);\n  const [weather, setWeather] = useState<IWeather>();\n  const [forecast, setForecast] = useState<IForecast[]>();\n  const [city, setCity] = useState<ICity>();\n  const [forecastMode, setForecastMode] = useState<ForecastMode>(ForecastMode.TODAY);\n\n  function fetchDataFromWeatherApi() {\n    if (apiKey && cityToQuery) {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          params: {\n            url: `${WEATHER_API}${WEATHER_ENDPOINT}${API_OPTIONS}${apiKey}&q=${cityToQuery}`\n          }\n        })\n        .then((result) => {\n          setWeather(result.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error);\n        });\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          params: {\n            url: `${WEATHER_API}${FORECAST_ENDPOINT}${API_OPTIONS}${apiKey}&q=${cityToQuery}`\n          }\n        })\n        .then((result: AxiosResponse) => {\n          setForecast((result.data as IWeatherAPIResponse).list);\n          setCity((result.data as IWeatherAPIResponse).city);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromWeatherApi();\n  }, [cityToQuery, apiKey]);\n\n  function refreshWidget() {\n    setWeather(undefined);\n    setForecast(undefined);\n    setCity(undefined);\n    fetchDataFromWeatherApi();\n  }\n\n  function onConfigSubmitted(weatherApiKey: string, updatedCity: string) {\n    updateWidgetData(props.id, {\n      city: updatedCity,\n      weather_api_key: weatherApiKey\n    })\n      .then(() => {\n        setCityToQuery(updatedCity);\n        setApiKey(weatherApiKey);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function filterForecastByMode(): IForecast[] {\n    if (city && forecast) {\n      switch (forecastMode) {\n        case ForecastMode.WEEK: {\n          return forecast.filter(\n            (forecastDay) => {\n              const forecastElement = formatDateFromTimestamp(\n                forecastDay.dt,\n                adjustTimeWithOffset(city.timezone)\n              )\n              return forecastElement.getHours() === 17\n            }\n          )\n        }\n        case ForecastMode.TOMORROW: {\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date().getDay() + 1);\n        }\n        case ForecastMode.TODAY:\n        default: {\n          return forecast.filter((forecastDay) => new Date(forecastDay.dt * 1000).getDay() === new Date().getDay());\n        }\n      }\n    } else {\n      return [];\n    }\n  }\n\n  function selectTodayForecast(): void {\n    setForecastMode(ForecastMode.TODAY);\n  }\n\n  function selectTomorrowForecast(): void {\n    setForecastMode(ForecastMode.TOMORROW);\n  }\n\n  function selectWeekForecast(): void {\n    setForecastMode(ForecastMode.WEEK);\n  }\n\n  const widgetHeader = <div>La météo aujourd'hui à {city?.name}</div>;\n\n  const widgetBody = (\n    <div>\n      {city && weather && weather.weather && (\n        <div className=\"flexRow\">\n          <div>\n            <img\n              style={{ width: '80px' }}\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              title={weather.weather[0].description}\n              alt={weather.weather[0].description}\n            />\n          </div>\n          <div className=\"flexRow\" style={{ placeItems: 'center' }}>\n            <div className=\"flexColumn mr5\">\n              <div>{weather.weather[0].description}</div>\n              <div>\n                <i className=\"fa fa-thermometer-three-quarters fa-md\" />{' '}\n                {weather.main.temp}°\n              </div>\n            </div>\n            <div className=\"flexColumn\">\n              <div className=\"spaceBetween\">\n                <div>\n                  <i className=\"fa fa-sun-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunrise,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n                <div>\n                  <i className=\"fa fa-moon-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunset,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n              </div>\n              <div>\n                <i className=\"fa fa-clock-o fa-md\" />{' '}\n                {formatDateFromTimestamp(\n                  weather.dt,\n                  adjustTimeWithOffset(weather.timezone)\n                ).toLocaleString('fr')}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {city && forecast && (\n        <div>\n          <div className=\"flexRow\">\n            <span className=\"bold\">Prévisions</span>\n            <span style={{ alignContent: \"space-between\", display: \"flex\" }}>\n              <button onClick={selectTodayForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TODAY ? 'success' : 'primary'} mr-5`}>Aujourd'hui</button>\n              <button onClick={selectTomorrowForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.TOMORROW ? 'success' : 'primary'}`}>Demain</button>\n              <button onClick={selectWeekForecast} style={{ flex: \"1\" }} className={`btn btn-${forecastMode === ForecastMode.WEEK ? 'success' : 'primary'}`}>Semaine</button>\n            </span>\n          </div>\n          <br />\n          <div style={{ height: '20vh', maxWidth: \"100%\" }}>\n            <Line\n              type=\"line\"\n              data={{\n                labels:\n                  filterForecastByMode().map((forecastDay) => {\n                    if (forecastMode === ForecastMode.TODAY || forecastMode === ForecastMode.TOMORROW) {\n                      return format(new Date(forecastDay.dt * 1000), 'HH');\n                    } else {\n                      return format(new Date(forecastDay.dt * 1000), 'dd MMM');\n                    }\n                  }\n\n                  ),\n                datasets: [\n                  {\n                    label: 'Température',\n                    borderColor: 'orange',\n                    data: filterForecastByMode()\n                      .map((forecastDay) => forecastDay.main.temp_max)\n                  },\n                  {\n                    label: 'Ressenti',\n                    borderColor: 'red',\n                    data: filterForecastByMode()\n                      .map((forecastDay) => forecastDay.main.feels_like)\n                  }\n                ]\n              }}\n              options={{ maintainAspectRatio: false }}\n            />\n          </div>\n          <div className=\"flexRow forecastRow\">\n            {city &&\n              forecast &&\n              filterForecastByMode()\n                .map((forecastDay) => {\n                  return (\n                    <div className=\"forecastContainer\" key={forecastDay.dt}>\n                      <Forecast {...forecastDay} city={city} />\n                    </div>\n                  );\n                })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <Widget\n        id={props.id}\n        tabId={props.tabId}\n        config={{ city: city, apiKey: apiKey }}\n        header={widgetHeader}\n        body={widgetBody}\n        editModeComponent={\n          <EmptyWeatherWidget\n            city={cityToQuery}\n            weather_api_key={apiKey}\n            onConfigSubmitted={onConfigSubmitted}\n          />\n        }\n        refreshFunction={refreshWidget}\n        onDeleteButtonClicked={props.onDeleteButtonClicked}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp\n} from '../../../utils/DateUtils';\nimport { IForecast } from '../IWeather';\nimport './Forecast.scss';\n\nconst Forecast: React.FunctionComponent<IForecast> = (props) => {\n  return (\n    <div className=\"forecast\">\n      <div>\n        {formatDateFromTimestamp(\n          props.dt,\n          adjustTimeWithOffset(props.city.timezone)\n        ).toLocaleString('fr', {\n          weekday: 'short',\n          day: 'numeric',\n          hour: '2-digit'\n        })}\n      </div>\n      <div className=\"flexRow\">\n        <div>\n          <img\n            src={`https://openweathermap.org/img/wn/${props.weather[0]?.icon}@2x.png`}\n            className=\"smallImage\"\n            title={props.weather[0]?.description}\n            alt={props.weather[0]?.description}\n          />\n        </div>\n        <div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-three-quarters fa-sm mr10\"\n              style={{ color: 'crimson' }}\n            />\n            {props.main.temp_max}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-quarter fa-sm mr10\"\n              style={{ color: 'blue' }}\n            />\n            {props.main.temp_min}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-tint fa-sm mr10\"\n              style={{ color: 'lightblue' }}\n            />\n            {props.main.humidity}%\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import * as React from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport ITab from './ITab';\nimport './TabNavigation.scss';\n\ninterface IProps {\n  tabList: ITab[];\n}\n\nconst TabNavigation: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <div>\n      <Router>\n        <div>\n          <div className=\"tabContainer\">\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Link to={tab.path}>{tab.title}</Link>\n                </div>\n              );\n            })}\n          </div>\n          <div>\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Route\n                    path={tab.path}\n                    exact={tab.exact}\n                    component={tab.component}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default TabNavigation;\n","import * as React from 'react';\nimport ITab from '../../tab_facebook/ITab';\nimport TabNavigation from '../../tab_facebook/TabNavigation';\nimport logger from '../../utils/LogUtils';\nimport EventsTab from './events/EventsTab';\nimport { getProfileInfo } from './FacebookAPI';\nimport GroupsTab from './groups/GroupsTab';\nimport IFBUser from './IFBUser';\n\ndeclare const window: any;\ndeclare const FB: any;\n\ninterface IProps {\n  appId?: string;\n}\n\ninterface IState {\n  loginStatusResponse: any;\n  userData?: IFBUser;\n}\n\nconst tabs: ITab[] = [\n  {\n    title: 'Groupes',\n    component: GroupsTab,\n    path: '/groups/'\n  },\n  {\n    title: 'Events',\n    component: EventsTab,\n    path: '/events/'\n  }\n];\n\nexport default class FacebookWidget extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    window.fbAsyncInit = () => {\n      FB.init({\n        appId: props.appId,\n        xfbml: true,\n        version: 'v3.2'\n      });\n\n      // Broadcast an event when FB object is ready\n      const fbInitEvent = new Event('FBObjectReady');\n      document.dispatchEvent(fbInitEvent);\n    };\n    ((d, s, id) => {\n      let js: any = d.getElementsByTagName(s)[0];\n      const fjs: Element = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\n      if (fjs && fjs.parentNode) {\n        fjs.parentNode.insertBefore(js, fjs);\n      }\n    })(document, 'script', 'facebook-jssdk');\n    document.addEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public componentWillUnmount(): void {\n    document.removeEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public checkLoginStatus = (): void => {\n    FB.getLoginStatus(this.facebookLoginHandler);\n  };\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  public facebookLogin = (): void => {\n    logger.debug('facebookLogin');\n    FB.getLoginStatus((response: any) => {\n      logger.debug(response);\n      this.setState({ loginStatusResponse: response });\n      if (response.status !== 'connected') {\n        FB.login(this.facebookLoginHandler, {\n          scope:\n            'user_birthday,user_hometown,user_likes,user_photos,user_friends,user_status,user_tagged_places,user_posts,user_gender,user_link,email,public_profile'\n        });\n      }\n    });\n  };\n\n  public facebookLogout = (): void => {\n    FB.logout((response: any) => {\n      logger.debug(response);\n      this.setState({ userData: undefined, loginStatusResponse: response });\n    });\n  };\n\n  public facebookLoginHandler = (response: any): void => {\n    logger.debug('facebookLoginHandler');\n    this.setState({ loginStatusResponse: response });\n    if (response.status === 'connected') {\n      logger.debug('Connected');\n      getProfileInfo()\n        .then((result: IFBUser) => {\n          logger.debug('Result');\n          logger.debug(result);\n          this.setState({ userData: result });\n        })\n        .catch((error: Error) => {\n          logger.debug(error);\n        });\n    }\n  };\n\n  public render(): React.ReactElement {\n    let element = null;\n    if (\n      this.state &&\n      this.state.loginStatusResponse &&\n      this.state.loginStatusResponse.status === 'connected' &&\n      this.state.userData\n    ) {\n      const userData: IFBUser = this.state.userData;\n      element = (\n        <div>\n          <div>\n            {userData.first_name} {userData.last_name}\n          </div>\n          <div onClick={this.facebookLogout}>Se déconnecter</div>\n        </div>\n      );\n    } else {\n      element = (\n        <div\n          onClick={this.facebookLogin}\n          className=\"fb-login-button\"\n          data-max-rows=\"1\"\n          data-size=\"large\"\n          data-button-type=\"continue_with\"\n          data-use-continue-as=\"true\"\n        />\n      );\n    }\n    return (\n      <div>\n        {element}\n        {this.state && this.state.userData && (\n          <div>\n            <TabNavigation tabList={tabs} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\nimport { getGroupsData } from '../FacebookAPI';\nimport IGroup from './IGroup';\n\nexport default function GroupsTab(): React.ReactElement {\n  useEffect(() => {\n    getGroupsData()\n      .then((result: unknown) => {\n        logger.debug(result as IGroup[]);\n      })\n      .catch((error: Error) => {\n        logger.debug(error);\n      });\n  }, []);\n\n  return <div>Liste des groupes auxquels vous appartenez</div>;\n}\n","import logger from '../../utils/LogUtils';\nimport IFBUser from './IFBUser';\n\ninterface IFB {\n  api: (url: string, data: unknown, response: (data:unknown) => unknown) => Promise<unknown>;\n}\n\ndeclare const FB: IFB;\n\nexport function getProfileInfo(): Promise<IFBUser> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getProfile');\n    FB.api(\n      '/me',\n      {\n        fields: 'id,first_name,last_name,hometown,location,birthday,gender,link'\n      },\n      (userData: unknown) => {\n        if (userData) {\n          resolve(userData as IFBUser);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n\nexport function getGroupsData(): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getGroupsData');\n    FB.api(\n      '/me/groups',\n      {\n        fields:\n          'administrator,bookmark_order,id,unread,cover,created_time,description,icon,email,link,name,purpose,venue,picture'\n      },\n      (groupsData) => {\n        if (groupsData) {\n          resolve(groupsData);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\n\nexport default function EventsTab(): React.ReactElement {\n  useEffect(() => {\n    logger.debug('onComponentDidMount');\n  });\n\n  return <div>Liste des prochains évènements</div>;\n}\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DroppableProvided,\n  DropResult\n} from 'react-beautiful-dnd';\nimport { useSelector } from 'react-redux';\nimport { TabPane } from 'reactstrap';\nimport { ITabState } from '../reducers/tabReducer';\nimport { WidgetTypes } from '../enums/WidgetsEnum';\nimport { deleteWidget, updateWidgetsOrder } from '../services/WidgetService';\nimport logger from '../utils/LogUtils';\nimport CalendarWidget from '../widgets/calendar/CalendarWidget';\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\nimport RSSWidget from '../widgets/rss/RSSWidget';\nimport StravaWidget from '../widgets/strava/StravaWidget';\nimport WeatherWidget from '../widgets/weather/WeatherWidget';\nimport FacebookWidget from 'src/widgets/facebook/FacebookWidget';\n\ninterface IProps {\n  tabId: number;\n  newWidget?: IWidgetConfig;\n}\n\nexport default function TabDash(props: IProps): React.ReactElement {\n  const [widgets, setWidgets] = useState([]);\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n\n  function createWidget(widgetConfig: IWidgetConfig) {\n    switch (widgetConfig.type) {\n      case WidgetTypes.WEATHER: {\n        return (\n          <WeatherWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.RSS: {\n        return (\n          <RSSWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.CALENDAR: {\n        return (\n          <CalendarWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.STRAVA: {\n        return (\n          <StravaWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  function deleteWidgetFromDashboard(id: number) {\n    deleteWidget(id)\n      .then((response) => {\n        if (response) {\n          setWidgets(\n            widgets.filter((widget: IWidgetConfig) => {\n              return widget.id !== id;\n            })\n          );\n        }\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  useEffect(() => {\n    if (!widgets.length && activeTab === props.tabId) {\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/widget/?tabId=${props.tabId}`)\n        .then((result) => {\n          return result.json();\n        })\n        .then((result) => {\n          setWidgets(result);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    if (props.newWidget) {\n      setWidgets((widgets as IWidgetConfig[]).concat([props.newWidget]) as []);\n    }\n  }, [props.newWidget != null && props.newWidget.id]);\n\n  function reorder(\n    list: never[],\n    startIndex: number,\n    endIndex: number\n  ): unknown[] {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  function onDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      widgets,\n      result.source.index,\n      result.destination.index\n    ).map((widget: unknown, index: number) => {\n      (widget as IWidgetConfig).widgetOrder = index;\n      return widget;\n    });\n    updateWidgetsOrder(items as never[]).then((response) =>\n      setWidgets(response.data as [])\n    );\n  }\n\n  return (\n    <TabPane tabId={props.tabId}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(providedDroppable: DroppableProvided) => (\n            <div\n              {...providedDroppable.droppableProps}\n              ref={providedDroppable.innerRef}\n            >\n              <div className=\"widgetList\">\n              <FacebookWidget />\n                {widgets &&\n                  widgets.length > 0 &&\n                  widgets.map((widgetConfig: IWidgetConfig, index) => {\n                    return (\n                      <Draggable\n                        key={widgetConfig.id}\n                        draggableId={widgetConfig.id.toString()}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            key={widgetConfig.id}\n                            className=\"widget\"\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {createWidget(widgetConfig)}\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                {providedDroppable.placeholder}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </TabPane>\n  );\n}\n","import 'font-awesome/fonts/fontawesome-webfont.svg';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DroppableProvided,\n  DropResult\n} from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Nav,\n  TabContent\n} from 'reactstrap';\nimport './Dash.scss';\nimport { ITab } from './model/Tab';\nimport NavDash from './navigation/navDash/NavDash';\nimport Store from './pages/store/Store';\nimport { toggleSelectedTab } from './reducers/actions';\nimport { ITabState } from './reducers/tabReducer';\nimport { addTab, updateTabs } from './services/TabService';\nimport { addWidget } from './services/WidgetService';\nimport TabDash from './tab/TabDash';\nimport logger from './utils/LogUtils';\nimport { IWidgetConfig } from './widgets/IWidgetConfig';\n\nexport interface IMenu {\n  link: string;\n  icon: string;\n}\n\nexport default function Dash(): React.ReactElement {\n  const [tabs, setTabs] = useState<ITab[]>([]);\n  const [newWidget, setNewWidget] = useState<IWidgetConfig>();\n  const [modal, setModal] = useState(false);\n\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n  const dispatch = useDispatch();\n\n  function initDashboard() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/tab/`)\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        if (!result || result.length === 0) {\n          addNewTab();\n        }\n        setTabs(result);\n        dispatch(toggleSelectedTab(result[0].id));\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function toggleTab(tab: number) {\n    if (activeTab !== tab) {\n      dispatch(toggleSelectedTab(tab));\n    }\n  }\n\n  function addNewTab() {\n    const newTabLabel = 'Nouvel onglet';\n    addTab(newTabLabel).then((response) => {\n      const insertedTab = response.data as ITab;\n      setTabs(tabs.concat(insertedTab));\n      dispatch(toggleSelectedTab(insertedTab.id));\n    });\n  }\n\n  function getNewWidget(tabId: number) {\n    if (newWidget && tabId === newWidget.tab.id) {\n      return newWidget;\n    } else {\n      return undefined;\n    }\n  }\n\n  function toggleModal() {\n    setModal(!modal);\n  }\n\n  function onWidgetAdded(type: React.MouseEvent<HTMLButtonElement>) {\n    if (activeTab) {\n      addWidget(type.currentTarget.value, activeTab)\n        .then((response) => {\n          if (response) {\n            const widgetData = response.data as IWidgetConfig;\n            setNewWidget(widgetData);\n          }\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function onTabDeleted(id: number) {\n    setTabs(tabs.filter((tab) => tab.id !== id));\n    if (activeTab === id) {\n      dispatch(toggleSelectedTab(tabs[0].id));\n    }\n  }\n\n  function reorder(\n    list: unknown[],\n    startIndex: number,\n    endIndex: number\n  ): unknown[] {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  function onDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      tabs,\n      result.source.index,\n      result.destination.index\n    ).map((tab, index) => {\n      (tab as ITab).tabOrder = index;\n      return tab;\n    });\n    updateTabs(items as ITab[]).then((response) => {\n      setTabs(response.data as ITab[]);\n    });\n  }\n\n  useEffect(initDashboard, []);\n\n  return (\n    <div className=\"dash\">\n      <div className=\"flexRow\">\n        <div className=\"dashNavbar\">\n          <Nav vertical={true} navbar={true}>\n            <Button\n              id=\"openAddWidgetModal\"\n              className=\"dashNavbarLink\"\n              onClick={toggleModal}\n            >\n              <i className=\"fa fa-plus-circle fa-lg\" aria-hidden=\"true\" />\n            </Button>\n            <Modal isOpen={modal} toggle={toggleModal}>\n              <ModalHeader toggle={toggleModal}>Ajouter un widget</ModalHeader>\n              <ModalBody>\n                <Store onWidgetAdded={onWidgetAdded} />\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  id=\"closeAddWidgetModal\"\n                  color=\"primary\"\n                  onClick={toggleModal}\n                >\n                  Fermer\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </Nav>\n        </div>\n\n        <div className=\"flexColumn tabsBar\">\n          <Nav tabs={true}>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                {(providedDroppable: DroppableProvided) => (\n                  <div\n                    className=\"flexRow\"\n                    {...providedDroppable.droppableProps}\n                    ref={providedDroppable.innerRef}\n                  >\n                    {tabs.length > 0 &&\n                      tabs.map((tab: ITab, index: number) => {\n                        return (\n                          <Draggable\n                            key={tab.id}\n                            draggableId={tab.id.toString()}\n                            index={index}\n                          >\n                            {(providedDraggable) => (\n                              <div\n                                key={tab.id}\n                                ref={providedDraggable.innerRef}\n                                {...providedDraggable.draggableProps}\n                                {...providedDraggable.dragHandleProps}\n                                className={`tab ${\n                                  tab.id === activeTab ? 'selectedItem' : ''\n                                }`}\n                              >\n                                <NavDash\n                                  tab={tab}\n                                  onTabClicked={() => toggleTab(tab.id)}\n                                  onTabDeleted={onTabDeleted}\n                                />\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n            <Button onClick={addNewTab} id=\"addNewTabButton\" className=\"fa fa-plus-circle fa-lg\" />\n          </Nav>\n          <TabContent activeTab={activeTab}>\n            {tabs.length > 0 &&\n              tabs.map((tab: ITab) => {\n                return (\n                  <TabDash\n                    key={tab.id}\n                    newWidget={getNewWidget(tab.id)}\n                    tabId={tab.id}\n                  />\n                );\n              })}\n          </TabContent>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport interface ITabState {\n  activeTab: number;\n}\n\nconst initialState: ITabState = {\n  activeTab: -1\n};\n\nexport default function (\n  state = initialState,\n  action: { type: string; payload: { id: number } }\n): ITabState {\n  switch (action.type) {\n    case TOGGLE_TAB: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        activeTab: id\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport rootReducer from './tabReducer';\n\nexport default createStore(rootReducer);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dash from './Dash';\nimport './index.scss';\nimport store from './reducers/store';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Dash />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}