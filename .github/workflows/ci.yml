# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
       
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 15.8.0 # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - run: yarn install --frozen-lockfile
    - run: yarn global add npm-run-all wait-on

    -
      name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - run: docker-compose up -d

    - run: npm run lint:styles
    - run: npm run eslint
    - run: npm run build

    - run: npm run ci

    - run :  mkdir coverage-reports || true && mkdir .nyc_output || true
    - run :  cp cypress-coverage/coverage-final.json coverage-reports/from-cypress.json
    - run :  cp jest-coverage/coverage-final.json coverage-reports/from-jest.json
    - run :  npx nyc merge coverage-reports && mv coverage.json .nyc_output/out.json
    - run :  npx nyc report --reporter lcov --report-dir coverage
    - run :  cat ./coverage/lcov.info | codacy-coverage
    - run :  bash <(curl -s https://codecov.io/bash)

    - name: Deploy with gh-pages
      run: |
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        npx gh-pages -b website -d build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}